{"version":3,"file":"static/js/719.a563e0aa.chunk.js","mappings":"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","sources":["assets/icons/download.svg","components/tab/index.jsx","assets/icons/org.svg","containers/form/components/PhoneNumber.jsx","components/search/index.jsx","components/input-mask/index.jsx","modules/hrm/containers/OrganizationsContainer.jsx","modules/hrm/pages/OrganizationsPage.jsx"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDownload(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 21,\n    viewBox: \"0 0 20 21\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10 2.375C10.3452 2.375 10.625 2.65482 10.625 3V11.4911L13.7247 8.39139C13.9688 8.14731 14.3645 8.14731 14.6086 8.39139C14.8527 8.63547 14.8527 9.0312 14.6086 9.27528L10.4419 13.4419C10.1979 13.686 9.80214 13.686 9.55806 13.4419L5.39139 9.27528C5.14731 9.0312 5.14731 8.63547 5.39139 8.39139C5.63547 8.14731 6.0312 8.14731 6.27528 8.39139L9.375 11.4911V3C9.375 2.65482 9.65482 2.375 10 2.375ZM2.5 12.375C2.84518 12.375 3.125 12.6548 3.125 13V14C3.125 14.7104 3.12549 15.2056 3.15699 15.5911C3.18789 15.9693 3.2455 16.1866 3.32936 16.3512C3.50913 16.704 3.79596 16.9909 4.14877 17.1706C4.31337 17.2545 4.53067 17.3121 4.9089 17.343C5.29443 17.3745 5.78962 17.375 6.5 17.375H13.5C14.2104 17.375 14.7056 17.3745 15.0911 17.343C15.4693 17.3121 15.6866 17.2545 15.8512 17.1706C16.204 16.9909 16.4909 16.704 16.6706 16.3512C16.7545 16.1866 16.8121 15.9693 16.843 15.5911C16.8745 15.2056 16.875 14.7104 16.875 14V13C16.875 12.6548 17.1548 12.375 17.5 12.375C17.8452 12.375 18.125 12.6548 18.125 13V14.0268C18.125 14.7041 18.125 15.2505 18.0889 15.6929C18.0516 16.1484 17.973 16.5485 17.7844 16.9187C17.4848 17.5067 17.0067 17.9848 16.4187 18.2844C16.0485 18.473 15.6484 18.5516 15.1929 18.5889C14.7505 18.625 14.2041 18.625 13.5268 18.625H6.47323C5.79587 18.625 5.24953 18.625 4.80711 18.5889C4.35158 18.5516 3.95146 18.473 3.58128 18.2844C2.99327 17.9848 2.51521 17.5067 2.2156 16.9187C2.02699 16.5485 1.94835 16.1484 1.91114 15.6929C1.87499 15.2505 1.87499 14.7041 1.875 14.0268L1.875 13C1.875 12.6548 2.15482 12.375 2.5 12.375Z\",\n    fill: \"#006D85\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDownload);\nexport default __webpack_public_path__ + \"static/media/download.5c6fa236248d121782afeb4b8fd485fb.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useEffect, useState} from 'react';\r\nimport clsx from \"clsx\";\r\nimport {useSearchParams} from \"react-router-dom\";\r\nimport {isArray} from \"lodash\";\r\n\r\nconst Tabs = ({children}) => {\r\n    const [searchParams] = useSearchParams();\r\n    const [activeTab, setActiveTab] = useState(searchParams.get('tab') ?? children[0]?.props?.label);\r\n\r\n    useEffect(() => {\r\n        if (searchParams.get('tab')) {\r\n            setActiveTab(searchParams.get('tab'));\r\n        }\r\n    }, [searchParams.get('tab')])\r\n\r\n    const handleClick = (e, newActiveTab) => {\r\n        e.preventDefault();\r\n        setActiveTab(newActiveTab);\r\n    };\r\n    return (\r\n        <div>\r\n            <div className=\"flex border-b border-[rgba(0,0,0,0.1)]\">\r\n                { isArray(children) ? children.map(child => (\r\n                    <button\r\n                        key={child?.props?.label}\r\n                        className={clsx('tab__item_link', {'active': activeTab === child?.props?.label})}\r\n                        onClick={e => handleClick(e, child?.props?.label)}\r\n                    >\r\n                        {child?.props?.label}\r\n                    </button>\r\n                )): <button\r\n                    key={children?.props?.label}\r\n                    className={clsx('tab__item_link', {'active': activeTab === children?.props?.label})}\r\n                    onClick={e => handleClick(e, children?.props?.label)}\r\n                >\r\n                    {children?.props?.label}\r\n                </button>}\r\n            </div>\r\n            <div className=\"py-6\">\r\n                {isArray(children) ? children.map(child => {\r\n                    if (child?.props?.label === activeTab) {\r\n                        return <div key={child?.props?.label}>{child?.props?.children}</div>;\r\n                    }\r\n                    return null;\r\n                }):<div key={children?.props?.label}>{children?.props?.children}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Tab = ({label, children}) => {\r\n    return (\r\n        <div label={label} className=\"hidden\">\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\nexport {Tabs, Tab};","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgOrg(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M17.0717 2.92835C15.2648 1.1215 12.7648 0 10 0C7.2352 0 4.7352 1.1215 2.92835 2.92835C1.1215 4.7352 0 7.2352 0 10C0 12.7648 1.1215 15.2648 2.92835 17.0717C4.7352 18.8785 7.2352 20 10 20C12.7648 20 15.2648 18.8785 17.0717 17.0717C18.8785 15.2648 20 12.7648 20 10C20 7.2352 18.8863 4.7352 17.0717 2.92835Z\",\n    fill: \"#404C75\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M17.0719 2.92895C16.5034 2.36041 15.8725 1.86197 15.1794 1.44141L0.0859375 11.309C0.381888 13.5442 1.40993 15.5536 2.92862 17.0722C4.73547 18.8791 7.23547 20.0006 10.0003 20.0006C10.2183 20.0006 10.4286 19.9928 10.6389 19.9772L18.4115 4.58004C18.0221 3.98814 17.5781 3.42739 17.0719 2.92895Z\",\n    fill: \"#5D72A7\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M2.51504 8.29492C2.96676 8.5052 3.14588 9.21393 3.07579 10.094C2.95897 11.5582 3.27049 13.4507 5.1085 14.3853C4.81255 13.3417 3.5976 13.0457 4.34526 11.5426C4.43093 11.932 4.52439 11.9242 4.61785 12.0955C6.47143 15.4678 9.5166 13.9024 9.89043 19.0971C8.58202 17.0332 5.06177 16.3712 3.44962 14.6579C2.22688 13.365 1.6895 11.6438 2.28919 9.11268C2.35149 8.84788 2.44495 8.71548 2.51504 8.29492Z\",\n    fill: \"white\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10.5596 7.87347C5.4895 6.03547 5.13904 11.0822 9.111 14.7816C6.32284 13.8548 2.90383 9.95291 5.21692 6.90774C7.19511 4.67254 9.29013 6.01989 10.5596 7.87347Z\",\n    fill: \"white\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10.5234 9.03361C14.4097 8.15355 14.916 12.0243 10.9752 14.8436C14.0281 14.018 16.4502 10.9884 14.5733 8.51959C13.4206 7.24234 11.5437 7.53828 10.5234 9.03361Z\",\n    fill: \"white\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8.69045 2.32812C9.54714 2.32812 10.2481 3.02127 10.2481 3.88576C10.2481 4.74246 9.55493 5.44339 8.69045 5.44339C7.83375 5.44339 7.13281 4.75024 7.13281 3.88576C7.1406 3.02906 7.83375 2.32812 8.69045 2.32812Z\",\n    fill: \"white\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M12.4689 4.92188C13.1309 4.92188 13.6605 5.45926 13.6605 6.11346C13.6605 6.77546 13.1231 7.30505 12.4689 7.30505C11.8069 7.30505 11.2773 6.76767 11.2773 6.11346C11.2773 5.45147 11.8069 4.92188 12.4689 4.92188Z\",\n    fill: \"white\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8.64535 9.97656C8.41171 11.9158 9.14379 13.7538 10.1095 14.9921C10.203 12.8582 10.8494 11.0981 11.8852 10.0856C11.1687 10.3893 10.3198 11.0202 9.83694 12.3364C9.3385 11.8691 9.09707 11.5108 8.64535 9.97656Z\",\n    fill: \"white\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M9.96152 9.7967C10.2419 9.86679 10.4132 10.1861 10.3276 10.5054C10.2497 10.8325 9.95373 11.035 9.67336 10.9649C9.39298 10.8948 9.22164 10.5755 9.30731 10.2562C9.3852 9.93689 9.68115 9.72661 9.96152 9.7967Z\",\n    fill: \"white\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M17.5941 8.29492C17.1424 8.5052 16.9633 9.21393 17.0334 10.094C17.1502 11.5582 16.8387 13.4507 15.0007 14.3853C15.2966 13.3417 16.5116 13.0457 15.7639 11.5426C15.6783 11.932 15.5848 11.9242 15.4913 12.0955C13.6378 15.4678 10.5926 13.9024 10.2188 19.0971C11.5272 17.0332 15.0474 16.3712 16.6596 14.6579C17.8823 13.365 18.4197 11.6438 17.82 9.11268C17.7577 8.84788 17.6642 8.71548 17.5941 8.29492Z\",\n    fill: \"white\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOrg);\nexport default __webpack_public_path__ + \"static/media/org.448a04db9e5edb718d2aea958fdd974c.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport {PatternFormat} from 'react-number-format';\r\nimport {Controller} from \"react-hook-form\";\r\nimport {get, hasIn} from \"lodash\";\r\nimport clsx from \"clsx\";\r\n\r\n\r\nconst PhoneInput = ({\r\n                        control,\r\n                        disabled = false,\r\n                        name,\r\n                        errors,\r\n                        params,\r\n                        property,\r\n                        defaultValue = '',\r\n                        label,\r\n                        classNames = '',\r\n                        format = \"+998(##) ### ## ##\"\r\n                    }) => {\r\n    console.log('name',name)\r\n    return (\r\n        <div className={clsx(\"form-group\", classNames)}>\r\n            <label className={'form-label'}>{label ?? name}</label>\r\n            <Controller\r\n                control={control}\r\n                name={name}\r\n                rules={params}\r\n                defaultValue={defaultValue}\r\n                render={({field, value, onChange}) => (\r\n                    <PatternFormat name={name}\r\n                                   {...field}\r\n                                   format={format}\r\n                                   className={clsx('form-input  w-full', {'border-red-600': hasIn(errors, name)})}\r\n                                   value={value}\r\n                                   onChange={onChange}\r\n                                   mask={\"_\"}\r\n                                   allowEmptyFormatting\r\n                    />)\r\n                }\r\n            />\r\n            {errors[name]?.type == \"required\" &&\r\n                <span className={'form-error'}>This field is required</span>}\r\n            {errors[name]?.type === 'validation' &&\r\n                <span className={'form-error'}>{get(errors, `${name}.message`)}</span>}\r\n            {errors[name]?.type === 'pattern' &&\r\n                <span className={'form-error'}>{get(errors, `${name}.message`)}</span>}\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PhoneInput;","import React from 'react';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Search} from \"react-feather\";\r\nimport {useForm} from \"react-hook-form\"\r\n\r\nconst Index = ({\r\n                   handleSearch = () => {\r\n                   }\r\n               }) => {\r\n    const {t} = useTranslation()\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n    } = useForm()\r\n\r\n    const onSubmit = ({search = undefined}) => {\r\n        handleSearch(search)\r\n    }\r\n    return (\r\n        <form className={'relative'} onSubmit={handleSubmit(onSubmit)}>\r\n            <Search color={'#A7A7A7'} size={20} className={'absolute z-10 top-1/2 left-2.5 -translate-y-1/2'}/>\r\n            <input {...register(\"search\")} className={'py-2.5 pr-5 pl-10 w-80 rounded-lg outline-none'} type=\"text\"\r\n                   placeholder={t('Поиск по наименованию')}/>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Index;","import React, {useState} from 'react';\r\nimport clsx from \"clsx\";\r\nimport InputMask from \"react-input-mask\";\r\nconst InputMaskComponent = ({\r\n                    label = '',\r\n                    handleValue = () => {\r\n                    },\r\n                   mask='',\r\n                   maskChar='-',\r\n                   placeholder=''\r\n                }) => {\r\n    const [value,setValue] = useState('')\r\n\r\n    return (\r\n        <div className={clsx('flex items-center')}>\r\n            {label && <label className={clsx('mr-2 text-secondary-300 font-bold flex items-center')}\r\n                             htmlFor={label}>{label}</label>}\r\n            <InputMask\r\n                className={clsx('py-2.5 px-4 w-36 rounded-lg outline-none')}\r\n                placeholder={placeholder}\r\n                mask={mask}\r\n                maskChar={maskChar}\r\n                // value={value}\r\n                // onChange={setValue}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputMaskComponent;","import React, {useState} from 'react';\r\nimport Title from \"../../../components/title\";\r\nimport GridView from \"../../../containers/grid-view\";\r\nimport {KEYS} from \"../../../constants/keys\";\r\nimport {URLS} from \"../../../constants/urls\";\r\nimport {get,isObject} from \"lodash\"\r\nimport downloadIcon from \"../../../assets/icons/download.svg\"\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Modal from \"../../../components/modal\";\r\nimport {Tab, Tabs} from \"../../../components/tab\";\r\nimport Form from \"../../../containers/form\";\r\nimport {InputMask, Select} from \"../../../containers/form/components\";\r\nimport Input from \"../../../containers/form/components/Input\";\r\nimport orgIcon from \"../../../assets/icons/org.svg\"\r\nimport {Minus, Plus} from \"react-feather\";\r\nimport {useGetAllQuery} from \"../../../hooks/api\";\r\nimport clsx from \"clsx\";\r\nimport PhoneNumber from \"../../../containers/form/components/PhoneNumber\";\r\nimport Search from \"../../../components/search\"\r\nimport SelectComponent from \"../../../components/select\";\r\nimport InputMaskComponent from \"../../../components/input-mask\";\r\n\r\n\r\nconst OrganizationsContainer = () => {\r\n    const navigate = useNavigate();\r\n    const [open, setOpen] = useState(false);\r\n    let [lang, setLang] = useState('uz');\r\n    let [orgData, setOrgData] = useState({});\r\n    let [regionId, setRegionId] = useState(null);\r\n    let [districtId, setDistrictId] = useState(null);\r\n    let [increment, setIncrement] = useState(0);\r\n    const [search, setSearch] = useState(null)\r\n    const {t} = useTranslation();\r\n    const {data: orgSelectList} = useGetAllQuery({\r\n        key: KEYS.organizationsListForSelect,\r\n        url: URLS.organizationsListForSelect,\r\n    })\r\n\r\n    const {data: organizationTypeLevelList} = useGetAllQuery({\r\n        key: KEYS.organizationTypeLevel,\r\n        url: URLS.organizationTypeLevel,\r\n    })\r\n\r\n    const {data: organizationTypeMedicalList} = useGetAllQuery({\r\n        key: KEYS.organizationTypeMedical,\r\n        url: URLS.organizationTypeMedical,\r\n    })\r\n\r\n    const {data: organizationLegalFormList} = useGetAllQuery({\r\n        key: KEYS.organizationLegalForm,\r\n        url: URLS.organizationLegalForm,\r\n    })\r\n\r\n    const {data: organizationTypeServiceList} = useGetAllQuery({\r\n        key: KEYS.organizationTypeService,\r\n        url: URLS.organizationTypeService,\r\n    })\r\n\r\n    const {data: organizationManagementFormList} = useGetAllQuery({\r\n        key: KEYS.organizationManagementForm,\r\n        url: URLS.organizationManagementForm,\r\n    })\r\n\r\n    const {data: organizationCountryList} = useGetAllQuery({\r\n        key: KEYS.organizationCountry,\r\n        url: URLS.organizationCountry,\r\n    })\r\n\r\n    const {data: organizationRegions} = useGetAllQuery({\r\n        key: KEYS.organizationTerritory,\r\n        url: URLS.organizationTerritory,\r\n        params: {\r\n            params: {\r\n                level: 1\r\n            }\r\n        }\r\n    })\r\n\r\n    const {data: organizationDistricts} = useGetAllQuery({\r\n        key: KEYS.organizationTerritory,\r\n        url: URLS.organizationTerritory,\r\n        params: {\r\n            params: {\r\n                level: 2,\r\n                parent_id: isObject(regionId) ? get(regionId,'value') : regionId\r\n            },\r\n        },\r\n        enabled: !!(regionId)\r\n    })\r\n    const {data: organizationNeighbors} = useGetAllQuery({\r\n        key: KEYS.organizationTerritory,\r\n        url: URLS.organizationTerritory,\r\n        params: {\r\n            params: {\r\n                level: 3,\r\n                parent_id:isObject(districtId) ? get(districtId,'value') : districtId\r\n            },\r\n        },\r\n        enabled: !!(districtId)\r\n    })\r\n\r\n    const columns = [\r\n        {\r\n            title: t('НАИМЕНОВАНИЕ'),\r\n            key: 'display',\r\n        },\r\n        {\r\n            title: t('РОДИТЕЛЬСКАЯ ОРГАНИЗАЦИЯ'),\r\n            key: 'parent.display',\r\n        },\r\n        {\r\n            title: t('ТИП ОРГАНИЗАЦИИ'),\r\n            key: 'medical_type.display',\r\n        },\r\n        {\r\n            title: t('УРОВЕНЬ'),\r\n            key: 'level.display',\r\n        },\r\n        {\r\n            title: t('СТАТУС'),\r\n            key: 'active',\r\n        }\r\n    ]\r\n    const onSubmit = () => {\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"grid grid-cols-12 items-center\">\r\n                <div className=\"col-span-6\">\r\n                    <Title>{t(\"Организации\")}</Title>\r\n                </div>\r\n                <div className=\"col-span-6 flex items-center justify-end\">\r\n                    <button\r\n                        onClick={() => setOpen(true)}\r\n                        className={'inline-flex py-2.5 pl-2.5 pr-5 rounded-lg bg-primary items-center text-white font-semibold text-center mr-4'}>\r\n                        <Plus className={'mr-1.5'}/>\r\n                        {t('Добавить организацию')}\r\n                    </button>\r\n                    <button\r\n                        className={'inline-flex items-center py-2.5 pl-2.5 pr-5 text-sm font-bold text-primary border border-primary rounded-lg'}>\r\n                        <img className={'mr-2.5'} src={downloadIcon} alt={'export'}/>\r\n                        {t(\"Export\")}\r\n                    </button>\r\n                </div>\r\n                <div className=\"col-span-4 mt-5\">\r\n                    <Search handleSearch={setSearch}/>\r\n                </div>\r\n                <div className=\"col-span-8 mt-5 flex justify-end\">\r\n                    <div className=\"mr-6\"><SelectComponent\r\n                        value={regionId}\r\n                        setValue={(val)=>setRegionId(val)}\r\n                        label={t('Регион')} options={get(organizationRegions, 'data', []).map(_option => ({\r\n                        value: get(_option, 'id'),\r\n                        label: get(_option, 'display')\r\n                    }))}/></div>\r\n                    <div className=\"mr-6\">\r\n                        <SelectComponent\r\n                            setValue={(val)=>setDistrictId(val)}\r\n                            value={districtId}\r\n                            options={get(organizationDistricts, 'data', []).map(_option => ({\r\n                                value: get(_option, 'id'),\r\n                                label: get(_option, 'display')\r\n                            }))}\r\n                            label={t('Район')} />\r\n                    </div>\r\n                    <InputMaskComponent mask={'999999999'} label={'ИНН'}/>\r\n                </div>\r\n                <div className=\"col-span-12 mt-6\">\r\n                    <GridView\r\n                        params={{search: search ?? null}}\r\n                        hasActionColumn\r\n                        listKey={KEYS.organizations} url={URLS.organizations}\r\n                        columns={columns}/>\r\n                </div>\r\n            </div>\r\n            <Modal open={open} onClose={() => setOpen(false)} classNames={'!w-[1080px] !pb-0'}\r\n                   title={t('Добавление организации')}>\r\n                <Tabs>\r\n                    <Tab label={t('Информация')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} onSubmit={onSubmit}>\r\n                            <InputMask params={{required: true}} classNames={'col-span-6'} name={'tin'}\r\n                                       property={{\r\n                                           placeholder: t('Введите ИНН организации'),\r\n                                           mask: '999999999',\r\n                                           maskChar: '_'\r\n                                       }}\r\n                                       label={<div className={'flex'}><span>{t('ИНН организации')}</span><img\r\n                                           className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Select classNames={'col-span-6'} name={'parent'}\r\n                                    label={t('Родительская организация')}\r\n                                    options={get(orgSelectList, 'data', []).map(_option => ({\r\n                                        value: get(_option, 'id'),\r\n                                        label: get(_option, 'display')\r\n                                    }))}/>\r\n                            <Select classNames={'col-span-6'} name={'level'}\r\n                                    label={<div className={'flex'}><span>{t('Уровень оказания услуг')}</span><img\r\n                                        className={'ml-1'} src={orgIcon} alt=\"org\"/></div>} params={{required: true}}\r\n                                    options={get(organizationTypeLevelList, 'data', []).map(_option => ({\r\n                                        value: get(_option, 'id'),\r\n                                        label: get(_option, 'display')\r\n                                    }))}/>\r\n                            <Select classNames={'col-span-6'} name={'medical_type'}\r\n                                    label={<div className={'flex'}><span>{t('Тип организации')}</span><img\r\n                                        className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                    params={{required: true}}\r\n                                    options={get(organizationTypeMedicalList, 'data', []).map(_option => ({\r\n                                        value: get(_option, 'id'),\r\n                                        label: get(_option, 'display')\r\n                                    }))}/>\r\n                            <Select classNames={'col-span-6'} name={'legal_form'}\r\n                                    label={t('Организационно-правовая форма')}\r\n                                    options={get(organizationLegalFormList, 'data', []).map(_option => ({\r\n                                        value: get(_option, 'id'),\r\n                                        label: get(_option, 'display')\r\n                                    }))}/>\r\n                            <Select classNames={'col-span-6'} name={'service_types'}\r\n                                    label={t('Виды оказания услуг')}\r\n                                    isMulti\r\n                                    options={get(organizationTypeServiceList, 'data', []).map(_option => ({\r\n                                        value: get(_option, 'id'),\r\n                                        label: get(_option, 'display')\r\n                                    }))}/>\r\n                            <Select classNames={'col-span-6'} name={'affiliation'}\r\n                                    label={t('Орган государственного управления')}\r\n                                    options={get(organizationManagementFormList, 'data', []).map(_option => ({\r\n                                        value: get(_option, 'id'),\r\n                                        label: get(_option, 'display')\r\n                                    }))}/>\r\n\r\n                            {/*<Input classNames={'col-span-6'} name={'founder'}*/}\r\n                            {/*       placeholder={t('Учредитель')}*/}\r\n                            {/*       label={t('Учредитель')}*/}\r\n                            {/*/>*/}\r\n                            <div className={'col-span-12 '}>\r\n                                <div className=\"flex justify-end\">\r\n                                    <button onClick={() => setOpen(false)} type={'button'}\r\n                                            className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                        {t('Назад')}\r\n                                    </button>\r\n                                    <button type={'submit'}\r\n                                            className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                        {t('Следующий шаг')}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab label={t('Наименование')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} onSubmit={onSubmit}>\r\n                            <div className={'flex col-span-12 mb-4'}>\r\n                                <button onClick={() => setLang('uz')}\r\n                                        className={clsx('py-2 px-4 border border-[#EAEFF8] rounded-lg mr-2.5 ', {'!bg-[#E5F0F3] !border-[#E5F0F3]': lang == 'uz'})}>O’zbekcha\r\n                                </button>\r\n                                <button onClick={() => setLang('ru')}\r\n                                        className={clsx('py-2 px-4 border border-[#EAEFF8] rounded-lg mr-2.5', {'!bg-[#E5F0F3] !border-[#E5F0F3]': lang == 'ru'})}>Русский\r\n                                </button>\r\n                                <button onClick={() => setLang('en')}\r\n                                        className={clsx('py-2 px-4 border border-[#EAEFF8] rounded-lg mr-2.5', {'!bg-[#E5F0F3] !border-[#E5F0F3]': lang == 'en'})}>English\r\n                                </button>\r\n                            </div>\r\n                            <Input defaultValue={0} classNames={'col-span-5'} name={`names[0].id`}\r\n                                   placeholder={t('Введите краткое наименование')}\r\n                                   property={{type: 'hidden'}}\r\n                                   label={<div className={'flex'}><span>{t('Краткое наименование')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Input defaultValue={'uz'} classNames={'col-span-5'} name={`names[0].locale`}\r\n                                   placeholder={t('Введите краткое наименование')}\r\n                                   property={{type: 'hidden'}}\r\n                                   label={<div className={'flex'}><span>{t('Краткое наименование')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Input classNames={'col-span-5'} name={`names[0].value_short`}\r\n                                   placeholder={t('Введите краткое наименование')}\r\n                                   property={{type: lang == 'uz' ? 'text' : 'hidden'}}\r\n                                   label={<div className={'flex'}><span>{t('Краткое наименование')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Input classNames={'col-span-7'} name={'names[0].value'}\r\n                                   placeholder={t('Введите полное наименование')}\r\n                                   property={{type: lang == 'uz' ? 'text' : 'hidden'}}\r\n                                   label={<div className={'flex'}><span>{t('Полное наименование')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Input defaultValue={1} classNames={'col-span-5'} name={`names[1].id`}\r\n                                   placeholder={t('Введите краткое наименование')}\r\n                                   property={{type: 'hidden'}}\r\n                                   label={<div className={'flex'}><span>{t('Краткое наименование')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Input defaultValue={'ru'} classNames={'col-span-5'} name={`names[1].locale`}\r\n                                   placeholder={t('Введите краткое наименование')}\r\n                                   property={{type: 'hidden'}}\r\n                                   label={<div className={'flex'}><span>{t('Краткое наименование')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Input classNames={'col-span-5'} name={'names[1].value_short'}\r\n                                   property={{type: lang == 'ru' ? 'text' : 'hidden'}}\r\n                                   placeholder={t('Введите краткое наименование')}\r\n                                   label={<div className={'flex'}><span>{t('Краткое наименование')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Input classNames={'col-span-7'} name={'names[1].value'}\r\n                                   property={{type: lang == 'ru' ? 'text' : 'hidden'}}\r\n                                   placeholder={t('Введите полное наименование')}\r\n                                   label={<div className={'flex'}><span>{t('Полное наименование')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Input defaultValue={2} classNames={'col-span-5'} name={`names[2].id`}\r\n                                   placeholder={t('Введите краткое наименование')}\r\n                                   property={{type: 'hidden'}}\r\n                                   label={<div className={'flex'}><span>{t('Краткое наименование')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Input defaultValue={'en'} classNames={'col-span-5'} name={`names[2].locale`}\r\n                                   placeholder={t('Введите краткое наименование')}\r\n                                   property={{type: 'hidden'}}\r\n                                   label={<div className={'flex'}><span>{t('Краткое наименование')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Input classNames={'col-span-5'} name={'names[2].value_short'}\r\n                                   property={{type: lang == 'en' ? 'text' : 'hidden'}}\r\n                                   placeholder={t('Введите краткое наименование')}\r\n                                   label={<div className={'flex'}><span>{t('Краткое наименование')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Input classNames={'col-span-7'} name={'names[2].value'}\r\n                                   property={{type: lang == 'en' ? 'text' : 'hidden'}}\r\n                                   placeholder={t('Введите полное наименование')}\r\n                                   label={<div className={'flex'}><span>{t('Полное наименование')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <div className={'col-span-12 '}>\r\n                                <div className=\"flex justify-end\">\r\n                                    <button onClick={() => setOpen(false)} type={'button'}\r\n                                            className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                        {t('Назад')}\r\n                                    </button>\r\n                                    <button type={'submit'}\r\n                                            className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                        {t('Следующий шаг')}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab label={t('Адрес')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} onSubmit={onSubmit}>\r\n                            <Select classNames={'col-span-4'} name={'medical_type'}\r\n                                    label={<div className={'flex'}><span>{t('Страна')}</span><img\r\n                                        className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                    params={{required: true}}\r\n                                    options={get(organizationCountryList, 'data', []).map(_option => ({\r\n                                        value: get(_option, 'id'),\r\n                                        label: get(_option, 'display')\r\n                                    }))}/>\r\n                            <Select classNames={'col-span-4'} name={'medical_type'}\r\n                                    label={<div className={'flex'}><span>{t('Регион')}</span><img\r\n                                        className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                    params={{required: true}}\r\n                                    property={{onChange: (val) => setRegionId(get(val, 'value'))}}\r\n                                    options={get(organizationRegions, 'data', []).map(_option => ({\r\n                                        value: get(_option, 'id'),\r\n                                        label: get(_option, 'display')\r\n                                    }))}/>\r\n                            <Select classNames={'col-span-4'} name={'medical_type'}\r\n                                    label={<div className={'flex'}><span>{t('Район')}</span><img\r\n                                        className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                    params={{required: true}}\r\n                                    property={{onChange: (val) => setDistrictId(get(val, 'value'))}}\r\n                                    options={get(organizationDistricts, 'data', []).map(_option => ({\r\n                                        value: get(_option, 'id'),\r\n                                        label: get(_option, 'display'),\r\n                                        ..._option\r\n                                    }))}\r\n                            />\r\n                            <Select classNames={'col-span-4'} name={'medical_type'}\r\n                                    label={<div className={'flex'}><span>{t('Махалля')}</span><img\r\n                                        className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                    params={{required: true}}\r\n                                    options={get(organizationNeighbors, 'data', []).map(_option => ({\r\n                                        value: get(_option, 'id'),\r\n                                        label: get(_option, 'display'),\r\n                                        ..._option\r\n                                    }))}\r\n                            />\r\n                            <Input classNames={'col-span-4'} name={'locations[0].address.line'}\r\n                                   params={{required: true}}\r\n                                   placeholder={t('Улица')}\r\n                                   label={<div className={'flex'}><span>{t('Улица')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Input classNames={'col-span-2'} name={'locations[0].address.block'}\r\n                                   params={{required: true}}\r\n                                   placeholder={t('Дом')}\r\n                                   label={<div className={'flex'}><span>{t('Дом')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Input classNames={'col-span-2'} name={'locations[0].address.postal_code'}\r\n                                   placeholder={t('Почтовый индекс')}\r\n                                   label={t('Почтовый индекс')}\r\n                            />\r\n                            <div className={'col-span-12 '}>\r\n                                <div className=\"flex justify-end\">\r\n                                    <button onClick={() => setOpen(false)} type={'button'}\r\n                                            className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                        {t('Назад')}\r\n                                    </button>\r\n                                    <button type={'submit'}\r\n                                            className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                        {t('Следующий шаг')}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab label={t('Регион обслуживания')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} onSubmit={onSubmit}>\r\n\r\n                            <Select classNames={'col-span-6'} name={'medical_type'}\r\n                                    label={<div className={'flex'}><span>{t('Регион')}</span><img\r\n                                        className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                    params={{required: true}}\r\n                                    isMulti\r\n                                    property={{onChange: (val) => setRegionId(get(val, 'value'))}}\r\n                                    options={get(organizationRegions, 'data', []).map(_option => ({\r\n                                        value: get(_option, 'id'),\r\n                                        label: get(_option, 'display')\r\n                                    }))}/>\r\n\r\n                            <div className={'col-span-12 '}>\r\n                                <div className=\"flex justify-end\">\r\n                                    <button onClick={() => setOpen(false)} type={'button'}\r\n                                            className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                        {t('Назад')}\r\n                                    </button>\r\n                                    <button type={'submit'}\r\n                                            className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                        {t('Следующий шаг')}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab label={t('Контакты')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} onSubmit={onSubmit}>\r\n                            <h3 className={'mb-6 col-span-12 font-semibold'}>Контактная информация</h3>\r\n                            {/*{*/}\r\n                            {/*    range(0,increment+1).map(inc=><>*/}\r\n                            {/*        <PhoneNumber classNames={'col-span-4'} name={`contacts[${inc}].telecoms[0].value`}*/}\r\n                            {/*            // params={{*/}\r\n                            {/*            //     required: {*/}\r\n                            {/*            //         value:true,*/}\r\n                            {/*            //         message:'ddd'*/}\r\n                            {/*            //     },*/}\r\n                            {/*            //     pattern: {*/}\r\n                            {/*            //         value: /^998(33|36|55|61|62|65|66|67|69|70|71|72|73|74|75|76|77|78|79|88|90|91|93|94|95|97|98|99)\\d{7}$/,*/}\r\n                            {/*            //         message: 'Invalid format'*/}\r\n                            {/*            //     }*/}\r\n                            {/*            // }}*/}\r\n                            {/*                     placeholder={t('Телефон')}*/}\r\n                            {/*                     label={<div className={'flex'}><span>{t('Телефон')}</span><img*/}\r\n                            {/*                         className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}*/}\r\n                            {/*        />*/}\r\n                            {/*        <Input classNames={'col-span-4'} name={`contacts[${inc}].address.block`}*/}\r\n                            {/*               placeholder={t('E-mail')}*/}\r\n                            {/*               params={{*/}\r\n                            {/*                   pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/*/}\r\n                            {/*               }}*/}\r\n                            {/*               label={t('E-mail')}*/}\r\n                            {/*        />*/}\r\n                            {/*        <Input classNames={'col-span-4'} name={`contacts[${inc}].address.postal_code`}*/}\r\n                            {/*               placeholder={t('URL адрес')}*/}\r\n                            {/*               label={t('URL адрес')}*/}\r\n                            {/*        />*/}\r\n                            {/*    </>)*/}\r\n                            {/*}*/}\r\n                            <PhoneNumber classNames={'col-span-4'} name={`contacts[0].telecoms[0].value`}\r\n                                // params={{\r\n                                //     required: {\r\n                                //         value:true,\r\n                                //         message:'ddd'\r\n                                //     },\r\n                                //     pattern: {\r\n                                //         value: /^998(33|36|55|61|62|65|66|67|69|70|71|72|73|74|75|76|77|78|79|88|90|91|93|94|95|97|98|99)\\d{7}$/,\r\n                                //         message: 'Invalid format'\r\n                                //     }\r\n                                // }}\r\n                                         placeholder={t('Телефон')}\r\n                                         label={<div className={'flex'}><span>{t('Телефон')}</span><img\r\n                                             className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Input classNames={'col-span-4'} name={`contacts[0].address.block`}\r\n                                   placeholder={t('E-mail')}\r\n                                   params={{\r\n                                       pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n                                   }}\r\n                                   label={t('E-mail')}\r\n                            />\r\n                            <Input classNames={'col-span-4'} name={`contacts[0].address.postal_code`}\r\n                                   placeholder={t('URL адрес')}\r\n                                   label={t('URL адрес')}\r\n                            />\r\n                            <div className={'col-span-12'}>\r\n                                <button\r\n                                    onClick={() => setIncrement(prev => ++prev)}\r\n                                    className={'mr-6 p-2.5 !pr-6 text-[#006D85] rounded-lg inline-flex  border border-[#006D85] font-bold text-center  mt-3  items-center '}>\r\n                                    <Plus className={'mr-1'}/> <span>Добавить\r\n                                    поле</span>\r\n                                </button>\r\n                                {\r\n                                    increment > 0 && <button\r\n                                        onClick={() => setIncrement(prev => --prev)}\r\n                                        className={' p-2.5 !pr-6 text-[#EB5757] rounded-lg inline-flex  border border-[#EB5757] font-bold text-center  mt-6  items-center '}>\r\n                                        <Minus className={'mr-1'}/> <span>Удалить\r\n                                    поле</span>\r\n                                    </button>\r\n                                }\r\n                            </div>\r\n                            <div className={'col-span-12'}>\r\n                                <hr className={'my-4'}/>\r\n                            </div>\r\n                            <h3 className={'mb-6 col-span-12 font-semibold'}>Географические координаты</h3>\r\n                            <Input classNames={'col-span-4'} name={`contacts[0].address.postal_code`}\r\n                                   placeholder={t('Широта')}\r\n                                   label={t('Широта')}\r\n                            />\r\n                            <Input classNames={'col-span-4'} name={`contacts[0].address.postal_code`}\r\n                                   placeholder={t('Долгота')}\r\n                                   label={t('Долгота')}\r\n                            />\r\n                            <div className={'col-span-12 '}>\r\n                                <div className=\"flex justify-end\">\r\n                                    <button onClick={() => setOpen(false)} type={'button'}\r\n                                            className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                        {t('Назад')}\r\n                                    </button>\r\n                                    <button type={'submit'}\r\n                                            className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                        {t('Следующий шаг')}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </Tab>\r\n                    {/*<Tab label={t('Изображение')}>*/}\r\n                    {/*   img*/}\r\n                    {/*</Tab>*/}\r\n                </Tabs>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrganizationsContainer;","import React from 'react';\r\nimport OrganizationsContainer from \"../containers/OrganizationsContainer\";\r\n\r\nconst OrganizationsPage = () => {\r\n    return (\r\n        <>\r\n            <OrganizationsContainer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrganizationsPage;"],"names":["Tabs","_ref","_searchParams$get","_children$","_children$$props","_children$props","_children$props2","_children$props4","_children$props5","_children$props6","children","_useSearchParams","useSearchParams","searchParams","_slicedToArray","_useState","useState","get","props","label","_useState2","activeTab","setActiveTab","useEffect","handleClick","e","newActiveTab","preventDefault","_jsxs","_jsx","className","isArray","map","child","_child$props","_child$props2","_child$props4","clsx","onClick","_child$props3","_children$props3","_child$props5","_child$props6","_child$props7","Tab","_ref2","_errors$name","_errors$name2","_errors$name3","control","name","disabled","errors","params","_ref$defaultValue","property","defaultValue","_ref$classNames","classNames","_ref$format","format","console","log","Controller","rules","render","field","value","onChange","PatternFormat","_objectSpread","hasIn","mask","allowEmptyFormatting","type","concat","_ref$handleSearch","handleSearch","t","useTranslation","_useForm","useForm","register","handleSubmit","onSubmit","_ref2$search","search","undefined","Search","color","size","placeholder","_ref$label","_ref$mask","handleValue","_ref$maskChar","maskChar","_ref$placeholder","htmlFor","InputMask","useNavigate","open","setOpen","_useState3","_useState4","lang","setLang","_useState5","_useState6","_useState7","_useState8","regionId","setRegionId","_useState9","_useState10","districtId","setDistrictId","_useState11","_useState12","increment","setIncrement","_useState13","_useState14","setSearch","orgSelectList","useGetAllQuery","key","KEYS","organizationsListForSelect","url","URLS","data","organizationTypeLevelList","organizationTypeLevel","organizationTypeMedicalList","organizationTypeMedical","organizationLegalFormList","organizationLegalForm","organizationTypeServiceList","organizationTypeService","organizationManagementFormList","organizationManagementForm","organizationCountryList","organizationCountry","organizationRegions","organizationTerritory","level","organizationDistricts","parent_id","isObject","enabled","organizationNeighbors","columns","title","Title","Plus","src","downloadIcon","alt","SelectComponent","setValue","val","options","_option","InputMaskComponent","GridView","hasActionColumn","listKey","organizations","Modal","onClose","Form","required","orgIcon","Select","isMulti","Input","PhoneNumber","pattern","prev","Minus","_Fragment","OrganizationsContainer"],"sourceRoot":""}