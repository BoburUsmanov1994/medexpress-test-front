{"version":3,"file":"static/js/897.cc5251f8.chunk.js","mappings":"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","sources":["components/tab/index.jsx","assets/icons/download.svg","assets/icons/org.svg","../node_modules/react-feather/dist/icons/plus.js","../node_modules/react-feather/dist/icons/minus.js","../node_modules/react-feather/dist/icons/search.js","components/search/index.jsx","components/input-mask/index.jsx","modules/hrm/containers/OrganizationsContainer.jsx","modules/hrm/pages/OrganizationsPage.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport clsx from \"clsx\";\r\nimport {useSearchParams} from \"react-router-dom\";\r\nimport {isArray} from \"lodash\";\r\n\r\nconst Tabs = ({children, isLabelDisabled = false}) => {\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const [activeTab, setActiveTab] = useState(searchParams.get('tab') ?? children[0]?.props?.tab);\r\n\r\n    useEffect(() => {\r\n        if (searchParams.get('tab')) {\r\n            setActiveTab(searchParams.get('tab'));\r\n        }\r\n    }, [searchParams.get('tab')])\r\n\r\n    const handleClick = (e, newActiveTab) => {\r\n        e.preventDefault();\r\n        if (!isLabelDisabled) {\r\n            setActiveTab(newActiveTab);\r\n            setSearchParams(`tab=${newActiveTab}`)\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <div className=\"flex border-b border-[rgba(0,0,0,0.1)]\">\r\n                {isArray(children) ? children.map(child => (\r\n                    <button\r\n                        key={child?.props?.tab}\r\n                        className={clsx('tab__item_link', {'active': activeTab === child?.props?.tab})}\r\n                        onClick={e => handleClick(e, child?.props?.tab)}\r\n                    >\r\n                        {child?.props?.label}\r\n                    </button>\r\n                )) : <button\r\n                    key={children?.props?.tab}\r\n                    className={clsx('tab__item_link', {'active': activeTab === children?.props?.tab})}\r\n                    onClick={e => handleClick(e, children?.props?.tab)}\r\n                >\r\n                    {children?.props?.label}\r\n                </button>}\r\n            </div>\r\n            <div className=\"py-6\">\r\n                {isArray(children) ? children.map(child => {\r\n                    if (child?.props?.tab === activeTab) {\r\n                        return <div key={child?.props?.tab}>{child?.props?.children}</div>;\r\n                    }\r\n                    return null;\r\n                }) : <div key={children?.props?.tab}>{children?.props?.children}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Tab = ({label, children}) => {\r\n    return (\r\n        <div label={label} className=\"hidden\">\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\nexport {Tabs, Tab};","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDownload(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 21,\n    viewBox: \"0 0 20 21\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10 2.375C10.3452 2.375 10.625 2.65482 10.625 3V11.4911L13.7247 8.39139C13.9688 8.14731 14.3645 8.14731 14.6086 8.39139C14.8527 8.63547 14.8527 9.0312 14.6086 9.27528L10.4419 13.4419C10.1979 13.686 9.80214 13.686 9.55806 13.4419L5.39139 9.27528C5.14731 9.0312 5.14731 8.63547 5.39139 8.39139C5.63547 8.14731 6.0312 8.14731 6.27528 8.39139L9.375 11.4911V3C9.375 2.65482 9.65482 2.375 10 2.375ZM2.5 12.375C2.84518 12.375 3.125 12.6548 3.125 13V14C3.125 14.7104 3.12549 15.2056 3.15699 15.5911C3.18789 15.9693 3.2455 16.1866 3.32936 16.3512C3.50913 16.704 3.79596 16.9909 4.14877 17.1706C4.31337 17.2545 4.53067 17.3121 4.9089 17.343C5.29443 17.3745 5.78962 17.375 6.5 17.375H13.5C14.2104 17.375 14.7056 17.3745 15.0911 17.343C15.4693 17.3121 15.6866 17.2545 15.8512 17.1706C16.204 16.9909 16.4909 16.704 16.6706 16.3512C16.7545 16.1866 16.8121 15.9693 16.843 15.5911C16.8745 15.2056 16.875 14.7104 16.875 14V13C16.875 12.6548 17.1548 12.375 17.5 12.375C17.8452 12.375 18.125 12.6548 18.125 13V14.0268C18.125 14.7041 18.125 15.2505 18.0889 15.6929C18.0516 16.1484 17.973 16.5485 17.7844 16.9187C17.4848 17.5067 17.0067 17.9848 16.4187 18.2844C16.0485 18.473 15.6484 18.5516 15.1929 18.5889C14.7505 18.625 14.2041 18.625 13.5268 18.625H6.47323C5.79587 18.625 5.24953 18.625 4.80711 18.5889C4.35158 18.5516 3.95146 18.473 3.58128 18.2844C2.99327 17.9848 2.51521 17.5067 2.2156 16.9187C2.02699 16.5485 1.94835 16.1484 1.91114 15.6929C1.87499 15.2505 1.87499 14.7041 1.875 14.0268L1.875 13C1.875 12.6548 2.15482 12.375 2.5 12.375Z\",\n    fill: \"#006D85\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDownload);\nexport default __webpack_public_path__ + \"static/media/download.5c6fa236248d121782afeb4b8fd485fb.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgOrg(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M17.0717 2.92835C15.2648 1.1215 12.7648 0 10 0C7.2352 0 4.7352 1.1215 2.92835 2.92835C1.1215 4.7352 0 7.2352 0 10C0 12.7648 1.1215 15.2648 2.92835 17.0717C4.7352 18.8785 7.2352 20 10 20C12.7648 20 15.2648 18.8785 17.0717 17.0717C18.8785 15.2648 20 12.7648 20 10C20 7.2352 18.8863 4.7352 17.0717 2.92835Z\",\n    fill: \"#404C75\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M17.0719 2.92895C16.5034 2.36041 15.8725 1.86197 15.1794 1.44141L0.0859375 11.309C0.381888 13.5442 1.40993 15.5536 2.92862 17.0722C4.73547 18.8791 7.23547 20.0006 10.0003 20.0006C10.2183 20.0006 10.4286 19.9928 10.6389 19.9772L18.4115 4.58004C18.0221 3.98814 17.5781 3.42739 17.0719 2.92895Z\",\n    fill: \"#5D72A7\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M2.51504 8.29492C2.96676 8.5052 3.14588 9.21393 3.07579 10.094C2.95897 11.5582 3.27049 13.4507 5.1085 14.3853C4.81255 13.3417 3.5976 13.0457 4.34526 11.5426C4.43093 11.932 4.52439 11.9242 4.61785 12.0955C6.47143 15.4678 9.5166 13.9024 9.89043 19.0971C8.58202 17.0332 5.06177 16.3712 3.44962 14.6579C2.22688 13.365 1.6895 11.6438 2.28919 9.11268C2.35149 8.84788 2.44495 8.71548 2.51504 8.29492Z\",\n    fill: \"white\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10.5596 7.87347C5.4895 6.03547 5.13904 11.0822 9.111 14.7816C6.32284 13.8548 2.90383 9.95291 5.21692 6.90774C7.19511 4.67254 9.29013 6.01989 10.5596 7.87347Z\",\n    fill: \"white\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10.5234 9.03361C14.4097 8.15355 14.916 12.0243 10.9752 14.8436C14.0281 14.018 16.4502 10.9884 14.5733 8.51959C13.4206 7.24234 11.5437 7.53828 10.5234 9.03361Z\",\n    fill: \"white\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8.69045 2.32812C9.54714 2.32812 10.2481 3.02127 10.2481 3.88576C10.2481 4.74246 9.55493 5.44339 8.69045 5.44339C7.83375 5.44339 7.13281 4.75024 7.13281 3.88576C7.1406 3.02906 7.83375 2.32812 8.69045 2.32812Z\",\n    fill: \"white\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M12.4689 4.92188C13.1309 4.92188 13.6605 5.45926 13.6605 6.11346C13.6605 6.77546 13.1231 7.30505 12.4689 7.30505C11.8069 7.30505 11.2773 6.76767 11.2773 6.11346C11.2773 5.45147 11.8069 4.92188 12.4689 4.92188Z\",\n    fill: \"white\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8.64535 9.97656C8.41171 11.9158 9.14379 13.7538 10.1095 14.9921C10.203 12.8582 10.8494 11.0981 11.8852 10.0856C11.1687 10.3893 10.3198 11.0202 9.83694 12.3364C9.3385 11.8691 9.09707 11.5108 8.64535 9.97656Z\",\n    fill: \"white\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M9.96152 9.7967C10.2419 9.86679 10.4132 10.1861 10.3276 10.5054C10.2497 10.8325 9.95373 11.035 9.67336 10.9649C9.39298 10.8948 9.22164 10.5755 9.30731 10.2562C9.3852 9.93689 9.68115 9.72661 9.96152 9.7967Z\",\n    fill: \"white\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M17.5941 8.29492C17.1424 8.5052 16.9633 9.21393 17.0334 10.094C17.1502 11.5582 16.8387 13.4507 15.0007 14.3853C15.2966 13.3417 16.5116 13.0457 15.7639 11.5426C15.6783 11.932 15.5848 11.9242 15.4913 12.0955C13.6378 15.4678 10.5926 13.9024 10.2188 19.0971C11.5272 17.0332 15.0474 16.3712 16.6596 14.6579C17.8823 13.365 18.4197 11.6438 17.82 9.11268C17.7577 8.84788 17.6642 8.71548 17.5941 8.29492Z\",\n    fill: \"white\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOrg);\nexport default __webpack_public_path__ + \"static/media/org.448a04db9e5edb718d2aea958fdd974c.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Plus = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"5\",\n    x2: \"12\",\n    y2: \"19\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }));\n});\nPlus.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPlus.displayName = 'Plus';\nexport default Plus;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Minus = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }));\n});\nMinus.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nMinus.displayName = 'Minus';\nexport default Minus;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Search = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"11\",\n    cy: \"11\",\n    r: \"8\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    y1: \"21\",\n    x2: \"16.65\",\n    y2: \"16.65\"\n  }));\n});\nSearch.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nSearch.displayName = 'Search';\nexport default Search;","import React from 'react';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Search} from \"react-feather\";\r\nimport {useForm} from \"react-hook-form\"\r\n\r\nconst Index = ({\r\n                   handleSearch = () => {\r\n                   }\r\n               }) => {\r\n    const {t} = useTranslation()\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n    } = useForm()\r\n\r\n    const onSubmit = ({search = undefined}) => {\r\n        handleSearch(search)\r\n    }\r\n    return (\r\n        <form className={'relative'} onSubmit={handleSubmit(onSubmit)}>\r\n            <Search color={'#A7A7A7'} size={20} className={'absolute z-10 top-1/2 left-2.5 -translate-y-1/2'}/>\r\n            <input {...register(\"search\")} className={'py-2.5 pr-5 pl-10 w-80 rounded-lg outline-none'} type=\"text\"\r\n                   placeholder={t('Поиск по наименованию')}/>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Index;","import React, {useState} from 'react';\r\nimport clsx from \"clsx\";\r\nimport InputMask from \"react-input-mask\";\r\nconst InputMaskComponent = ({\r\n                    label = '',\r\n                    handleValue = () => {\r\n                    },\r\n                   mask='',\r\n                   maskChar='-',\r\n                   placeholder=''\r\n                }) => {\r\n    const [value,setValue] = useState('')\r\n\r\n    return (\r\n        <div className={clsx('flex items-center')}>\r\n            {label && <label className={clsx('mr-2 text-secondary-300 font-bold flex items-center')}\r\n                             htmlFor={label}>{label}</label>}\r\n            <InputMask\r\n                className={clsx('py-2.5 px-4 w-36 rounded-lg outline-none')}\r\n                placeholder={placeholder}\r\n                mask={mask}\r\n                maskChar={maskChar}\r\n                // value={value}\r\n                // onChange={setValue}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputMaskComponent;","import React, {useState} from 'react';\r\nimport Title from \"../../../components/title\";\r\nimport GridView from \"../../../containers/grid-view\";\r\nimport {KEYS} from \"../../../constants/keys\";\r\nimport {URLS} from \"../../../constants/urls\";\r\nimport {get, isObject} from \"lodash\"\r\nimport downloadIcon from \"../../../assets/icons/download.svg\"\r\nimport {useNavigate, useSearchParams} from 'react-router-dom'\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Modal from \"../../../components/modal\";\r\nimport {Tab, Tabs} from \"../../../components/tab\";\r\nimport Form from \"../../../containers/form\";\r\nimport {InputMask, Select, PhoneNumber, Input, AsyncSelect} from \"../../../containers/form/components\";\r\nimport orgIcon from \"../../../assets/icons/org.svg\"\r\nimport {Minus, Plus} from \"react-feather\";\r\nimport {useGetAllQuery, usePostQuery} from \"../../../hooks/api\";\r\nimport clsx from \"clsx\";\r\nimport Search from \"../../../components/search\"\r\nimport SelectComponent from \"../../../components/select\";\r\nimport InputMaskComponent from \"../../../components/input-mask\";\r\nimport fileUploadImg from \"../../../assets/images/fileUpload.png\"\r\nimport {ContentLoader} from \"../../../components/loader\";\r\nimport MaskedInput from \"../../../containers/form/components/Masked-Input\";\r\n\r\n\r\nconst OrganizationsContainer = () => {\r\n    const navigate = useNavigate();\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const [open, setOpen] = useState(false);\r\n    let [lang, setLang] = useState('uz');\r\n    let [orgData, setOrgData] = useState({});\r\n    let [regionId, setRegionId] = useState(null);\r\n    let [districtId, setDistrictId] = useState(null);\r\n    let [increment, setIncrement] = useState(0);\r\n    const [filter, setFilter] = useState({name: '', state_id: null, city_id: null})\r\n    const {t} = useTranslation();\r\n\r\n    const {data: organizationTypeLevelList, isLoading: isLoadingTypeLevelList} = useGetAllQuery({\r\n        key: KEYS.organizationTypeLevel,\r\n        url: URLS.organizationTypeLevel,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: open\r\n    })\r\n\r\n    const {data: organizationTypeMedicalList, isLoading: isLoadingTypeMedicalList} = useGetAllQuery({\r\n        key: KEYS.organizationTypeMedical,\r\n        url: URLS.organizationTypeMedical,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: open\r\n    })\r\n\r\n    const {data: organizationLegalFormList, isLoading: isLoadingLegalFormList} = useGetAllQuery({\r\n        key: KEYS.organizationLegalForm,\r\n        url: URLS.organizationLegalForm,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: open\r\n    })\r\n\r\n    const {data: organizationTypeServiceList, isLoading: isLoadingTypeServiceList} = useGetAllQuery({\r\n        key: KEYS.organizationTypeService,\r\n        url: URLS.organizationTypeService,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: open\r\n    })\r\n\r\n\r\n    const {data: organizationCountryList} = useGetAllQuery({\r\n        key: KEYS.organizationCountry,\r\n        url: URLS.organizationCountry,\r\n        params: {\r\n            params: {\r\n                limit: 1000\r\n            }\r\n        },\r\n        enabled: open\r\n    })\r\n\r\n    const {data: organizationRegions, isLoading: isLoadingRegions} = useGetAllQuery({\r\n        key: KEYS.organizationTerritory,\r\n        url: URLS.organizationTerritory,\r\n        params: {\r\n            params: {\r\n                limit: 100,\r\n                level: 1\r\n            }\r\n        }\r\n    })\r\n\r\n    const {data: organizationDistricts} = useGetAllQuery({\r\n        key: [KEYS.organizationTerritory, regionId],\r\n        url: URLS.organizationTerritory,\r\n        params: {\r\n            params: {\r\n                limit: 100,\r\n                level: 2,\r\n                parent_id: isObject(regionId) ? get(regionId, 'value') : regionId\r\n            },\r\n        },\r\n        enabled: !!(regionId)\r\n    })\r\n    const {data: districts, isLoading: isLoadingDistricts} = useGetAllQuery({\r\n        key: [KEYS.organizationTerritory, get(filter, 'state_id.value')],\r\n        url: URLS.organizationTerritory,\r\n        params: {\r\n            params: {\r\n                limit: 100,\r\n                level: 2,\r\n                parent_id: get(filter, 'state_id.value')\r\n            },\r\n        },\r\n        enabled: !!(get(filter, 'state_id.value'))\r\n    })\r\n    const {data: organizationNeighbors} = useGetAllQuery({\r\n        key: [KEYS.organizationTerritory, districtId],\r\n        url: URLS.organizationTerritory,\r\n        params: {\r\n            params: {\r\n                limit: 1000,\r\n                level: 3,\r\n                parent_id: isObject(districtId) ? get(districtId, 'value') : districtId\r\n            },\r\n        },\r\n        enabled: !!(districtId)\r\n    })\r\n\r\n    const {\r\n        mutate: addRequest, isLoading: isLoadingPost\r\n    } = usePostQuery({listKeyId: KEYS.organizations})\r\n\r\n    const columns = [\r\n        {\r\n            title: t('НАИМЕНОВАНИЕ'),\r\n            key: 'display',\r\n        },\r\n        {\r\n            title: t('РОДИТЕЛЬСКАЯ ОРГАНИЗАЦИЯ'),\r\n            key: 'parent.display',\r\n        },\r\n        {\r\n            title: t('ТИП ОРГАНИЗАЦИИ'),\r\n            key: 'medical_type.display',\r\n        },\r\n        {\r\n            title: t('УРОВЕНЬ'),\r\n            key: 'level.display',\r\n        },\r\n        {\r\n            title: t('СТАТУС'),\r\n            key: 'active',\r\n        }\r\n    ]\r\n    const onSubmit = ({data}, tab) => {\r\n        setOrgData(prev => ({...prev, ...data}))\r\n        setSearchParams(`tab=${tab}`)\r\n    }\r\n\r\n    const add = () => {\r\n        const {longitude, latitude, ...rest} = orgData;\r\n        addRequest({\r\n            url: URLS.organizations,\r\n            attributes: {\r\n                ...rest,\r\n                display: get(orgData, 'names[0].value'),\r\n                locations: [{\r\n                    address: get(orgData, 'locations[0].address'),\r\n                    longitude: parseFloat(longitude) || undefined,\r\n                    latitude: parseFloat(latitude) || undefined\r\n                }]\r\n            }\r\n        }, {\r\n            onSuccess: () => {\r\n                closeModal();\r\n            }\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setOpen(false)\r\n        setOrgData({})\r\n        setSearchParams(``)\r\n    }\r\n\r\n    console.log('orgData', orgData)\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"grid grid-cols-12 items-center\">\r\n                <div className=\"col-span-6\">\r\n                    <Title>{t(\"Организации\")}</Title>\r\n                </div>\r\n                <div className=\"col-span-6 flex items-center justify-end\">\r\n                    <button\r\n                        onClick={() => setOpen(true)}\r\n                        className={'inline-flex py-2.5 pl-2.5 pr-5 rounded-lg bg-primary items-center text-white font-semibold text-center mr-4'}>\r\n                        <Plus className={'mr-1.5'}/>\r\n                        {t('Добавить организацию')}\r\n                    </button>\r\n                    <button\r\n                        className={'inline-flex items-center py-2.5 pl-2.5 pr-5 text-sm font-bold text-primary border border-primary rounded-lg'}>\r\n                        <img className={'mr-2.5'} src={downloadIcon} alt={'export'}/>\r\n                        {t(\"Export\")}\r\n                    </button>\r\n                </div>\r\n                <div className=\"col-span-4 mt-5\">\r\n                    <Search handleSearch={(val) => setFilter(prev => ({...prev, name: val}))}/>\r\n                </div>\r\n                <div className=\"col-span-8 mt-5 flex justify-end\">\r\n                    <div className=\"mr-6\"><SelectComponent\r\n                        isLoading={isLoadingRegions}\r\n                        value={get(filter, 'state_id')}\r\n                        setValue={(val) => setFilter(prev => ({...prev, state_id: val}))}\r\n                        label={t('Регион')} options={get(organizationRegions, 'data', []).map(_option => ({\r\n                        value: get(_option, 'id'),\r\n                        label: get(_option, 'display')\r\n                    }))}/></div>\r\n                    <div className=\"mr-6\">\r\n                        <SelectComponent\r\n                            setValue={(val) => setFilter(prev => ({...prev, city_id: val}))}\r\n                            value={get(filter, 'city_id')}\r\n                            options={get(districts, 'data', []).map(_option => ({\r\n                                value: get(_option, 'id'),\r\n                                label: get(_option, 'display')\r\n                            }))}\r\n                            label={t('Район')}/>\r\n                    </div>\r\n                    <InputMaskComponent mask={'999999999'} label={'ИНН'}/>\r\n                </div>\r\n                <div className=\"col-span-12 mt-6\">\r\n                    <GridView\r\n                        onRowClick={({id}) => navigate(`/hrm/organization/${id}`)}\r\n                        params={{\r\n                            name: get(filter, 'name'),\r\n                            state_id: get(filter, 'state_id.value'),\r\n                            city_id: get(filter, 'city_id.value')\r\n                        }}\r\n                        hasActionColumn\r\n                        listKey={KEYS.organizations} url={URLS.organizations}\r\n                        columns={columns}/>\r\n                </div>\r\n            </div>\r\n            <Modal open={open} onClose={closeModal} classNames={'!w-[1080px] !pb-0'}\r\n                   title={t('Добавление организации')}>\r\n                {isLoadingPost && <ContentLoader/>}\r\n                <Tabs isLabelDisabled>\r\n                    <Tab tab={'info'} label={t('Информация')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} onSubmit={(data) => onSubmit(data, 'name')}>\r\n                            <InputMask params={{required: true}}\r\n                                       classNames={'col-span-6'}\r\n                                       name={'tin'}\r\n                                       defaultValue={get(orgData, 'tin')}\r\n                                       property={{\r\n                                           placeholder: t('Введите ИНН организации'),\r\n                                           mask: '999999999',\r\n                                           maskChar: '_'\r\n                                       }}\r\n                                       label={<div className={'flex'}><span>{t('ИНН организации')}</span><img\r\n                                           className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <AsyncSelect isDisabledSearch url={URLS.organizationsListForSelect}\r\n                                         keyId={KEYS.organizationsListForSelect}\r\n                                         classNames={'col-span-6'}\r\n                                         name={'parent'}\r\n                                         defaultValue={get(orgData, 'parent')}\r\n                                         label={t('Родительская организация')}\r\n                            />\r\n                            <Select isLoading={isLoadingTypeLevelList} defaultValue={get(orgData, 'level')}\r\n                                    classNames={'col-span-6'} name={'level'}\r\n                                    label={<div className={'flex'}><span>{t('Уровень оказания услуг')}</span><img\r\n                                        className={'ml-1'} src={orgIcon} alt=\"org\"/></div>} params={{required: true}}\r\n                                    options={get(organizationTypeLevelList, 'data', [])}/>\r\n                            <Select isLoading={isLoadingTypeMedicalList} defaultValue={get(orgData, 'medical_type')}\r\n                                    classNames={'col-span-6'}\r\n                                    name={'medical_type'}\r\n                                    label={<div className={'flex'}><span>{t('Тип организации')}</span><img\r\n                                        className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                    params={{required: true}}\r\n                                    options={get(organizationTypeMedicalList, 'data', [])}/>\r\n                            <Select isLoading={isLoadingLegalFormList} defaultValue={get(orgData, 'legal_form')}\r\n                                    classNames={'col-span-6'}\r\n                                    name={'legal_form'}\r\n                                    label={t('Организационно-правовая форма')}\r\n                                    options={get(organizationLegalFormList, 'data', [])}/>\r\n                            <Select isLoading={isLoadingTypeServiceList} defaultValue={get(orgData, 'service_types')}\r\n                                    classNames={'col-span-6'}\r\n                                    name={'service_types'}\r\n                                    label={t('Виды оказания услуг')}\r\n                                    isMulti\r\n                                    options={get(organizationTypeServiceList, 'data', [])}/>\r\n                            <AsyncSelect defaultValue={get(orgData, 'affiliation')} classNames={'col-span-6'}\r\n                                         keyId={KEYS.organizationManagementForm}\r\n                                         url={URLS.organizationManagementForm}\r\n                                         name={'affiliation'}\r\n                                         label={t('Орган государственного управления')}\r\n                            />\r\n\r\n                            <div className={'col-span-12 '}>\r\n                                <div className=\"flex justify-end\">\r\n                                    <button onClose={closeModal} type={'button'}\r\n                                            className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                        {t('Назад')}\r\n                                    </button>\r\n                                    <button type={'submit'}\r\n                                            className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                        {t('Следующий шаг')}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'name'} label={t('Наименование')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} onSubmit={(data) => onSubmit(data, 'address')}>\r\n                            <div className={'flex col-span-12 mb-4'}>\r\n                                <button type={'button'} onClick={() => setLang('uz')}\r\n                                        className={clsx('py-2 px-4 border border-[#EAEFF8] rounded-lg mr-2.5 ', {'!bg-[#E5F0F3] !border-[#E5F0F3]': lang == 'uz'})}>O’zbekcha\r\n                                </button>\r\n                                <button type={'button'} onClick={() => setLang('uz-Cyrl')}\r\n                                        className={clsx('py-2 px-4 border border-[#EAEFF8] rounded-lg mr-2.5 ', {'!bg-[#E5F0F3] !border-[#E5F0F3]': lang == 'uz-Cyrl'})}>Ўзбеқча\r\n                                </button>\r\n                                <button type={'button'} onClick={() => setLang('ru')}\r\n                                        className={clsx('py-2 px-4 border border-[#EAEFF8] rounded-lg mr-2.5', {'!bg-[#E5F0F3] !border-[#E5F0F3]': lang == 'ru'})}>Русский\r\n                                </button>\r\n                                <button type={'button'} onClick={() => setLang('en')}\r\n                                        className={clsx('py-2 px-4 border border-[#EAEFF8] rounded-lg mr-2.5', {'!bg-[#E5F0F3] !border-[#E5F0F3]': lang == 'en'})}>English\r\n                                </button>\r\n                            </div>\r\n\r\n                            <Input params={{required:true,pattern:{value:/^[a-zA-Z0-9\\s\\'`,.]+$/,message:'Invalid value'}}} defaultValue={get(orgData, `names[0].value_short`)} classNames={'col-span-5'}\r\n                                   name={`names[0].value_short`}\r\n                                   placeholder={t('Введите краткое наименование')}\r\n                                   property={{type: lang == 'uz' ? 'text' : 'hidden'}}\r\n                                   label={<div className={'flex'}><span>{t('Краткое наименование')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Input params={{required:true,pattern:{value:/^[a-zA-Z0-9\\s\\'`,.]+$/,message:'Invalid value'}}} defaultValue={get(orgData, `names[0].value`)} classNames={'col-span-7'}\r\n                                   name={'names[0].value'}\r\n                                   placeholder={t('Введите полное наименование')}\r\n                                   property={{type: lang == 'uz' ? 'text' : 'hidden'}}\r\n                                   label={<div className={'flex'}><span>{t('Полное наименование')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Input params={{pattern:{value:/^[ўЎҳҲғҒқҚаАбБвВгГдДеЕёЁжЖзЗиИйЙкКлЛмМнНоОпПрРсСтТуУфФхХцЦчЧшШщЩъЪыЫьЬэЭюЮяЯ0-9_ -]+$/u,message:'Invalid value'}}} defaultValue={get(orgData, `names[1].value_short`)} classNames={'col-span-5'}\r\n                                   name={`names[1].value_short`}\r\n                                   placeholder={t('Введите краткое наименование')}\r\n                                   property={{type: lang == 'uz-Cyrl' ? 'text' : 'hidden'}}\r\n                                   label={<div className={'flex'}><span>{t('Краткое наименование')}</span></div>}\r\n                            />\r\n                            <Input params={{pattern:{value:/^[ўЎҳҲғҒқҚаАбБвВгГдДеЕёЁжЖзЗиИйЙкКлЛмМнНоОпПрРсСтТуУфФхХцЦчЧшШщЩъЪыЫьЬэЭюЮяЯ0-9_ -]+$/u,message:'Invalid value'}}} defaultValue={get(orgData, `names[1].value`)} classNames={'col-span-7'}\r\n                                   name={'names[1].value'}\r\n                                   placeholder={t('Введите полное наименование')}\r\n                                   property={{type: lang == 'uz-Cyrl' ? 'text' : 'hidden'}}\r\n                                   label={<div className={'flex'}><span>{t('Полное наименование')}</span></div>}\r\n                            />\r\n                            <Input params={{pattern:{value:/^[А-Яа-я\\s_-]+$/u, message:'Invalid value'}}} defaultValue={get(orgData, `names[2].value_short`)} classNames={'col-span-5'}\r\n                                   name={'names[2].value_short'}\r\n                                   property={{type: lang == 'ru' ? 'text' : 'hidden'}}\r\n                                   placeholder={t('Введите краткое наименование')}\r\n                                   label={<div className={'flex'}><span>{t('Краткое наименование')}</span></div>}\r\n                            />\r\n                            <Input params={{pattern:{value:/^[А-Яа-я0-9\\s_-]+$/u,message:'Invalid value'}}} defaultValue={get(orgData, `names[2].value`)} classNames={'col-span-7'}\r\n                                   name={'names[2].value'}\r\n                                   property={{type: lang == 'ru' ? 'text' : 'hidden'}}\r\n                                   placeholder={t('Введите полное наименование')}\r\n                                   label={<div className={'flex'}><span>{t('Полное наименование')}</span></div>}\r\n                            />\r\n\r\n                            <Input params={{pattern:{value:/^[a-zA-Z0-9\\s\\'`,.]+$/,message:'Invalid value'}}} defaultValue={get(orgData, `names[3].value_short`)} classNames={'col-span-5'}\r\n                                   name={'names[3].value_short'}\r\n                                   property={{type: lang == 'en' ? 'text' : 'hidden'}}\r\n                                   placeholder={t('Введите краткое наименование')}\r\n                                   label={<div className={'flex'}><span>{t('Краткое наименование')}</span></div>}\r\n                            />\r\n                            <Input params={{pattern:{value:/^[a-zA-Z0-9\\s\\'`,.]+$/,message:'Invalid value'}}} defaultValue={get(orgData, `names[3].value`)} classNames={'col-span-7'}\r\n                                   name={'names[3].value'}\r\n                                   property={{type: lang == 'en' ? 'text' : 'hidden'}}\r\n                                   placeholder={t('Введите полное наименование')}\r\n                                   label={<div className={'flex'}><span>{t('Полное наименование')}</span></div>}\r\n                            />\r\n                            <Input defaultValue={'en'} classNames={'col-span-5'} name={`names[3].locale`}\r\n                                   placeholder={t('Введите краткое наименование')}\r\n                                   property={{type: 'hidden'}}\r\n                                   label={<div className={'flex'}><span>{t('Краткое наименование')}</span></div>}\r\n                            />\r\n                            <Input defaultValue={'uz'} classNames={'col-span-5'} name={`names[0].locale`}\r\n                                   placeholder={t('Введите краткое наименование')}\r\n                                   property={{type: 'hidden'}}\r\n                                   label={<div className={'flex'}><span>{t('Краткое наименование')}</span></div>}\r\n                            />\r\n                            <Input defaultValue={'uz-Cyrl'} classNames={'col-span-5'} name={`names[1].locale`}\r\n                                   placeholder={t('Введите краткое наименование')}\r\n                                   property={{type: 'hidden'}}\r\n                                   label={<div className={'flex'}><span>{t('Краткое наименование')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Input defaultValue={'ru'} classNames={'col-span-5'} name={`names[2].locale`}\r\n                                   placeholder={t('Введите краткое наименование')}\r\n                                   property={{type: 'hidden'}}\r\n                                   label={<div className={'flex'}><span>{t('Краткое наименование')}</span></div>}\r\n                            />\r\n                            <div className={'col-span-12 '}>\r\n                                <div className=\"flex justify-end\">\r\n                                    <button onClick={() => setSearchParams(`tab=info`)} type={'button'}\r\n                                            className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                        {t('Назад')}\r\n                                    </button>\r\n                                    <button type={'submit'}\r\n                                            className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                        {t('Следующий шаг')}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'address'} label={t('Адрес')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} onSubmit={(data) => onSubmit(data, 'region')}>\r\n                            <Select isDisabled defaultValue={{id: 244, display: \"O'ZBEKISTON\", code: \"UZB\"}}\r\n                                    classNames={'col-span-4'} name={'locations[0].address.country'}\r\n                                    label={<div className={'flex'}><span>{t('Страна')}</span><img\r\n                                        className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                    params={{required: true}}\r\n                                    options={get(organizationCountryList, 'data', [])}/>\r\n                            <Select defaultValue={get(orgData, 'locations[0].address.state')} classNames={'col-span-4'}\r\n                                    name={'locations[0].address.state'}\r\n                                    label={<div className={'flex'}><span>{t('Регион')}</span><img\r\n                                        className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                    params={{required: true}}\r\n                                    property={{onChange: (val) => setRegionId(get(val, 'id'))}}\r\n                                    options={get(organizationRegions, 'data', [])}/>\r\n                            <Select defaultValue={get(orgData, 'locations[0].address.district')}\r\n                                    classNames={'col-span-4'}\r\n                                    name={'locations[0].address.district'}\r\n                                    label={<div className={'flex'}><span>{t('Район')}</span><img\r\n                                        className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                    params={{required: true}}\r\n                                    property={{onChange: (val) => setDistrictId(get(val, 'id'))}}\r\n                                    options={get(organizationDistricts, 'data', [])}\r\n                            />\r\n                            <Select defaultValue={get(orgData, 'locations[0].address.city')} classNames={'col-span-4'}\r\n                                    name={'locations[0].address.city'}\r\n                                    label={<div className={'flex'}><span>{t('Махалля')}</span><img\r\n                                        className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                    params={{required: true}}\r\n                                    options={get(organizationNeighbors, 'data', [])}\r\n                            />\r\n                            <Input defaultValue={get(orgData, 'locations[0].address.line')} classNames={'col-span-4'}\r\n                                   name={'locations[0].address.line'}\r\n                                   params={{required: true}}\r\n                                   placeholder={t('Улица')}\r\n                                   label={<div className={'flex'}><span>{t('Улица')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Input defaultValue={get(orgData, 'locations[0].address.block')} classNames={'col-span-2'}\r\n                                   name={'locations[0].address.block'}\r\n                                   params={{required: true, valueAsNumber: true}}\r\n                                   placeholder={t('Дом')}\r\n                                   label={<div className={'flex'}><span>{t('Дом')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <InputMask property={{mask:'999999'}} defaultValue={get(orgData, 'locations[0].address.postal_code')}\r\n                                   classNames={'col-span-2'} name={'locations[0].address.postal_code'}\r\n                                   placeholder={t('Почтовый индекс')}\r\n                                   label={t('Почтовый индекс')}\r\n                            />\r\n                            <div className={'col-span-12 '}>\r\n                                <div className=\"flex justify-end\">\r\n                                    <button onClick={() => setSearchParams(`tab=name`)} type={'button'}\r\n                                            className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                        {t('Назад')}\r\n                                    </button>\r\n                                    <button type={'submit'}\r\n                                            className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                        {t('Следующий шаг')}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'region'} label={t('Регион обслуживания')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} onSubmit={(data) => onSubmit(data, 'contact')}>\r\n\r\n                            <Select defaultValue={get(orgData, 'service_area[0].state')} classNames={'col-span-6'}\r\n                                    name={'service_area[0].state'}\r\n                                    label={<div className={'flex'}><span>{t('Регион')}</span><img\r\n                                        className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                    params={{required: true}}\r\n                                    options={get(organizationRegions, 'data', [])}/>\r\n\r\n                            <div className={'col-span-12 '}>\r\n                                <div className=\"flex justify-end\">\r\n                                    <button onClick={() => setSearchParams(`tab=address`)} type={'button'}\r\n                                            className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                        {t('Назад')}\r\n                                    </button>\r\n                                    <button type={'submit'}\r\n                                            className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                        {t('Следующий шаг')}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'contact'} label={t('Контакты')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} onSubmit={(data) => onSubmit(data, 'photo')}>\r\n                            <h3 className={'mb-6 col-span-12 font-semibold'}>Контактная информация</h3>\r\n\r\n                            <PhoneNumber defaultValue={get(orgData, 'contacts[0].telecoms[0].value')}\r\n                                         classNames={'col-span-4'} name={`contacts[0].telecoms[0].value`}\r\n                                         params={{\r\n                                             valueAsString:true,\r\n                                             required: true,\r\n                                             pattern: {\r\n                                                 value: /^(33|36|55|61|62|65|66|67|69|70|71|72|73|74|75|76|77|78|79|88|90|91|93|94|95|97|98|99)\\d{7}$/,\r\n                                                 message: 'Invalid format'\r\n                                             }\r\n                                         }}\r\n                                         placeholder={t('Телефон')}\r\n                                         label={<div className={'flex'}><span>{t('Телефон')}</span><img\r\n                                             className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n\r\n\r\n                            <Input defaultValue={get(orgData, 'contacts[0].telecoms[1].value')}\r\n                                   classNames={'col-span-4'} name={`contacts[0].telecoms[1].value`}\r\n                                   placeholder={t('E-mail')}\r\n                                   params={{\r\n                                       pattern: {\r\n                                           value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                           message: 'Invalid format'\r\n                                       }\r\n                                   }}\r\n                                   label={t('E-mail')}\r\n                            />\r\n\r\n\r\n                            <Input params={{\r\n                                pattern: {\r\n                                    value: /^(https?:\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([\\/\\w .-]*)*\\/?$/,\r\n                                    message: \"Invalid format\"\r\n                                }\r\n                            }} defaultValue={get(orgData, 'contacts[0].telecoms[2].value')}\r\n                                   classNames={'col-span-4'} name={`contacts[0].telecoms[2].value`}\r\n                                   placeholder={t('URL адрес')}\r\n                                   label={t('URL адрес')}\r\n                            />\r\n                            <Input params={{valueAsNumber: true}} defaultValue={1} classNames={'col-span-4'}\r\n                                   name={`contacts[0].telecoms[0].system.id`}\r\n                                   property={{type: 'hidden'}}\r\n                            />\r\n                            <Input params={{valueAsNumber: true}} defaultValue={2} classNames={'col-span-4'}\r\n                                   name={`contacts[0].telecoms[1].system.id`}\r\n                                   property={{type: 'hidden'}}\r\n                            />\r\n                            <Input params={{valueAsNumber: true}} defaultValue={3} classNames={'col-span-4'}\r\n                                   name={`contacts[0].telecoms[2].system.id`}\r\n                                   property={{type: 'hidden'}}\r\n                            />\r\n                            <div className={'col-span-12'}>\r\n                                <button\r\n                                    type={\"button\"}\r\n                                    // onClick={() => setIncrement(prev => ++prev)}\r\n                                    className={'mr-6 p-2.5 !pr-6 text-[#006D85] rounded-lg inline-flex  border border-[#006D85] font-bold text-center  mt-3  items-center '}>\r\n                                    <Plus className={'mr-1'}/> <span>Добавить\r\n                                    поле</span>\r\n                                </button>\r\n                                {\r\n                                    increment > 0 && <button\r\n                                        onClick={() => setIncrement(prev => --prev)}\r\n                                        className={' p-2.5 !pr-6 text-[#EB5757] rounded-lg inline-flex  border border-[#EB5757] font-bold text-center  mt-6  items-center '}>\r\n                                        <Minus className={'mr-1'}/> <span>Удалить\r\n                                    поле</span>\r\n                                    </button>\r\n                                }\r\n                            </div>\r\n                            <div className={'col-span-12'}>\r\n                                <hr className={'my-4'}/>\r\n                            </div>\r\n                            <h3 className={'mb-6 col-span-12 font-semibold'}>Географические координаты</h3>\r\n                            <Input params={{\r\n                                pattern: {\r\n                                    value: /^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$/,\r\n                                    message: 'Invalid format'\r\n                                }\r\n                            }} defaultValue={get(orgData, 'latitude',null)}\r\n                                   classNames={'col-span-4'}\r\n                                   name={`latitude`}\r\n                                   placeholder={t('Широта')}\r\n                                   label={t('Широта')}\r\n                            />\r\n                            <Input params={{\r\n                                pattern: {\r\n                                    value: /^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$/,\r\n                                    message: 'Invalid format'\r\n                                }\r\n                            }} defaultValue={get(orgData, 'longitude',null)}\r\n                                   classNames={'col-span-4'}\r\n                                   name={`longitude`}\r\n                                   placeholder={t('Долгота')}\r\n                                   label={t('Долгота')}\r\n                            />\r\n                            <div className={'col-span-12 '}>\r\n                                <div className=\"flex justify-end\">\r\n                                    <button onClick={() => setSearchParams(`tab=region`)} type={'button'}\r\n                                            className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                        {t('Назад')}\r\n                                    </button>\r\n                                    <button type={'submit'}\r\n                                            className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                        {t('Следующий шаг')}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'photo'} label={t('Изображение')}>\r\n                        <img src={fileUploadImg}/>\r\n                        <div className={'col-span-12 '}>\r\n                            <div className=\"flex justify-end\">\r\n                                <button onClick={() => setSearchParams(`tab=contact`)} type={'button'}\r\n                                        className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                    {t('Назад')}\r\n                                </button>\r\n                                <button onClick={add} type={'submit'}\r\n                                        className={'py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                    {t('Сохранить')}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrganizationsContainer;","import React from 'react';\r\nimport OrganizationsContainer from \"../containers/OrganizationsContainer\";\r\n\r\nconst OrganizationsPage = () => {\r\n    return (\r\n        <>\r\n            <OrganizationsContainer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrganizationsPage;"],"names":["Tabs","_ref","_searchParams$get","_children$","_children$$props","_children$props","_children$props2","_children$props4","_children$props5","_children$props6","children","_ref$isLabelDisabled","isLabelDisabled","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","get","props","tab","_useState2","activeTab","setActiveTab","useEffect","handleClick","e","newActiveTab","preventDefault","concat","_jsxs","_jsx","className","isArray","map","child","_child$props","_child$props2","_child$props4","clsx","onClick","_child$props3","label","_children$props3","_child$props5","_child$props6","_child$props7","Tab","_ref2","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Plus","forwardRef","ref","_ref$color","color","_ref$size","size","rest","React","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","propTypes","PropTypes","displayName","Minus","Search","cx","cy","r","_ref$handleSearch","handleSearch","t","useTranslation","_useForm","useForm","register","handleSubmit","onSubmit","_ref2$search","search","undefined","_objectSpread","type","placeholder","_ref$label","_ref$mask","handleValue","mask","_ref$maskChar","maskChar","_ref$placeholder","htmlFor","InputMask","navigate","useNavigate","open","setOpen","_useState3","_useState4","lang","setLang","_useState5","_useState6","orgData","setOrgData","_useState7","_useState8","regionId","setRegionId","_useState9","_useState10","districtId","setDistrictId","_useState11","_useState12","increment","setIncrement","_useState13","name","state_id","city_id","_useState14","filter","setFilter","_useGetAllQuery","useGetAllQuery","KEYS","organizationTypeLevel","url","URLS","params","limit","enabled","organizationTypeLevelList","data","isLoadingTypeLevelList","isLoading","_useGetAllQuery2","organizationTypeMedical","organizationTypeMedicalList","isLoadingTypeMedicalList","_useGetAllQuery3","organizationLegalForm","organizationLegalFormList","isLoadingLegalFormList","_useGetAllQuery4","organizationTypeService","organizationTypeServiceList","isLoadingTypeServiceList","organizationCountryList","organizationCountry","_useGetAllQuery6","organizationTerritory","level","organizationRegions","isLoadingRegions","organizationDistricts","parent_id","isObject","_useGetAllQuery8","districts","organizationNeighbors","_usePostQuery","usePostQuery","listKeyId","organizations","addRequest","mutate","isLoadingPost","columns","title","prev","closeModal","console","log","Title","src","downloadIcon","alt","val","SelectComponent","value","setValue","options","_option","InputMaskComponent","GridView","onRowClick","id","hasActionColumn","listKey","Modal","onClose","classNames","ContentLoader","Form","required","defaultValue","property","orgIcon","AsyncSelect","isDisabledSearch","organizationsListForSelect","keyId","Select","isMulti","organizationManagementForm","Input","pattern","message","isDisabled","display","code","onChange","valueAsNumber","PhoneNumber","valueAsString","longitude","latitude","_excluded","attributes","locations","address","parseFloat","onSuccess","_Fragment","OrganizationsContainer"],"sourceRoot":""}