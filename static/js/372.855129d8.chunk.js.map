{"version":3,"file":"static/js/372.855129d8.chunk.js","mappings":"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","sources":["../node_modules/react-feather/dist/icons/chevron-left.js","utils/index.js","assets/icons/chevron-right.svg","modules/hrm/containers/OrganizationContainer.jsx","modules/hrm/pages/OrganizationPage.jsx"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ChevronLeft = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"15 18 9 12 15 6\"\n  }));\n});\nChevronLeft.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nChevronLeft.displayName = 'ChevronLeft';\nexport default ChevronLeft;","import {find, get} from \"lodash\"\r\n\r\nexport const getDefaultValue = (options, id) => {\r\n    return find(options, (option) => get(option, 'value') == id)\r\n}\r\n\r\nexport const listToTree = (list) => {\r\n    let map = {},\r\n        tree_node, roots = [],\r\n        i;\r\n\r\n    for (i = 0; i < list?.length; i += 1) {\r\n        map[list[i].id] = i; // initialize the map\r\n        list[i].children = []; // initialize the children\r\n    }\r\n    for (i = 0; i < list?.length; i += 1) {\r\n        tree_node = list[i];\r\n        tree_node.label = tree_node.name;\r\n        if (tree_node.parent?.id !== null && (map[tree_node.parent?.id] === 0 || map[tree_node.parent?.id])) {\r\n            // if you have dangling branches check that map[node.parentId] exists\r\n\r\n            list[map[tree_node.parent?.id]].children.push(tree_node);\r\n\r\n        } else {\r\n            roots.push(tree_node);\r\n        }\r\n    }\r\n    return roots;\r\n}","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgChevronRight(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 8,\n    height: 14,\n    viewBox: \"0 0 8 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M0.46967 0.46967C0.176777 0.762563 0.176777 1.23744 0.46967 1.53033L5.93934 7L0.46967 12.4697C0.176777 12.7626 0.176777 13.2374 0.46967 13.5303C0.762563 13.8232 1.23744 13.8232 1.53033 13.5303L7.53033 7.53033C7.82322 7.23744 7.82322 6.76256 7.53033 6.46967L1.53033 0.46967C1.23744 0.176777 0.762563 0.176777 0.46967 0.46967Z\",\n    fill: \"#222222\",\n    fillOpacity: 0.6\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronRight);\nexport default __webpack_public_path__ + \"static/media/chevron-right.d4a17a4dc52487294755f0371622678b.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useState} from 'react';\r\nimport Title from \"../../../components/title\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {ChevronLeft, Edit2, Plus} from \"react-feather\";\r\nimport {useGetAllQuery, useGetOneQuery, usePostQuery} from \"../../../hooks/api\";\r\nimport {URLS} from \"../../../constants/urls\";\r\nimport {KEYS} from \"../../../constants/keys\";\r\nimport {ContentLoader, OverlayLoader} from \"../../../components/loader\";\r\nimport {get, head, find, isEqual, isEmpty} from \"lodash\";\r\nimport {Tab, Tabs} from \"../../../components/tab\";\r\nimport Content from \"../../../components/content\";\r\nimport photoImg from \"../../../assets/images/photo.png\";\r\nimport mapImg from \"../../../assets/images/map.png\";\r\nimport {PatternFormat} from \"react-number-format\";\r\nimport Modal from \"../../../components/modal\";\r\nimport Form from \"../../../containers/form\";\r\nimport Field from \"../../../containers/form/field\";\r\nimport orgIcon from \"../../../assets/icons/org.svg\";\r\nimport Names from \"../../../components/names\"\r\nimport Contacts from \"../../../components/contacts\";\r\nimport Locations from \"../../../components/locations\";\r\nimport GridView from \"../../../containers/grid-view\";\r\nimport {listToTree} from \"../../../utils\";\r\nimport chevronRightIcon from \"../../../assets/icons/chevron-right.svg\"\r\nimport clsx from \"clsx\";\r\n\r\nconst OrganizationContainer = ({id = null}) => {\r\n    const [openDepartmentModal, setDepartmentModal] = useState(false)\r\n    const [open, setOpen] = useState(false)\r\n    const [active, setActive] = useState(null)\r\n    const {t} = useTranslation();\r\n    const [defaultDept, setDefaultDept] = useState('dept')\r\n    const {data, isLoading} = useGetOneQuery({id: id, url: URLS.organizations})\r\n    const {\r\n        data: departments,\r\n        isLoading: isLoadingDepartments\r\n    } = useGetAllQuery({\r\n        key: KEYS.organizationDepartments,\r\n        url: `${URLS.organizations}/${id}${URLS.organizationDepartments}`\r\n    })\r\n\r\n\r\n    const {data: organizationTypeMedicalList, isLoading: isLoadingTypeMedicalList} = useGetAllQuery({\r\n        key: KEYS.organizationTypeMedical,\r\n        url: URLS.organizationTypeMedical,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: openDepartmentModal\r\n    })\r\n    const {data: organizationTypeList} = useGetAllQuery({\r\n        key: KEYS.organizationType,\r\n        url: URLS.organizationType,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: openDepartmentModal\r\n    })\r\n\r\n    const {data: organizationTypeLevelList, isLoading: isLoadingTypeLevelList} = useGetAllQuery({\r\n        key: KEYS.organizationTypeLevel,\r\n        url: URLS.organizationTypeLevel,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: openDepartmentModal\r\n    })\r\n\r\n    const {data: organizationTypeServiceList, isLoading: isLoadingTypeServiceList} = useGetAllQuery({\r\n        key: KEYS.organizationTypeService,\r\n        url: URLS.organizationTypeService,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: openDepartmentModal\r\n    })\r\n\r\n\r\n    const {\r\n        mutate: addDepartmentRequest, isLoading: isLoadingPost\r\n    } = usePostQuery({listKeyId: KEYS.organizationDepartments})\r\n    const {\r\n        mutate: addPositionRequest, isLoading: isLoadingPositionPost\r\n    } = usePostQuery({listKeyId: KEYS.organizationPositions})\r\n\r\n    const addDepartment = ({data: requestData}) => {\r\n        const {parent, names, service_types, contacts, level, locations, ...rest} = requestData;\r\n        addDepartmentRequest({\r\n            url: `${URLS.organizations}/${parent ? get(parent, 'id') : id}${URLS.organizationDepartments}`,\r\n            attributes: isEqual(defaultDept, 'dept') ? {\r\n                ...rest,\r\n                names,\r\n                parent: parent ?? undefined,\r\n                display: get(names, '[0].value'),\r\n                type: find(get(organizationTypeList, 'data', []), item => isEqual(get(item, 'code'), 'dept'))\r\n            } : {\r\n                ...rest,\r\n                locations,\r\n                service_types,\r\n                contacts,\r\n                level,\r\n                display: get(names, '[0].value'),\r\n                names,\r\n                type: find(get(organizationTypeList, 'data', []), item => isEqual(get(item, 'code'), 'prov'))\r\n            },\r\n        }, {\r\n            onSuccess: () => {\r\n                setDepartmentModal(false);\r\n            }\r\n        })\r\n    }\r\n    const addPosition = ({data: requestData}) => {\r\n        const {rate, organization_id, contacts, ...rest} = requestData;\r\n        if (get(organization_id, 'type.code') == 'dept') {\r\n            addPositionRequest({\r\n                url: `${URLS.organizations}/${id}${URLS.organizationPositions}`,\r\n                attributes: {\r\n                    ...rest,\r\n                    rate: parseFloat(rate),\r\n                    department_id: get(organization_id, 'id'),\r\n                    display: get(rest, '[0].value'),\r\n                }\r\n            }, {\r\n                onSuccess: () => {\r\n                    setOpen(false);\r\n                }\r\n            })\r\n        } else if (get(organization_id, 'id')) {\r\n            addPositionRequest({\r\n                url: `${URLS.organizations}/${get(organization_id, 'id')}${URLS.organizationPositions}`,\r\n                attributes: {\r\n                    ...rest,\r\n                    rate: parseFloat(rate),\r\n                    display: get(rest, '[0].value'),\r\n                }\r\n            }, {\r\n                onSuccess: () => {\r\n                    setOpen(false);\r\n                }\r\n            })\r\n        } else {\r\n            addPositionRequest({\r\n                url: `${URLS.organizations}/${id}${URLS.organizationPositions}`,\r\n                attributes: {\r\n                    ...rest,\r\n                    rate: parseFloat(rate),\r\n                    display: get(rest, '[0].value'),\r\n                }\r\n            }, {\r\n                onSuccess: () => {\r\n                    setOpen(false);\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n    const columns = [\r\n        {\r\n            title: t('ДОЛЖНОСТЬ'),\r\n            key: 'names',\r\n            render: ({value = []}) => get(find(value, _val => get(_val, 'locale') == 'uz'), 'value', '-')\r\n        },\r\n        {\r\n            title: t('ПО КЛАССИФИКАТОРУ'),\r\n            key: 'role',\r\n            render: ({value}) => get(value, 'display', '-')\r\n        },\r\n        {\r\n            title: t('ОБЩАЯ СТАВКА'),\r\n            key: 'rate'\r\n        },\r\n        {\r\n            title: t('ЗАПОЛНЕННОСТЬ'),\r\n            key: 'filled_rate'\r\n        },\r\n        {\r\n            title: t('КОЛ-ВО СОТРУДНИКОВ'),\r\n            key: 'practitioner_role_count'\r\n        }\r\n    ]\r\n    if (isLoading) {\r\n        return <OverlayLoader/>\r\n    }\r\n\r\n    console.log('departments', get(departments, 'data.data'))\r\n    console.log('listToTree', listToTree(get(departments, 'data.data')))\r\n    return (<div>\r\n            <div className=\"grid grid-cols-12\">\r\n                <div className=\"col-span-12 mb-5\">\r\n                    <Link className={'text-primary  font-bold inline-flex items-center'}\r\n                          to={'/hrm/organizations'}><ChevronLeft className={'mr-1'}/>{t(\"Назад к списку\")}</Link>\r\n                </div>\r\n                <div className=\"col-span-12 mb-4\">\r\n                    <Title>{get(data, 'data.display')}</Title>\r\n                </div>\r\n                <div className=\"col-span-12\">\r\n                    <Tabs>\r\n                        <Tab tab={'info'} label={t('Информация')}>\r\n                            <Content sm>\r\n                                <div className=\"grid grid-cols-12 mb-6\">\r\n                                    <div className=\"col-span-8\">\r\n                                        <Title sm>{t('Данные при регистрации')}</Title>\r\n                                    </div>\r\n                                    <div className=\"col-span-4 text-right\">\r\n                                        <button\r\n                                            className={'inline-flex items-center py-2 px-4 text-sm font-bold text-primary border border-primary rounded-lg'}>\r\n                                            <Edit2 size={18} className={'mr-3'}/>\r\n                                            {t(\"Редактировать данные\")}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"grid grid-cols-12 gap-x-16\">\r\n                                    <div className=\"col-span-9\">\r\n                                        <div className={'flex py-5 border-b items-center'}>\r\n                                            <span className={'w-1/3'}>ИНН:</span>\r\n                                            <strong className={'w-2/3'}>{get(data, 'data.tin')}</strong>\r\n                                        </div>\r\n                                        <div className={'flex py-5 border-b items-center'}>\r\n                                            <span className={'w-1/3'}>Родительская организация:</span>\r\n                                            <strong className={'w-2/3'}>{get(data, 'data.parent.display')}</strong>\r\n                                        </div>\r\n                                        <div className={'flex py-5 border-b items-center'}>\r\n                                            <span className={'w-1/3'}>Тип организации:</span>\r\n                                            <strong\r\n                                                className={'w-2/3'}>{get(data, 'data.medical_type.display')}</strong>\r\n                                        </div>\r\n                                        <div className={'flex py-5 border-b items-center'}>\r\n                                            <span className={'w-1/3'}>Уровень оказания услуг:</span>\r\n                                            <strong className={'w-2/3'}>{get(data, 'data.level.display')}</strong>\r\n                                        </div>\r\n                                        <div className={'flex py-5 border-b items-center'}>\r\n                                            <span className={'w-1/3'}>Форма собственности:</span>\r\n                                            <strong className={'w-2/3'}>{get(data, 'data.legal_form.display')}</strong>\r\n                                        </div>\r\n                                        <div className={'flex py-5 border-b items-center'}>\r\n                                            <span className={'w-1/3'}>Виды оказания услуг:</span>\r\n                                            <strong\r\n                                                className={'w-2/3'}>{get(data, 'data.service_types', []).map(({display = null}) => `${display}, `)}</strong>\r\n                                        </div>\r\n                                        <div className={'flex py-5 border-b items-center'}>\r\n                                            <span className={'w-1/3'}>Полное наименование:</span>\r\n                                            <strong className={'w-2/3'}>{get(data, 'data.display')}</strong>\r\n                                        </div>\r\n                                        <div className={'flex py-5 border-b items-center'}>\r\n                                            <span className={'w-1/3'}>Краткое наименование:</span>\r\n                                            <strong className={'w-2/3'}>{get(data, 'data.display')}</strong>\r\n                                        </div>\r\n                                        <div className={'flex py-5 border-b items-center'}>\r\n                                            <span className={'w-1/3'}>Адрес:</span>\r\n                                            <strong\r\n                                                className={'w-2/3'}>{`${get(head(get(data, 'data.locations', [])), 'address.state.display')}, ${get(head(get(data, 'data.locations', [])), 'address.city.display')}`}</strong>\r\n                                        </div>\r\n                                        <div className={'flex py-5 border-b items-center'}>\r\n                                            <span className={'w-1/3'}>Регион обслуживания:</span>\r\n                                            <strong\r\n                                                className={'w-2/3'}>{get(head(get(data, 'data.service_areas', [])), 'state.display')}</strong>\r\n                                        </div>\r\n                                        <div className={'flex py-5 border-b items-center'}>\r\n                                            <span className={'w-1/3'}>Телефон:</span>\r\n                                            <strong className={'w-2/3'}><PatternFormat displayType={'text'}\r\n                                                                                       format={\"+998 ## ### ## ##\"}\r\n                                                                                       value={get(find(get(head(get(data, 'data.contacts', [])), 'telecoms', []), _item => get(_item, 'system.id') == 1), 'value')}/></strong>\r\n                                        </div>\r\n                                        <div className={'flex py-5 border-b items-center'}>\r\n                                            <span className={'w-1/3'}>Электронная почта:</span>\r\n                                            <strong\r\n                                                className={'text-primary w-2/3'}>{get(find(get(head(get(data, 'data.contacts', [])), 'telecoms', []), _item => get(_item, 'system.id') == 2), 'value')}</strong>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-span-3\">\r\n                                        <img className={'mb-6 object-cover'} src={photoImg} alt=\"\"/>\r\n                                        <img className={'object-cover'} src={mapImg} alt=\"\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </Content>\r\n                        </Tab>\r\n                        <Tab tab={'employees'} label={t('Сотрудники')}>\r\n                            <div className=\"grid grid-cols-12 gap-x-6\">\r\n                                <div className=\"col-span-3\">\r\n                                    <Content sm classNames={'!p-4'}>\r\n                                    </Content>\r\n                                </div>\r\n                                <div className=\"col-span-9\">\r\n                                    <Content sm>\r\n\r\n                                    </Content>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Tab>\r\n                        <Tab tab={'departments'} label={t('Орг. структура')}>\r\n                            <div className=\"grid grid-cols-12 gap-x-6\">\r\n                                <div className=\"col-span-3\">\r\n                                    <Content sm classNames={'!p-4'}>\r\n                                        <ul className={'mb-6'}>\r\n                                            {listToTree(get(departments, 'data.data', [])).map(department => <li\r\n                                                className={'cursor-pointer text-[#222222] font-bold py-1.5 mb-2'}\r\n                                                key={get(department, 'id')}>\r\n                                                <div className={'flex justify-between'}\r\n                                                     onClick={() => setActive(get(department, 'id'))}>\r\n                                                    <span>{get(department, 'display')}</span>\r\n                                                    {\r\n                                                        !isEmpty(get(department, 'children', [])) && <img\r\n                                                            className={clsx({'rotate-90': get(department, 'id') === active})}\r\n                                                            src={chevronRightIcon} alt=\"icon\"/>\r\n                                                    }\r\n                                                </div>\r\n                                                {\r\n                                                    get(department, 'id') === active && !isEmpty(get(department, 'children', [])) &&\r\n                                                    <ul className={'p-4'}>\r\n                                                        {\r\n                                                            get(department, 'children', []).map((child, i) => <li\r\n                                                                key={get(child, 'id')}\r\n                                                                className={clsx('font-normal mb-3', {'!mb-0': i === get(department, 'children', [])?.length - 1})}>{get(child, 'display')}</li>)\r\n                                                        }\r\n                                                    </ul>\r\n                                                }\r\n                                            </li>)}\r\n                                        </ul>\r\n                                        <button onClick={() => setDepartmentModal(true)}\r\n                                                className={'text-primary font-bold flex items-center justify-center w-full text-center p-4 border-t border-1 border-t-[rgba(0,0,0,0.1)]'}>Добавить\r\n                                            отделение <Plus className={'ml-2'} size={24}/></button>\r\n                                    </Content>\r\n                                </div>\r\n                                <div className=\"col-span-9\">\r\n                                    <Content sm>\r\n                                        <div className=\"grid grid-cols-12\">\r\n                                            <div className=\"col-span-6\">\r\n                                                <Title sm>Штатные единицы</Title>\r\n                                            </div>\r\n                                            <div className=\"col-span-6 text-right\">\r\n                                                <button\r\n                                                    onClick={() => setOpen(true)}\r\n                                                    className={'inline-flex py-2.5 pl-2.5 pr-5 rounded-lg text-primary items-center font-bold border-2 border-primary text-center '}>\r\n                                                    <Plus className={'mr-1.5'}/>\r\n                                                    {t('Добавить должность')}\r\n                                                </button>\r\n                                            </div>\r\n                                            <div className=\"col-span-12\">\r\n                                                <GridView noBorder columns={columns}\r\n                                                          url={`${URLS.organizations}/${id}${URLS.organizationPositions}`}\r\n                                                          listKey={KEYS.organizationPositions}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Content>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Tab>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n            <Modal open={openDepartmentModal} onClose={() => setDepartmentModal(false)} classNames={'!w-[1000px]'}\r\n                   title={t('Добавить отделение')}>\r\n                {isLoadingPost && <ContentLoader/>}\r\n                {isLoadingTypeMedicalList ? <ContentLoader/> :\r\n                    <Form fieldArrayName={'contacts'}\r\n                          defaultValues={{contacts: [{telecoms: [{value: ''}, {value: ''}, {value: ''}]}]}}\r\n                          classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => addDepartment(data)}\r\n                          footer={<div className={'col-span-12 '}>\r\n                              <div className=\"flex justify-end\">\r\n                                  <button onClick={() => setDepartmentModal(false)} type={'button'}\r\n                                          className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                      {t('Отмена')}\r\n                                  </button>\r\n                                  <button type={'submit'}\r\n                                          className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                      {t('Сохранить')}\r\n                                  </button>\r\n                              </div>\r\n                          </div>}>\r\n                        <Field type={'select'} isLoading={isLoadingTypeMedicalList}\r\n                               defaultValue={find(get(organizationTypeMedicalList, 'data', []), _item => isEqual(get(_item, 'code'), defaultDept))}\r\n                               property={{onChange: (val) => setDefaultDept(get(val, 'code'))}}\r\n                               classNames={'col-span-12'}\r\n                               name={'medical_type'}\r\n                               label={<div className={'flex'}><span>{t('Тип организации')}</span><img\r\n                                   className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                               params={{required: true}}\r\n                               options={get(organizationTypeMedicalList, 'data', [])}/>\r\n                        {isEqual(defaultDept, 'dept') && <> <Field type={'async-select'} isDisabledSearch\r\n                                                                   url={`${URLS.organizations}/${id}${URLS.organizationDepartments}`}\r\n                                                                   keyId={KEYS.organizationsListForSelect}\r\n                                                                   classNames={'col-span-12'}\r\n                                                                   name={'parent'}\r\n                                                                   label={t('Родительская организация')}\r\n                        />\r\n\r\n                            <hr className={'mt-2 mb-6 col-span-12'}/>\r\n                            <Names/></>\r\n                        }\r\n                        {\r\n                            defaultDept && !isEqual(defaultDept, 'dept') && <>\r\n\r\n\r\n                                <Field type={'select'} isLoading={isLoadingTypeLevelList}\r\n                                       classNames={'col-span-6'} name={'level'}\r\n                                       label={<div className={'flex'}><span>{t('Уровень оказания услуг')}</span><img\r\n                                           className={'ml-1'} src={orgIcon} alt=\"org\"/></div>} params={{required: true}}\r\n                                       options={get(organizationTypeLevelList, 'data', [])}/>\r\n                                <Field params={{required: true}} type={'select'} isLoading={isLoadingTypeServiceList}\r\n                                       classNames={'col-span-6'}\r\n                                       name={'service_types'}\r\n                                       isMulti\r\n                                       label={<div className={'flex'}><span>{t('Виды оказания услуг')}</span><img\r\n                                           className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                       options={get(organizationTypeServiceList, 'data', [])}/>\r\n                                <hr className={'mb-3 w-full block col-span-12'}/>\r\n                                <Names/>\r\n\r\n                                <hr className={'mb-3 w-full block col-span-12'}/>\r\n                                <Locations/>\r\n                                <hr className={'mb-3 w-full block col-span-12'}/>\r\n                                <Contacts/>\r\n\r\n                            </>\r\n                        }\r\n                    </Form>}\r\n            </Modal>\r\n\r\n            <Modal open={open} onClose={() => setOpen(false)} classNames={'!w-[552px]'}\r\n                   title={t('Добавить должность')}>\r\n                {isLoadingPositionPost && <ContentLoader/>}\r\n\r\n                <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => addPosition(data)}\r\n                      footer={<div className={'col-span-12 '}>\r\n                          <div className=\"flex justify-end\">\r\n                              <button onClick={() => setOpen(false)} type={'button'}\r\n                                      className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                  {t('Отмена')}\r\n                              </button>\r\n                              <button type={'submit'}\r\n                                      className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                  {t('Сохранить')}\r\n                              </button>\r\n                          </div>\r\n                      </div>}>\r\n                    <Field type={'async-select'} isDisabledSearch\r\n                           url={`${URLS.organizations}/${id}${URLS.organizationDepartments}`}\r\n                           keyId={KEYS.organizationsListForSelect}\r\n                           classNames={'col-span-12'}\r\n                           name={'organization_id'}\r\n                           label={t('Отделение')}\r\n                    />\r\n                    <Field type={'async-select'}\r\n                           url={URLS.practitionerRole}\r\n                           keyId={KEYS.practitionerRole}\r\n                           classNames={'col-span-12'}\r\n                           name={'role'}\r\n                           label={<div className={'flex'}><span>{t('По классификатору')}</span><img\r\n                               className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                           params={{required: true}}\r\n                    />\r\n\r\n                    <hr className={'mt-2 mb-6 col-span-12'}/>\r\n                    <Names fullWidth hideValueShort/>\r\n                    <hr className={'mt-2 mb-6 col-span-12'}/>\r\n                    <Field type={'input'}\r\n                           placeholder={'Введите количество'}\r\n                           classNames={'col-span-12'}\r\n                           name={'rate'}\r\n                           label={<div className={'flex'}><span>{t('Общая ставка')}</span><img\r\n                               className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                           params={{required: true}}\r\n                    />\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrganizationContainer;","import React from 'react';\r\nimport {useParams} from \"react-router-dom\"\r\nimport OrganizationContainer from \"../containers/OrganizationContainer\";\r\n\r\nconst OrganizationPage = () => {\r\n    const {id} = useParams()\r\n    return (\r\n        <>\r\n            <OrganizationContainer id={id}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrganizationPage;"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ChevronLeft","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","propTypes","PropTypes","displayName","listToTree","list","tree_node","map","roots","id","children","_tree_node$parent","_tree_node$parent2","_tree_node$parent3","_tree_node$parent4","label","name","parent","push","_ref$id","_useState","useState","_useState2","_slicedToArray","openDepartmentModal","setDepartmentModal","_useState3","_useState4","open","setOpen","_useState5","_useState6","active","setActive","t","useTranslation","_useState7","_useState8","defaultDept","setDefaultDept","_useGetOneQuery","useGetOneQuery","url","URLS","organizations","data","isLoading","_useGetAllQuery","useGetAllQuery","KEYS","organizationDepartments","concat","departments","_useGetAllQuery2","organizationTypeMedical","params","limit","enabled","organizationTypeMedicalList","isLoadingTypeMedicalList","organizationTypeList","organizationType","_useGetAllQuery4","organizationTypeLevel","organizationTypeLevelList","isLoadingTypeLevelList","_useGetAllQuery5","organizationTypeService","organizationTypeServiceList","isLoadingTypeServiceList","_usePostQuery","usePostQuery","listKeyId","addDepartmentRequest","mutate","isLoadingPost","_usePostQuery2","organizationPositions","addPositionRequest","isLoadingPositionPost","columns","title","render","_ref4","_ref4$value","value","get","find","_val","_ref5","_jsx","OverlayLoader","console","log","_jsxs","className","Link","to","Title","Tabs","Tab","tab","Content","sm","Edit2","_ref6","_ref6$display","display","head","PatternFormat","displayType","format","_item","src","photoImg","alt","mapImg","classNames","department","onClick","isEmpty","clsx","chevronRightIcon","child","_get","Plus","GridView","noBorder","listKey","Modal","onClose","ContentLoader","Form","fieldArrayName","defaultValues","contacts","telecoms","formRequest","_ref2","requestData","names","service_types","level","locations","_excluded","attributes","isEqual","_objectSpread","undefined","type","item","onSuccess","addDepartment","footer","Field","defaultValue","property","onChange","val","orgIcon","required","options","_Fragment","isDisabledSearch","keyId","organizationsListForSelect","Names","isMulti","Locations","Contacts","_ref3","rate","organization_id","_excluded2","parseFloat","department_id","addPosition","practitionerRole","fullWidth","hideValueShort","placeholder","useParams","OrganizationContainer"],"sourceRoot":""}