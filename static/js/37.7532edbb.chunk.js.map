{"version":3,"file":"static/js/37.7532edbb.chunk.js","mappings":"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","sources":["components/names/index.jsx","components/input-mask/index.jsx","modules/hrm/containers/OrganizationsContainer.jsx","modules/hrm/pages/OrganizationsPage.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport clsx from \"clsx\";\r\nimport Field from \"../../containers/form/field\";\r\nimport {find, get, isEqual} from \"lodash\";\r\nimport orgIcon from \"../../assets/icons/org.svg\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\n\r\nconst Index = ({data, fullWidth = false, hideValueShort = false,defaultLang = 'uz'}) => {\r\n    let [lang, setLang] = useState(defaultLang);\r\n    const {t} = useTranslation()\r\n    useEffect(()=>{\r\n        if(defaultLang){\r\n            setLang(defaultLang)\r\n        }\r\n    },[defaultLang])\r\n    return (\r\n        <>\r\n            <div className={'flex col-span-12 mb-4'}>\r\n                <button type={'button'} onClick={() => setLang('uz')}\r\n                        className={clsx('py-2 px-4 border border-[#EAEFF8] rounded-lg mr-2.5 ', {'!bg-[#E5F0F3] !border-[#E5F0F3]': lang == 'uz'})}>O’zbekcha\r\n                </button>\r\n                <button type={'button'} onClick={() => setLang('uz-Cyrl')}\r\n                        className={clsx('py-2 px-4 border border-[#EAEFF8] rounded-lg mr-2.5 ', {'!bg-[#E5F0F3] !border-[#E5F0F3]': lang == 'uz-Cyrl'})}>Ўзбеқча\r\n                </button>\r\n                <button type={'button'} onClick={() => setLang('ru')}\r\n                        className={clsx('py-2 px-4 border border-[#EAEFF8] rounded-lg mr-2.5', {'!bg-[#E5F0F3] !border-[#E5F0F3]': lang == 'ru'})}>Русский\r\n                </button>\r\n                <button type={'button'} onClick={() => setLang('en')}\r\n                        className={clsx('py-2 px-4 border border-[#EAEFF8] rounded-lg mr-2.5', {'!bg-[#E5F0F3] !border-[#E5F0F3]': lang == 'en'})}>English\r\n                </button>\r\n            </div>\r\n\r\n            {lang == 'uz' && <>\r\n                {!hideValueShort && <Field type={'input'} params={{\r\n                    required: true,\r\n                    pattern: {value: /^[a-zA-Z0-9\\s\\'`,.]+$/, message: 'Invalid value'}\r\n                }}\r\n                                           defaultValue={get(find(get(data, `names`, []), (item) => isEqual(get(item, 'locale'), 'uz')), 'value_short')}\r\n                                           classNames={clsx('col-span-5', {'!col-span-12': fullWidth})}\r\n                                           name={`names[0].value_short`}\r\n                                           placeholder={t('Введите краткое наименование')}\r\n                                           property={{type: 'text'}}\r\n                                           label={<div className={'flex'}>\r\n                                               <span>{t('Краткое наименование')}</span><img\r\n                                               className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                />}\r\n                <Field type={'input'} params={{\r\n                    required: true,\r\n                    pattern: {value: /^[a-zA-Z0-9\\s\\'`,.]+$/, message: 'Invalid value'}\r\n                }}\r\n                       defaultValue={get(find(get(data, `names`, []), (item) => isEqual(get(item, 'locale'), 'uz')), 'value')}\r\n                       classNames={clsx('col-span-7', {'!col-span-12': fullWidth})}\r\n                       name={'names[0].value'}\r\n                       placeholder={t('Введите полное наименование')}\r\n                       property={{type: 'text'}}\r\n                       label={<div className={'flex'}><span>{t('Полное наименование')}</span><img\r\n                           className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                />\r\n                <Field type={'input'} defaultValue={'uz'} classNames={'col-span-5'}\r\n                       name={`names[0].locale`}\r\n                       placeholder={t('Введите краткое наименование')}\r\n                       property={{type: 'hidden'}}\r\n                       label={<div className={'flex'}><span>{t('Краткое наименование')}</span></div>}\r\n                />\r\n            </>}\r\n            {lang == 'uz-Cyrl' && <>\r\n                {!hideValueShort && <Field type={'input'} params={{\r\n                    required: true,\r\n                    pattern: {\r\n                        value: /^[ўЎҳҲғҒқҚаАбБвВгГдДеЕёЁжЖзЗиИйЙкКлЛмМнНоОпПрРсСтТуУфФхХцЦчЧшШщЩъЪыЫьЬэЭюЮяЯ0-9_ -]+$/u,\r\n                        message: 'Invalid value'\r\n                    }\r\n                }}\r\n                                           defaultValue={get(find(get(data, `names`, []), (item) => isEqual(get(item, 'locale'), 'uz-Cyrl')), 'value_short')}\r\n                                           classNames={clsx('col-span-5', {'!col-span-12': fullWidth})}\r\n                                           name={`names[1].value_short`}\r\n                                           placeholder={t('Введите краткое наименование')}\r\n                                           property={{type: 'text'}}\r\n                                           label={<div className={'flex'}>\r\n                                               <span>{t('Краткое наименование')}</span></div>}\r\n                />}\r\n                <Field type={'input'} params={{\r\n                    required: true,\r\n                    pattern: {\r\n                        value: /^[ўЎҳҲғҒқҚаАбБвВгГдДеЕёЁжЖзЗиИйЙкКлЛмМнНоОпПрРсСтТуУфФхХцЦчЧшШщЩъЪыЫьЬэЭюЮяЯ0-9_ -]+$/u,\r\n                        message: 'Invalid value'\r\n                    }\r\n                }}\r\n                       defaultValue={get(find(get(data, `names`, []), (item) => isEqual(get(item, 'locale'), 'uz-Cyrl')), 'value')}\r\n                       classNames={clsx('col-span-7', {'!col-span-12': fullWidth})}\r\n                       name={'names[1].value'}\r\n                       placeholder={t('Введите полное наименование')}\r\n                       property={{type: 'text'}}\r\n                       label={<div className={'flex'}><span>{t('Полное наименование')}</span></div>}\r\n                />\r\n                <Field type={'input'} defaultValue={'uz-Cyrl'} classNames={'col-span-5'}\r\n                       name={`names[1].locale`}\r\n                       placeholder={t('Введите краткое наименование')}\r\n                       property={{type: 'hidden'}}\r\n                       label={<div className={'flex'}><span>{t('Краткое наименование')}</span><img\r\n                           className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                />\r\n            </>}\r\n            {lang == 'ru' && <>\r\n                {!hideValueShort && <Field type={'input'} params={{\r\n                    pattern: {\r\n                        value: /^[А-Яа-я\\s_-]+$/u,\r\n                        message: 'Invalid value'\r\n                    }\r\n                }}\r\n                                           defaultValue={get(find(get(data, `names`, []), (item) => isEqual(get(item, 'locale'), 'ru')), 'value_short')}\r\n                                           classNames={clsx('col-span-5', {'!col-span-12': fullWidth})}\r\n                                           name={'names[2].value_short'}\r\n                                           property={{type: 'text'}}\r\n                                           placeholder={t('Введите краткое наименование')}\r\n                                           label={<div className={'flex'}>\r\n                                               <span>{t('Краткое наименование')}</span></div>}\r\n                />}\r\n                <Field type={'input'}\r\n                       params={{pattern: {value: /^[А-Яа-я0-9\\s_-]+$/u, message: 'Invalid value'}}}\r\n                       defaultValue={get(find(get(data, `names`, []), (item) => isEqual(get(item, 'locale'), 'ru')), 'value')}\r\n                       classNames={clsx('col-span-7', {'!col-span-12': fullWidth})}\r\n                       name={'names[2].value'}\r\n                       property={{type: 'text'}}\r\n                       placeholder={t('Введите полное наименование')}\r\n                       label={<div className={'flex'}><span>{t('Полное наименование')}</span></div>}\r\n                />\r\n                <Field type={'input'} defaultValue={'ru'} classNames={'col-span-5'}\r\n                       name={`names[2].locale`}\r\n                       placeholder={t('Введите краткое наименование')}\r\n                       property={{type: 'hidden'}}\r\n                       label={<div className={'flex'}><span>{t('Краткое наименование')}</span></div>}\r\n                />\r\n            </>}\r\n\r\n            {lang == 'en' && <>\r\n                {!hideValueShort && <Field type={'input'} params={{\r\n                    pattern: {\r\n                        value: /^[a-zA-Z0-9\\s\\'`,.]+$/,\r\n                        message: 'Invalid value'\r\n                    }\r\n                }}\r\n                                           defaultValue={get(data, `names[3].value_short`)}\r\n                                           classNames={clsx('col-span-5', {'!col-span-12': fullWidth})}\r\n                                           name={'names[3].value_short'}\r\n                                           property={{type: 'text'}}\r\n                                           placeholder={t('Введите краткое наименование')}\r\n                                           label={<div className={'flex'}>\r\n                                               <span>{t('Краткое наименование')}</span></div>}\r\n                />}\r\n                <Field type={'input'}\r\n                       params={{pattern: {value: /^[a-zA-Z0-9\\s\\'`,.]+$/, message: 'Invalid value'}}}\r\n                       defaultValue={get(data, `names[3].value`)}\r\n                       classNames={clsx('col-span-7', {'!col-span-12': fullWidth})}\r\n                       name={'names[3].value'}\r\n                       property={{type: 'text'}}\r\n                       placeholder={t('Введите полное наименование')}\r\n                       label={<div className={'flex'}><span>{t('Полное наименование')}</span></div>}\r\n                />\r\n                <Field type={'input'} defaultValue={'en'} classNames={'col-span-5'}\r\n                       name={`names[3].locale`}\r\n                       placeholder={t('Введите краткое наименование')}\r\n                       property={{type: 'hidden'}}\r\n                       label={<div className={'flex'}><span>{t('Краткое наименование')}</span></div>}\r\n                /></>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Index;","import React, {useState} from 'react';\r\nimport clsx from \"clsx\";\r\nimport InputMask from \"react-input-mask\";\r\nconst InputMaskComponent = ({\r\n                    label = '',\r\n                    handleValue = () => {\r\n                    },\r\n                   mask='',\r\n                   maskChar='-',\r\n                   placeholder=''\r\n                }) => {\r\n    const [value,setValue] = useState('')\r\n\r\n    return (\r\n        <div className={clsx('flex items-center')}>\r\n            {label && <label className={clsx('mr-2 text-secondary-300 font-bold flex items-center')}\r\n                             htmlFor={label}>{label}</label>}\r\n            <InputMask\r\n                className={clsx('py-2.5 px-4 w-36 rounded-lg outline-none')}\r\n                placeholder={placeholder}\r\n                mask={mask}\r\n                maskChar={maskChar}\r\n                // value={value}\r\n                // onChange={setValue}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputMaskComponent;","import React, {useEffect, useState} from 'react';\r\nimport Title from \"../../../components/title\";\r\nimport GridView from \"../../../containers/grid-view\";\r\nimport {KEYS} from \"../../../constants/keys\";\r\nimport {URLS} from \"../../../constants/urls\";\r\nimport {get, isObject, range, isNil, isEmpty, forEach, keys} from \"lodash\"\r\nimport downloadIcon from \"../../../assets/icons/download.svg\"\r\nimport {useNavigate, useSearchParams} from 'react-router-dom'\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Modal from \"../../../components/modal\";\r\nimport {Tab, Tabs} from \"../../../components/tab\";\r\nimport Form from \"../../../containers/form\";\r\nimport orgIcon from \"../../../assets/icons/org.svg\"\r\nimport {Minus, Plus} from \"react-feather\";\r\nimport {useGetAllQuery, useGetOneQuery, usePostQuery, usePutQuery} from \"../../../hooks/api\";\r\nimport Search from \"../../../components/search\"\r\nimport SelectComponent from \"../../../components/select\";\r\nimport InputMaskComponent from \"../../../components/input-mask\";\r\nimport {ContentLoader} from \"../../../components/loader\";\r\nimport Field from \"../../../containers/form/field\";\r\nimport Dropzone from \"../../../containers/form/components/Dropzone\";\r\nimport Badge from \"../../../components/badge\"\r\nimport Names from \"../../../components/names\"\r\nimport Contacts from \"../../../components/contacts\";\r\nimport Locations from \"../../../components/locations\";\r\n\r\n\r\nconst OrganizationsContainer = () => {\r\n    const navigate = useNavigate();\r\n    const [_, setSearchParams] = useSearchParams();\r\n    const [rowId, setRowId] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const [lang, setLang] = useState('uz');\r\n    let [orgData, setOrgData] = useState({});\r\n    const [filter, setFilter] = useState({name: '', state_id: null, city_id: null})\r\n    const {t} = useTranslation();\r\n\r\n    const {data: organizationTypeLevelList, isLoading: isLoadingTypeLevelList} = useGetAllQuery({\r\n        key: KEYS.organizationTypeLevel,\r\n        url: URLS.organizationTypeLevel,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: !!(open || !isNil(rowId))\r\n    })\r\n\r\n    const {data: organizationTypeMedicalList, isLoading: isLoadingTypeMedicalList} = useGetAllQuery({\r\n        key: KEYS.organizationTypeMedical,\r\n        url: URLS.organizationTypeMedical,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: !!(open || !isNil(rowId))\r\n    })\r\n\r\n    const {data: organizationLegalFormList, isLoading: isLoadingLegalFormList} = useGetAllQuery({\r\n        key: KEYS.organizationLegalForm,\r\n        url: URLS.organizationLegalForm,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: !!(open || !isNil(rowId))\r\n    })\r\n\r\n    const {data: organizationTypeServiceList, isLoading: isLoadingTypeServiceList} = useGetAllQuery({\r\n        key: KEYS.organizationTypeService,\r\n        url: URLS.organizationTypeService,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: !!(open || !isNil(rowId))\r\n    })\r\n\r\n\r\n    const {data: organizationRegions, isLoading: isLoadingRegions} = useGetAllQuery({\r\n        key: KEYS.organizationTerritory,\r\n        url: URLS.organizationTerritory,\r\n        params: {\r\n            params: {\r\n                limit: 100,\r\n                level: 1\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n    const {data: districts} = useGetAllQuery({\r\n        key: [KEYS.organizationTerritory, get(filter, 'state_id.value')],\r\n        url: URLS.organizationTerritory,\r\n        params: {\r\n            params: {\r\n                limit: 100,\r\n                level: 2,\r\n                parent_id: get(filter, 'state_id.value')\r\n            },\r\n        },\r\n        enabled: !!(get(filter, 'state_id.value'))\r\n    })\r\n\r\n\r\n    const {data, isLoading: isLoadingOne} = useGetOneQuery({\r\n        key: [KEYS.organizations, rowId],\r\n        id: rowId,\r\n        url: URLS.organizations,\r\n        enabled: !!(rowId)\r\n    })\r\n\r\n    const {\r\n        mutate: addRequest, isLoading: isLoadingPost\r\n    } = usePostQuery({listKeyId: KEYS.organizations})\r\n    const {\r\n        mutate: updateRequest, isLoading: isLoadingPut\r\n    } = usePutQuery({listKeyId: KEYS.organizations})\r\n\r\n    const columns = [\r\n        {\r\n            title: t('НАИМЕНОВАНИЕ'),\r\n            key: 'display',\r\n        },\r\n        {\r\n            title: t('РОДИТЕЛЬСКАЯ ОРГАНИЗАЦИЯ'),\r\n            key: 'parent',\r\n            render: ({value}) => value?.display\r\n        },\r\n        {\r\n            title: t('ТИП ОРГАНИЗАЦИИ'),\r\n            key: 'medical_type.display',\r\n        },\r\n        {\r\n            title: t('УРОВЕНЬ'),\r\n            key: 'level.display',\r\n        },\r\n        {\r\n            title: t('СТАТУС'),\r\n            key: 'active',\r\n            render: ({value}) => <Badge\r\n                status={value ? 'success' : 'error'}>{value ? t('Активный') : t('Неактивный')}</Badge>\r\n        }\r\n    ]\r\n\r\n    const onSubmit = ({data}, tab) => {\r\n        forEach(keys(data), (_key) => {\r\n            if (data[_key] === null) {\r\n                delete data[_key];\r\n            }\r\n        })\r\n        if (tab === 'address') {\r\n\r\n        } else {\r\n            setOrgData(prev => ({...prev, ...data}))\r\n            setSearchParams(`tab=${tab}`)\r\n        }\r\n    }\r\n\r\n    const add = () => {\r\n        const {longitude, latitude, management_form, ...rest} = orgData;\r\n        if (rowId) {\r\n            updateRequest({\r\n                url: `${URLS.organizations}/${rowId}`,\r\n                attributes: {\r\n                    ...rest,\r\n                    display: get(orgData, 'names[0].value'),\r\n                    locations: [{\r\n                        address: get(orgData, 'locations[0].address'),\r\n                        longitude: parseFloat(longitude) || undefined,\r\n                        latitude: parseFloat(latitude) || undefined\r\n                    }]\r\n                }\r\n            }, {\r\n                onSuccess: () => {\r\n                    closeModal();\r\n                }\r\n            })\r\n        } else {\r\n            addRequest({\r\n                url: URLS.organizations,\r\n                attributes: {\r\n                    ...rest,\r\n                    display: get(orgData, 'names[0].value'),\r\n                    locations: [{\r\n                        address: get(orgData, 'locations[0].address'),\r\n                        longitude: parseFloat(longitude) || undefined,\r\n                        latitude: parseFloat(latitude) || undefined\r\n                    }]\r\n                }\r\n            }, {\r\n                onSuccess: () => {\r\n                    closeModal();\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setRowId(null);\r\n        setOpen(false)\r\n        setOrgData({})\r\n        setSearchParams(``)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (get(data, 'data') && rowId) {\r\n            setOrgData(get(data, 'data'))\r\n        }\r\n    }, [data, rowId])\r\n\r\n    console.log('orgData', orgData)\r\n    return (\r\n        <div>\r\n            <div className=\"grid grid-cols-12 items-center\">\r\n                <div className=\"col-span-6\">\r\n                    <Title>{t(\"Организации\")}</Title>\r\n                </div>\r\n                <div className=\"col-span-6 flex items-center justify-end\">\r\n                    <button\r\n                        onClick={() => setOpen(true)}\r\n                        className={'inline-flex py-2.5 pl-2.5 pr-5 rounded-lg bg-primary items-center text-white font-semibold text-center mr-4'}>\r\n                        <Plus className={'mr-1.5'}/>\r\n                        {t('Добавить организацию')}\r\n                    </button>\r\n                    <button\r\n                        className={'inline-flex items-center py-2.5 pl-2.5 pr-5 text-sm font-bold text-primary border border-primary rounded-lg'}>\r\n                        <img className={'mr-2.5'} src={downloadIcon} alt={'export'}/>\r\n                        {t(\"Export\")}\r\n                    </button>\r\n                </div>\r\n                <div className=\"col-span-4 mt-5\">\r\n                    <Search handleSearch={(val) => setFilter(prev => ({...prev, name: val}))}/>\r\n                </div>\r\n                <div className=\"col-span-8 mt-5 flex justify-end\">\r\n                    <div className=\"mr-6\"><SelectComponent\r\n                        isLoading={isLoadingRegions}\r\n                        value={get(filter, 'state_id')}\r\n                        setValue={(val) => setFilter(prev => ({...prev, state_id: val}))}\r\n                        label={t('Регион')} options={get(organizationRegions, 'data', []).map(_option => ({\r\n                        value: get(_option, 'id'),\r\n                        label: get(_option, 'display')\r\n                    }))}/></div>\r\n                    <div className=\"mr-6\">\r\n                        <SelectComponent\r\n                            setValue={(val) => setFilter(prev => ({...prev, city_id: val}))}\r\n                            value={get(filter, 'city_id')}\r\n                            options={get(districts, 'data', []).map(_option => ({\r\n                                value: get(_option, 'id'),\r\n                                label: get(_option, 'display')\r\n                            }))}\r\n                            label={t('Район')}/>\r\n                    </div>\r\n                    <InputMaskComponent mask={'999999999'} label={'ИНН'}/>\r\n                </div>\r\n                <div className=\"col-span-12 mt-6\">\r\n                    <GridView\r\n                        getRowId={setRowId}\r\n                        onRowClick={({id}) => navigate(`/hrm/organization/${id}`)}\r\n                        params={{\r\n                            name: get(filter, 'name'),\r\n                            state_id: get(filter, 'state_id.value'),\r\n                            city_id: get(filter, 'city_id.value')\r\n                        }}\r\n                        hasActionColumn\r\n                        dataKey={'data.payload.data'}\r\n                        listKey={KEYS.organizations} url={URLS.organizations}\r\n                        columns={columns}/>\r\n                </div>\r\n            </div>\r\n            <Modal open={open} onClose={closeModal} classNames={'!w-[1080px] !pb-0'}\r\n                   title={t('Добавление организации')}>\r\n                {(isLoadingPost) && <ContentLoader/>}\r\n                <Tabs isLabelDisabled>\r\n                    <Tab tab={'info'} label={t('Информация')}>\r\n                        <Form defaultValues={{...orgData}} classNames={'grid grid-cols-12 gap-x-6'}\r\n                              formRequest={(data) => onSubmit(data, 'name')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClose={closeModal} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n                            <Field type={'input-mask'}\r\n                                   params={{required: true, pattern: {value: /^[0-9]{9}$/, message: 'Invalid value'}}}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'tin'}\r\n                                   defaultValue={get(orgData, 'tin')}\r\n                                   property={{\r\n                                       placeholder: t('Введите ИНН организации'),\r\n                                       mask: '999999999',\r\n                                       maskChar: '_'\r\n                                   }}\r\n                                   label={<div className={'flex'}><span>{t('ИНН организации')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Field type={'async-select'} isDisabledSearch url={URLS.organizationsListForSelect}\r\n                                   keyId={KEYS.organizationsListForSelect}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'parent'}\r\n                                   defaultValue={get(orgData, 'parent')}\r\n                                   label={t('Родительская организация')}\r\n                            />\r\n                            <Field type={'select'} isLoading={isLoadingTypeLevelList}\r\n                                   defaultValue={get(orgData, 'level')}\r\n                                   classNames={'col-span-6'} name={'level'}\r\n                                   label={<div className={'flex'}><span>{t('Уровень оказания услуг')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>} params={{required: true}}\r\n                                   options={get(organizationTypeLevelList, 'data', [])}/>\r\n                            <Field type={'select'} isLoading={isLoadingTypeMedicalList}\r\n                                   defaultValue={get(orgData, 'medical_type')}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'medical_type'}\r\n                                   label={<div className={'flex'}><span>{t('Тип организации')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                   params={{required: true}}\r\n                                   options={get(organizationTypeMedicalList, 'data', [])}/>\r\n                            <Field type={'select'} isLoading={isLoadingLegalFormList}\r\n                                   defaultValue={get(orgData, 'legal_form')}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'legal_form'}\r\n                                   label={t('Организационно-правовая форма')}\r\n                                   options={get(organizationLegalFormList, 'data', [])}/>\r\n                            <Field type={'select'} isLoading={isLoadingTypeServiceList}\r\n                                   defaultValue={get(orgData, 'service_types')}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'service_types'}\r\n                                   label={t('Виды оказания услуг')}\r\n                                   isMulti\r\n                                   options={get(organizationTypeServiceList, 'data', [])}/>\r\n                            <Field type={'async-select'} defaultValue={get(orgData, 'affiliation')}\r\n                                   classNames={'col-span-6'}\r\n                                   keyId={KEYS.organizationManagementForm}\r\n                                   url={URLS.organizationManagementForm}\r\n                                   name={'affiliation'}\r\n                                   label={t('Орган государственного управления')}\r\n                            />\r\n\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'name'} label={t('Наименование')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'address')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=info`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n                            <Names data={orgData}/>\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'address'} label={t('Адрес')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'region')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=name`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n                            <Locations data={orgData}/>\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'region'} label={t('Регион обслуживания')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'contact')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=address`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n\r\n                            <Field type={'select'} defaultValue={get(orgData, 'service_areas[0].state')}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'service_areas[0].state'}\r\n                                   label={<div className={'flex'}><span>{t('Регион')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                   params={{required: true}}\r\n                                   options={get(organizationRegions, 'data', [])}/>\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'contact'} label={t('Контакты')}>\r\n                        <Form fieldArrayName={'contacts'}\r\n                              defaultValues={{contacts: [{telecoms: [{value: ''}, {value: ''}, {value: ''}]}]}}\r\n                              classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'photo')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=region`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n\r\n                            <Contacts data={orgData}/>\r\n\r\n                            <h3 className={'mb-6 col-span-12 font-semibold'}>Географические координаты</h3>\r\n                            <Field type={'input'} params={{\r\n                                pattern: {\r\n                                    value: /^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$/,\r\n                                    message: 'Invalid format'\r\n                                }\r\n                            }} defaultValue={get(orgData, 'latitude', null)}\r\n                                   classNames={'col-span-4'}\r\n                                   name={`latitude`}\r\n                                   placeholder={t('Широта')}\r\n                                   label={t('Широта')}\r\n                            />\r\n                            <Field type={'input'} params={{\r\n                                pattern: {\r\n                                    value: /^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$/,\r\n                                    message: 'Invalid format'\r\n                                }\r\n                            }} defaultValue={get(orgData, 'longitude', null)}\r\n                                   classNames={'col-span-4'}\r\n                                   name={`longitude`}\r\n                                   placeholder={t('Долгота')}\r\n                                   label={t('Долгота')}\r\n                            />\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'photo'} label={t('Изображение')}>\r\n                        <Dropzone/>\r\n                        <div className={'col-span-12 '}>\r\n                            <div className=\"flex justify-end\">\r\n                                <button onClick={() => setSearchParams(`tab=contact`)} type={'button'}\r\n                                        className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                    {t('Назад')}\r\n                                </button>\r\n                                <button onClick={add} type={'submit'}\r\n                                        className={'py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                    {t('Сохранить')}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </Modal>\r\n\r\n            <Modal open={!isNil(rowId)} onClose={closeModal} classNames={'!w-[1080px] !pb-0'}\r\n                   title={t('Обновить организацию')}>\r\n                {(isLoadingPut) && <ContentLoader/>}\r\n                {(isLoadingOne) && <div className={'py-10'}><ContentLoader/></div>}\r\n                {!isEmpty(orgData) && <Tabs isLabelDisabled>\r\n                    <Tab tab={'info'} label={t('Информация')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'name')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClose={closeModal} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n                            <Field type={'input-mask'}\r\n                                   params={{required: true, pattern: {value: /^[0-9]{9}$/, message: 'Invalid value'}}}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'tin'}\r\n                                   defaultValue={get(orgData, 'tin')}\r\n                                   property={{\r\n                                       placeholder: t('Введите ИНН организации'),\r\n                                       mask: '999999999',\r\n                                       maskChar: '_'\r\n                                   }}\r\n                                   label={<div className={'flex'}><span>{t('ИНН организации')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Field type={'async-select'} isDisabledSearch url={URLS.organizationsListForSelect}\r\n                                   keyId={KEYS.organizationsListForSelect}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'parent'}\r\n                                   defaultValue={get(orgData, 'parent', undefined)}\r\n                                   label={t('Родительская организация')}\r\n                            />\r\n                            <Field type={'select'} isLoading={isLoadingTypeLevelList}\r\n                                   defaultValue={get(orgData, 'level', undefined)}\r\n                                   classNames={'col-span-6'} name={'level'}\r\n                                   label={<div className={'flex'}><span>{t('Уровень оказания услуг')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>} params={{required: true}}\r\n                                   options={get(organizationTypeLevelList, 'data', [])}/>\r\n                            <Field type={'select'} isLoading={isLoadingTypeMedicalList}\r\n                                   defaultValue={get(orgData, 'medical_type', undefined)}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'medical_type'}\r\n                                   label={<div className={'flex'}><span>{t('Тип организации')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                   params={{required: true}}\r\n                                   options={get(organizationTypeMedicalList, 'data', [])}/>\r\n                            <Field type={'select'} isLoading={isLoadingLegalFormList}\r\n                                   defaultValue={get(orgData, 'legal_form', undefined)}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'legal_form'}\r\n                                   label={t('Организационно-правовая форма')}\r\n                                   options={get(organizationLegalFormList, 'data', [])}/>\r\n                            <Field type={'select'} isLoading={isLoadingTypeServiceList}\r\n                                   defaultValue={get(orgData, 'service_types', undefined)}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'service_types'}\r\n                                   label={t('Виды оказания услуг')}\r\n                                   isMulti\r\n                                   options={get(organizationTypeServiceList, 'data', [])}/>\r\n                            <Field type={'async-select'} defaultValue={get(orgData, 'affiliation', undefined)}\r\n                                   classNames={'col-span-6'}\r\n                                   keyId={KEYS.organizationManagementForm}\r\n                                   url={URLS.organizationManagementForm}\r\n                                   name={'affiliation'}\r\n                                   label={t('Орган государственного управления')}\r\n                            />\r\n\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'name'} label={t('Наименование')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'address')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=info`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n\r\n                            <Names data={orgData}/>\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'address'} label={t('Адрес')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'region')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=name`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n                            <Locations data={orgData}/>\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'region'} label={t('Регион обслуживания')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'contact')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=address`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n\r\n                            <Field type={'select'} defaultValue={get(orgData, 'service_areas[0].state')}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'service_areas[0].state'}\r\n                                   label={<div className={'flex'}><span>{t('Регион')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                   params={{required: true}}\r\n                                   options={get(organizationRegions, 'data', [])}/>\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'contact'} label={t('Контакты')}>\r\n                        <Form\r\n                            defaultValues={{contacts: get(orgData, 'contacts', []).map(item => ({telecoms: get(item, 'telecoms', []).map(_item => ({value: get(_item, 'value')}))}))}}\r\n                            fieldArrayName={'contacts'} classNames={'grid grid-cols-12 gap-x-6'}\r\n                            formRequest={(data) => onSubmit(data, 'photo')}\r\n                            footer={<div className={'col-span-12 '}>\r\n                                <div className=\"flex justify-end\">\r\n                                    <button onClick={() => setSearchParams(`tab=region`)} type={'button'}\r\n                                            className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                        {t('Назад')}\r\n                                    </button>\r\n                                    <button type={'submit'}\r\n                                            className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                        {t('Следующий шаг')}\r\n                                    </button>\r\n                                </div>\r\n                            </div>}>\r\n                            <Contacts data={orgData}/>\r\n\r\n                            <h3 className={'mb-6 col-span-12 font-semibold'}>Географические координаты</h3>\r\n                            <Field type={'input'} params={{\r\n                                pattern: {\r\n                                    value: /^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$/,\r\n                                    message: 'Invalid format'\r\n                                }\r\n                            }} defaultValue={get(orgData, 'latitude', null)}\r\n                                   classNames={'col-span-4'}\r\n                                   name={`latitude`}\r\n                                   placeholder={t('Широта')}\r\n                                   label={t('Широта')}\r\n                            />\r\n                            <Field type={'input'} params={{\r\n                                pattern: {\r\n                                    value: /^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$/,\r\n                                    message: 'Invalid format'\r\n                                }\r\n                            }} defaultValue={get(orgData, 'longitude', null)}\r\n                                   classNames={'col-span-4'}\r\n                                   name={`longitude`}\r\n                                   placeholder={t('Долгота')}\r\n                                   label={t('Долгота')}\r\n                            />\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'photo'} label={t('Изображение')}>\r\n                        <Dropzone/>\r\n                        <div className={'col-span-12 '}>\r\n                            <div className=\"flex justify-end\">\r\n                                <button onClick={() => setSearchParams(`tab=contact`)} type={'button'}\r\n                                        className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                    {t('Назад')}\r\n                                </button>\r\n                                <button onClick={add} type={'submit'}\r\n                                        className={'py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                    {t('Сохранить')}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>}\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrganizationsContainer;","import React from 'react';\r\nimport OrganizationsContainer from \"../containers/OrganizationsContainer\";\r\n\r\nconst OrganizationsPage = () => {\r\n    return (\r\n        <>\r\n            <OrganizationsContainer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrganizationsPage;"],"names":["_ref","data","_ref$fullWidth","fullWidth","_ref$hideValueShort","hideValueShort","_ref$defaultLang","defaultLang","_useState","useState","_useState2","_slicedToArray","lang","setLang","t","useTranslation","useEffect","_jsxs","_Fragment","children","className","_jsx","type","onClick","clsx","Field","params","required","pattern","value","message","defaultValue","get","find","item","isEqual","classNames","name","placeholder","property","label","src","orgIcon","alt","_ref$label","_ref$mask","handleValue","mask","_ref$maskChar","maskChar","_ref$placeholder","htmlFor","InputMask","navigate","useNavigate","_useSearchParams","useSearchParams","_useSearchParams2","setSearchParams","rowId","setRowId","_useState3","_useState4","open","setOpen","_useState5","_useState6","_useState7","_useState8","orgData","setOrgData","_useState9","state_id","city_id","_useState10","filter","setFilter","_useGetAllQuery","useGetAllQuery","key","KEYS","organizationTypeLevel","url","URLS","limit","enabled","isNil","organizationTypeLevelList","isLoadingTypeLevelList","isLoading","_useGetAllQuery2","organizationTypeMedical","organizationTypeMedicalList","isLoadingTypeMedicalList","_useGetAllQuery3","organizationLegalForm","organizationLegalFormList","isLoadingLegalFormList","_useGetAllQuery4","organizationTypeService","organizationTypeServiceList","isLoadingTypeServiceList","_useGetAllQuery5","organizationTerritory","level","organizationRegions","isLoadingRegions","districts","parent_id","_useGetOneQuery","useGetOneQuery","organizations","id","isLoadingOne","_usePostQuery","usePostQuery","listKeyId","addRequest","mutate","isLoadingPost","_usePutQuery","usePutQuery","updateRequest","isLoadingPut","columns","title","render","display","_ref2","Badge","status","onSubmit","_ref3","tab","forEach","keys","_key","prev","_objectSpread","concat","add","longitude","latitude","rest","management_form","_objectWithoutProperties","_excluded","attributes","locations","address","parseFloat","undefined","onSuccess","closeModal","console","log","Title","Plus","downloadIcon","Search","handleSearch","val","SelectComponent","setValue","options","map","_option","InputMaskComponent","GridView","getRowId","onRowClick","_ref4","hasActionColumn","dataKey","listKey","Modal","onClose","ContentLoader","Tabs","isLabelDisabled","Tab","Form","defaultValues","formRequest","footer","isDisabledSearch","organizationsListForSelect","keyId","isMulti","organizationManagementForm","Names","Locations","fieldArrayName","contacts","telecoms","Contacts","Dropzone","isEmpty","_item","OrganizationsContainer"],"sourceRoot":""}