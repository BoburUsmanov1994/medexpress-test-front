{"version":3,"file":"static/js/175.cb6bbae6.chunk.js","mappings":"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","sources":["components/select/index.jsx","constants/index.js","assets/icons/prev.svg","assets/icons/next.svg","components/no-data/index.jsx","containers/grid-view/index.jsx","assets/icons/download.svg","../node_modules/react-feather/dist/icons/search.js","components/search/index.jsx","components/input-mask/index.jsx","components/badge/index.jsx","modules/hrm/containers/OrganizationsContainer.jsx","modules/hrm/pages/OrganizationsPage.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport RSelect, {components} from 'react-select';\r\nimport clsx from \"clsx\";\r\nimport arrowIcon from \"../../assets/icons/select-arrow.svg\"\r\n\r\nconst DropdownIndicator = props => {\r\n    return (\r\n        components.DropdownIndicator && (\r\n            <components.DropdownIndicator {...props}>\r\n                <img src={arrowIcon} alt={'arrow'}/>\r\n            </components.DropdownIndicator>\r\n        )\r\n    );\r\n};\r\nconst customStyles = (sm = false) => ({\r\n    control: (base, state, error) => ({\r\n        ...base,\r\n        background: \"#fff\",\r\n        borderColor: \"rgba(0, 0, 0, 0.1)\",\r\n        borderRadius: '8px',\r\n        outline: \"none\",\r\n        color: \"#222\",\r\n        display: \"flex\",\r\n        overflow: 'hidden',\r\n        padding: '2px 8px',\r\n        width: sm ?'100px':'200px',\r\n        height: '40px',\r\n        fontSize: '16px',\r\n        fontWeight: '600',\r\n        // \"&:hover\": {\r\n        //     borderColor: '#006D85',\r\n        //     outline: \"none\",\r\n        // },\r\n        // \"&:focus\": {\r\n        //     borderColor: '#006D85',\r\n        //     outline: \"none\",\r\n        // }\r\n    }),\r\n    indicatorSeparator: (base, state) => ({\r\n        ...base,\r\n        display: 'none'\r\n    })\r\n});\r\nconst Select = ({\r\n                    name = '',\r\n                    value = null,\r\n                    sm = false,\r\n                    label = '',\r\n                    options = [],\r\n                    setValue = () => {\r\n                    },\r\n                    isClearable=true,\r\n                    isLoading=false\r\n                }) => {\r\n\r\n    return (\r\n        <div className={clsx('flex items-center z-50 relative')}>\r\n            {label && <label className={clsx('mr-2 text-secondary-300 font-bold flex items-center')}\r\n                             htmlFor={label}>{label}</label>}\r\n            <RSelect\r\n                isLoading={isLoading}\r\n                isClearable={isClearable}\r\n                name={name}\r\n                clearIndicator={true}\r\n                styles={customStyles(sm)}\r\n                id={label}\r\n                value={value}\r\n                onChange={setValue}\r\n                options={options}\r\n                components={{DropdownIndicator}}\r\n                placeholder={sm ? '' : 'Не выбран'}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;","import {range} from \"lodash\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport const YEARS = range(2000, dayjs().add(1, 'year').format(\"YYYY\")).map(year => ({value: year, label: year}))\r\nexport const MONTHS = [\r\n    {\r\n        value: '01',\r\n        label: 'January'\r\n    },\r\n    {\r\n        value: '02',\r\n        label: 'February'\r\n    },\r\n    {\r\n        value: '03',\r\n        label: 'March'\r\n    },\r\n    {\r\n        value: '04',\r\n        label: 'April'\r\n    },\r\n    {\r\n        value: '05',\r\n        label: 'May'\r\n    },\r\n    {\r\n        value: '06',\r\n        label: 'June'\r\n    },\r\n    {\r\n        value: '07',\r\n        label: 'July'\r\n    },\r\n    {\r\n        value: '08',\r\n        label: 'August'\r\n    },\r\n    {\r\n        value: '09',\r\n        label: 'September'\r\n    },\r\n    {\r\n        value: '10',\r\n        label: 'October'\r\n    },\r\n    {\r\n        value: '11',\r\n        label: 'November'\r\n    },\r\n    {\r\n        value: '12',\r\n        label: 'December'\r\n    }\r\n]\r\nexport const PER_PAGES = [\r\n    {\r\n        value: 15,\r\n        label: '15'\r\n    },\r\n    {\r\n        value: 25,\r\n        label: '25'\r\n    },\r\n    {\r\n        value: 50,\r\n        label: '50'\r\n    }\r\n]\r\nexport const REGIONS = [\r\n    {\r\n        value: 1,\r\n        label: 'Andijon viloyati'\r\n    },\r\n    {\r\n        value: 2,\r\n        label: 'Buxoro viloyati'\r\n    },\r\n    {\r\n        value: 3,\r\n        label: 'Jizzax viloyati'\r\n    },\r\n    {\r\n        value: 4,\r\n        label: 'Qashqadaryo viloyati'\r\n    },\r\n    {\r\n        value: 5,\r\n        label: 'Navoiy viloyati'\r\n    },\r\n    {\r\n        value: 6,\r\n        label: 'Namangan viloyati'\r\n    },\r\n    {\r\n        value: 7,\r\n        label: 'Samarqand viloyati'\r\n    },\r\n    {\r\n        value: 8,\r\n        label: 'Surxandaryo viloyati'\r\n    },\r\n    {\r\n        value: 9,\r\n        label: 'Sirdaryo viloyati'\r\n    },\r\n    {\r\n        value: 10,\r\n        label: 'Toshkent shahri'\r\n    },\r\n    {\r\n        value: 11,\r\n        label: 'Toshkent viloyati'\r\n    },\r\n    {\r\n        value: 12,\r\n        label: 'Farg\\'ona viloyati'\r\n    },\r\n    {\r\n        value: 13,\r\n        label: 'Xorazm viloyati'\r\n    },\r\n    {\r\n        value: 14,\r\n        label: 'Qoraqalpog\\'iston Respublikasi'\r\n    },\r\n]\r\n\r\nexport const REPORT_TYPES = {\r\n    patient_general_practitioner_report: 'patient_general_practitioner_report',\r\n    statistical_form_066_report: 'statistical_form_066_report'\r\n}\r\nexport const REPORT_TYPE_STATUS = {\r\n    success: 'success',\r\n    failed: 'failed',\r\n    pending: 'pending'\r\n}","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgPrev(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 8,\n    height: 14,\n    viewBox: \"0 0 8 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M7.53033 0.46967C7.82322 0.762563 7.82322 1.23744 7.53033 1.53033L2.06066 7L7.53033 12.4697C7.82322 12.7626 7.82322 13.2374 7.53033 13.5303C7.23744 13.8232 6.76256 13.8232 6.46967 13.5303L0.46967 7.53033C0.176777 7.23744 0.176777 6.76256 0.46967 6.46967L6.46967 0.46967C6.76256 0.176777 7.23744 0.176777 7.53033 0.46967Z\",\n    fill: \"#222222\",\n    fillOpacity: 0.6\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPrev);\nexport default __webpack_public_path__ + \"static/media/prev.0ba7b31192ae832f345d4a127d088f8d.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgNext(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 8,\n    height: 14,\n    viewBox: \"0 0 8 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M0.46967 0.46967C0.176777 0.762563 0.176777 1.23744 0.46967 1.53033L5.93934 7L0.46967 12.4697C0.176777 12.7626 0.176777 13.2374 0.46967 13.5303C0.762563 13.8232 1.23744 13.8232 1.53033 13.5303L7.53033 7.53033C7.82322 7.23744 7.82322 6.76256 7.53033 6.46967L1.53033 0.46967C1.23744 0.176777 0.762563 0.176777 0.46967 0.46967Z\",\n    fill: \"#222222\",\n    fillOpacity: 0.6\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNext);\nexport default __webpack_public_path__ + \"static/media/next.bebff1c891b224785dd8a6b5e39612fd.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst Nodata = () => {\r\n    const {t} = useTranslation()\r\n    return (\r\n        <div className={'w-100 p-5 pt-7 text-center font-semibold'}>\r\n            {t(\"Нет данных\")}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nodata;","import React, {useState} from 'react';\r\nimport {useDeleteQuery, useGetAllQuery, useGetOneQuery, usePostQuery} from \"../../hooks/api\";\r\nimport {ContentLoader, OverlayLoader} from \"../../components/loader\";\r\nimport clsx from \"clsx\";\r\nimport {get, ceil, forEach, head, omit} from \"lodash\"\r\nimport Select from \"../../components/select\";\r\nimport {PER_PAGES} from \"../../constants\";\r\nimport ReactPaginate from 'react-paginate';\r\nimport prevImg from \"../../assets/icons/prev.svg\"\r\nimport nextImg from \"../../assets/icons/next.svg\"\r\nimport Nodata from \"../../components/no-data\";\r\nimport Modal from \"../../components/modal\";\r\nimport {Edit2, Trash2} from \"react-feather\";\r\nimport usePutQuery from \"../../hooks/api/usePutQuery\";\r\nimport Swal from \"sweetalert2\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst GridView = ({\r\n                      url = '/',\r\n                      viewUrl = null,\r\n                      listKey = '',\r\n                      params = {},\r\n                      filters = null,\r\n                      columns = [],\r\n                      onRowClick = () => {\r\n                      },\r\n                      doubleRow = false,\r\n                      modalClassNames = '',\r\n                      hasActionColumn = false,\r\n                      ModalBody = null,\r\n                      openCreateModal = false,\r\n                      setOpenCreateModal = () => {\r\n                      },\r\n                      dataKey = 'data.data',\r\n                      rowKey = 'id',\r\n                      deleteModalTitle = 'Удаление организации',\r\n                      deleteModalText = 'Вы действительно хотите удалить организацию?',\r\n                      getRowId = () => {\r\n                      },\r\n                  }) => {\r\n        const navigate = useNavigate();\r\n        const [page, setPage] = useState(1);\r\n        const [rowId, setRowId] = useState(null);\r\n        const [pageSize, setPageSize] = useState({value: 15, label: '15'});\r\n        const {t} = useTranslation()\r\n        const {data, isLoading, isError, error} = useGetAllQuery({\r\n            key: listKey, url, params: {\r\n                params: {\r\n                    ...params, page,\r\n                    per_page: get(pageSize, 'value')\r\n                }\r\n            }\r\n        })\r\n        console.log('error', get(error, 'response.data'))\r\n\r\n        const {data: defaultValues = {}, isLoading: isLoadingOne} = useGetOneQuery({\r\n            id: rowId, key: [listKey, rowId], url: viewUrl ?? url, enabled: !!(rowId)\r\n        })\r\n        const {mutate: createRequest, isLoading: isLoadingPost} = usePostQuery({listKeyId: listKey})\r\n        const {mutate: updateRequest, isLoading: isLoadingPut} = usePutQuery({listKeyId: listKey})\r\n        const {mutate: deleteRequest, isLoading: deleteLoading} = useDeleteQuery({listKeyId: listKey})\r\n        const onSubmit = ({data: attrs, setError, reset}) => {\r\n            if (!openCreateModal && rowId) {\r\n                updateRequest({\r\n                    url: `${viewUrl ?? url}/${get(attrs, rowKey)}`,\r\n                    attributes: omit(attrs, rowKey)\r\n                }, {\r\n                    onSuccess: () => {\r\n                        setRowId(null);\r\n                        reset()\r\n                    },\r\n                    onError: (error) => {\r\n                        forEach(get(error, 'response.data.errors', {}), (value, field) => {\r\n                            setError(field, {type: 'validation', message: head(value)})\r\n                        })\r\n                    }\r\n                })\r\n\r\n\r\n            } else {\r\n                createRequest({\r\n                    url: url, attributes: attrs\r\n                }, {\r\n                    onSuccess: () => {\r\n                        setOpenCreateModal(false);\r\n                        reset()\r\n                    }, onError: (error) => {\r\n                        forEach(get(error, 'response.data.errors', {}), (value, field) => {\r\n                            setError(field, {type: 'validation', message: head(value)})\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        const remove = (id) => {\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'error',\r\n                title: deleteModalTitle,\r\n                text: deleteModalText,\r\n                showConfirmButton: true,\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#EB5757',\r\n                cancelButtonColor: '#006D85',\r\n                confirmButtonText: t('Удалить'),\r\n                cancelButtonText: t('Отмена'),\r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    deleteRequest({url: `${viewUrl ?? url}/${id}`})\r\n                }\r\n            });\r\n        }\r\n\r\n        if (isError) {\r\n            navigate('/error', {\r\n                state: {data: get(error, 'response.data'), isError: isError}\r\n            });\r\n        }\r\n\r\n        if (isLoading) {\r\n            return <OverlayLoader/>\r\n        }\r\n        return (<div className={'bg-white rounded-lg'}>\r\n            {filters}\r\n            <div className=\"overflow-x-auto max-h-[75vh] overflow-y-auto border border-[#E6E6E6] rounded-lg\">\r\n\r\n                <table className=\"table\">\r\n                    <thead className={'thead'}>\r\n                    <tr className={'tr'}>\r\n                        {columns && columns.map(th => <th\r\n                            className={clsx(`th`, get(th, \"classnames\", \"\"))}\r\n                            key={get(th, 'title')}>\r\n                            {get(th, 'title')}\r\n                        </th>)}\r\n                        {hasActionColumn && <th className={'th  pr-10'}>\r\n                            {t(\"Actions\")}\r\n                        </th>}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody className=\"tbody\">\r\n                    {get(data, dataKey, []).length > 0 ? get(data, dataKey, []).map((tr, index) => {\r\n                        return (<>\r\n                            <tr\r\n                                onClick={() => onRowClick(tr)}\r\n                                className={\"tr\"}\r\n                                key={get(tr, get(columns, '[0].key', index))}\r\n                            >\r\n                                {columns.map((th, j) => <td key={get(th, 'key', j)}\r\n                                                            className={clsx(`td`, get(th, \"classnames\", \"\"), {'!px-0': doubleRow})}>\r\n                                    {get(th, 'render') ? get(th, 'render')({\r\n                                        value: get(tr, get(th, 'key')),\r\n                                        row: tr,\r\n                                        index: index + (page - 1) * pageSize + 1\r\n                                    }) : get(tr, get(th, 'key'))}\r\n                                </td>)}\r\n                                {hasActionColumn && <td className={'td  !max-w-full pr-10 '}>\r\n                                    <Edit2 className={'mx-3.5 inline'} color={'#2F68FC'} size={22}\r\n                                           onClick={(e) => {\r\n                                               e.stopPropagation()\r\n                                               getRowId(get(tr, 'id'))\r\n                                           }}/>\r\n                                    <Trash2 className={'inline'} onClick={(e) => {\r\n                                        e.stopPropagation()\r\n                                        remove(get(tr, 'id'))\r\n                                    }} color={'#F25886'} size={22}/>\r\n                                </td>}\r\n                            </tr>\r\n                        </>);\r\n                    }) : <tr>\r\n                        <td colSpan={hasActionColumn ? columns?.length + 1 : columns?.length || 12}>\r\n                            <Nodata/>\r\n                        </td>\r\n                    </tr>}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            {get(data, 'data.meta.total') > 0 && <div className=\"flex justify-between items-center p-3\">\r\n                <div className=\"flex items-center \">\r\n                    <Select isClearable={false} sm value={pageSize} setValue={setPageSize} options={PER_PAGES}/>\r\n                    <span\r\n                        className={'ml-3 text-secondary-300 text-sm font-semibold'}>{t(\"Show\")} 1-{get(pageSize, 'value', 0)} {t(\"from\")} {get(data, 'data.meta.total', 0)}</span>\r\n                </div>\r\n                <ReactPaginate forcePage={page - 1} onPageChange={({selected}) => setPage(selected + 1)}\r\n                               pageCount={ceil(get(data, 'data.meta.total_pages', 0))}\r\n                               nextLabel={<img src={nextImg} alt=\"next\"/>}\r\n                               previousLabel={<img src={prevImg} alt=\"prev\"/>} className={'pagination'}/>\r\n            </div>}\r\n            <Modal onClose={() => {\r\n                setOpenCreateModal(false);\r\n                setRowId(null)\r\n            }}\r\n                   classNames={modalClassNames}\r\n                   title={openCreateModal ? t('Create') : t('Update')}\r\n                   open={!!(openCreateModal || rowId)}>\r\n                {isLoadingPost && <ContentLoader/>}\r\n                {isLoadingPut && <ContentLoader/>}\r\n                {deleteLoading && <ContentLoader/>}\r\n                {!openCreateModal ? (isLoadingOne ?\r\n                    <ContentLoader/> : ModalBody(onSubmit, defaultValues)) : ModalBody(onSubmit, defaultValues)}\r\n            </Modal>\r\n        </div>);\r\n    }\r\n;\r\n\r\nexport default GridView;","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDownload(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 21,\n    viewBox: \"0 0 20 21\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10 2.375C10.3452 2.375 10.625 2.65482 10.625 3V11.4911L13.7247 8.39139C13.9688 8.14731 14.3645 8.14731 14.6086 8.39139C14.8527 8.63547 14.8527 9.0312 14.6086 9.27528L10.4419 13.4419C10.1979 13.686 9.80214 13.686 9.55806 13.4419L5.39139 9.27528C5.14731 9.0312 5.14731 8.63547 5.39139 8.39139C5.63547 8.14731 6.0312 8.14731 6.27528 8.39139L9.375 11.4911V3C9.375 2.65482 9.65482 2.375 10 2.375ZM2.5 12.375C2.84518 12.375 3.125 12.6548 3.125 13V14C3.125 14.7104 3.12549 15.2056 3.15699 15.5911C3.18789 15.9693 3.2455 16.1866 3.32936 16.3512C3.50913 16.704 3.79596 16.9909 4.14877 17.1706C4.31337 17.2545 4.53067 17.3121 4.9089 17.343C5.29443 17.3745 5.78962 17.375 6.5 17.375H13.5C14.2104 17.375 14.7056 17.3745 15.0911 17.343C15.4693 17.3121 15.6866 17.2545 15.8512 17.1706C16.204 16.9909 16.4909 16.704 16.6706 16.3512C16.7545 16.1866 16.8121 15.9693 16.843 15.5911C16.8745 15.2056 16.875 14.7104 16.875 14V13C16.875 12.6548 17.1548 12.375 17.5 12.375C17.8452 12.375 18.125 12.6548 18.125 13V14.0268C18.125 14.7041 18.125 15.2505 18.0889 15.6929C18.0516 16.1484 17.973 16.5485 17.7844 16.9187C17.4848 17.5067 17.0067 17.9848 16.4187 18.2844C16.0485 18.473 15.6484 18.5516 15.1929 18.5889C14.7505 18.625 14.2041 18.625 13.5268 18.625H6.47323C5.79587 18.625 5.24953 18.625 4.80711 18.5889C4.35158 18.5516 3.95146 18.473 3.58128 18.2844C2.99327 17.9848 2.51521 17.5067 2.2156 16.9187C2.02699 16.5485 1.94835 16.1484 1.91114 15.6929C1.87499 15.2505 1.87499 14.7041 1.875 14.0268L1.875 13C1.875 12.6548 2.15482 12.375 2.5 12.375Z\",\n    fill: \"#006D85\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDownload);\nexport default __webpack_public_path__ + \"static/media/download.5c6fa236248d121782afeb4b8fd485fb.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Search = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"11\",\n    cy: \"11\",\n    r: \"8\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    y1: \"21\",\n    x2: \"16.65\",\n    y2: \"16.65\"\n  }));\n});\nSearch.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nSearch.displayName = 'Search';\nexport default Search;","import React from 'react';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {Search} from \"react-feather\";\r\nimport {useForm} from \"react-hook-form\"\r\n\r\nconst Index = ({\r\n                   handleSearch = () => {\r\n                   }\r\n               }) => {\r\n    const {t} = useTranslation()\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n    } = useForm()\r\n\r\n    const onSubmit = ({search = undefined}) => {\r\n        handleSearch(search)\r\n    }\r\n    return (\r\n        <form className={'relative'} onSubmit={handleSubmit(onSubmit)}>\r\n            <Search color={'#A7A7A7'} size={20} className={'absolute z-10 top-1/2 left-2.5 -translate-y-1/2'}/>\r\n            <input {...register(\"search\")} className={'py-2.5 pr-5 pl-10 w-80 rounded-lg outline-none'} type=\"text\"\r\n                   placeholder={t('Поиск по наименованию')}/>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Index;","import React, {useState} from 'react';\r\nimport clsx from \"clsx\";\r\nimport InputMask from \"react-input-mask\";\r\nconst InputMaskComponent = ({\r\n                    label = '',\r\n                    handleValue = () => {\r\n                    },\r\n                   mask='',\r\n                   maskChar='-',\r\n                   placeholder=''\r\n                }) => {\r\n    const [value,setValue] = useState('')\r\n\r\n    return (\r\n        <div className={clsx('flex items-center')}>\r\n            {label && <label className={clsx('mr-2 text-secondary-300 font-bold flex items-center')}\r\n                             htmlFor={label}>{label}</label>}\r\n            <InputMask\r\n                className={clsx('py-2.5 px-4 w-36 rounded-lg outline-none')}\r\n                placeholder={placeholder}\r\n                mask={mask}\r\n                maskChar={maskChar}\r\n                // value={value}\r\n                // onChange={setValue}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputMaskComponent;","import React from 'react';\r\nimport clsx from \"clsx\";\r\nimport {REPORT_TYPE_STATUS} from \"../../constants\";\r\n\r\nconst Index = ({children, status = 'success'}) => {\r\n    return (\r\n        <span className={clsx('py-1 px-3 rounded-2xl font-semibold bg-[#FEF5ED] text-[#F2994A]', {\r\n            '!bg-[#EAF7F0] !text-[#27AE60]': status == REPORT_TYPE_STATUS.success,\r\n            '!bg-red-100 !text-[#EB5757]': status == REPORT_TYPE_STATUS.failed\r\n        })}>\r\n            {children}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default Index;","import React, {useEffect, useState} from 'react';\r\nimport Title from \"../../../components/title\";\r\nimport GridView from \"../../../containers/grid-view\";\r\nimport {KEYS} from \"../../../constants/keys\";\r\nimport {URLS} from \"../../../constants/urls\";\r\nimport {get, isObject, range, isNil, isEmpty} from \"lodash\"\r\nimport downloadIcon from \"../../../assets/icons/download.svg\"\r\nimport {useNavigate, useSearchParams} from 'react-router-dom'\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Modal from \"../../../components/modal\";\r\nimport {Tab, Tabs} from \"../../../components/tab\";\r\nimport Form from \"../../../containers/form\";\r\nimport orgIcon from \"../../../assets/icons/org.svg\"\r\nimport {Minus, Plus} from \"react-feather\";\r\nimport {useGetAllQuery, useGetOneQuery, usePostQuery, usePutQuery} from \"../../../hooks/api\";\r\nimport Search from \"../../../components/search\"\r\nimport SelectComponent from \"../../../components/select\";\r\nimport InputMaskComponent from \"../../../components/input-mask\";\r\nimport {ContentLoader} from \"../../../components/loader\";\r\nimport Field from \"../../../containers/form/field\";\r\nimport Dropzone from \"../../../containers/form/components/Dropzone\";\r\nimport Badge from \"../../../components/badge\"\r\nimport Names from \"../../../components/names\"\r\nimport Contacts from \"../../../components/contacts\";\r\nimport Locations from \"../../../components/locations\";\r\n\r\n\r\nconst OrganizationsContainer = () => {\r\n    const navigate = useNavigate();\r\n    const [_, setSearchParams] = useSearchParams();\r\n    const [rowId, setRowId] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    let [orgData, setOrgData] = useState({});\r\n    const [filter, setFilter] = useState({name: '', state_id: null, city_id: null})\r\n    const {t} = useTranslation();\r\n\r\n    const {data: organizationTypeLevelList, isLoading: isLoadingTypeLevelList} = useGetAllQuery({\r\n        key: KEYS.organizationTypeLevel,\r\n        url: URLS.organizationTypeLevel,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: !!(open || !isNil(rowId))\r\n    })\r\n\r\n    const {data: organizationTypeMedicalList, isLoading: isLoadingTypeMedicalList} = useGetAllQuery({\r\n        key: KEYS.organizationTypeMedical,\r\n        url: URLS.organizationTypeMedical,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: !!(open || !isNil(rowId))\r\n    })\r\n\r\n    const {data: organizationLegalFormList, isLoading: isLoadingLegalFormList} = useGetAllQuery({\r\n        key: KEYS.organizationLegalForm,\r\n        url: URLS.organizationLegalForm,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: !!(open || !isNil(rowId))\r\n    })\r\n\r\n    const {data: organizationTypeServiceList, isLoading: isLoadingTypeServiceList} = useGetAllQuery({\r\n        key: KEYS.organizationTypeService,\r\n        url: URLS.organizationTypeService,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: !!(open || !isNil(rowId))\r\n    })\r\n\r\n\r\n\r\n    const {data: organizationRegions, isLoading: isLoadingRegions} = useGetAllQuery({\r\n        key: KEYS.organizationTerritory,\r\n        url: URLS.organizationTerritory,\r\n        params: {\r\n            params: {\r\n                limit: 100,\r\n                level: 1\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n    const {data: districts} = useGetAllQuery({\r\n        key: [KEYS.organizationTerritory, get(filter, 'state_id.value')],\r\n        url: URLS.organizationTerritory,\r\n        params: {\r\n            params: {\r\n                limit: 100,\r\n                level: 2,\r\n                parent_id: get(filter, 'state_id.value')\r\n            },\r\n        },\r\n        enabled: !!(get(filter, 'state_id.value'))\r\n    })\r\n\r\n\r\n    const {data, isLoading: isLoadingOne} = useGetOneQuery({\r\n        key: [KEYS.organizations, rowId],\r\n        id: rowId,\r\n        url: URLS.organizations,\r\n        enabled: !!(rowId)\r\n    })\r\n\r\n    const {\r\n        mutate: addRequest, isLoading: isLoadingPost\r\n    } = usePostQuery({listKeyId: KEYS.organizations})\r\n    const {\r\n        mutate: updateRequest, isLoading: isLoadingPut\r\n    } = usePutQuery({listKeyId: KEYS.organizations})\r\n\r\n    const columns = [\r\n        {\r\n            title: t('НАИМЕНОВАНИЕ'),\r\n            key: 'display',\r\n        },\r\n        {\r\n            title: t('РОДИТЕЛЬСКАЯ ОРГАНИЗАЦИЯ'),\r\n            key: 'parent.display',\r\n        },\r\n        {\r\n            title: t('ТИП ОРГАНИЗАЦИИ'),\r\n            key: 'medical_type.display',\r\n        },\r\n        {\r\n            title: t('УРОВЕНЬ'),\r\n            key: 'level.display',\r\n        },\r\n        {\r\n            title: t('СТАТУС'),\r\n            key: 'active',\r\n            render: ({value}) => <Badge\r\n                status={value ? 'success' : 'error'}>{value ? t('Активный') : t('Неактивный')}</Badge>\r\n        }\r\n    ]\r\n\r\n    const onSubmit = ({data}, tab) => {\r\n        setOrgData(prev => ({...prev, ...data}))\r\n        setSearchParams(`tab=${tab}`)\r\n    }\r\n\r\n    const add = () => {\r\n        const {longitude, latitude, management_form, ...rest} = orgData;\r\n        if (rowId) {\r\n            updateRequest({\r\n                url: `${URLS.organizations}/${rowId}`,\r\n                attributes: {\r\n                    ...rest,\r\n                    display: get(orgData, 'names[0].value'),\r\n                    locations: [{\r\n                        address: get(orgData, 'locations[0].address'),\r\n                        longitude: parseFloat(longitude) || undefined,\r\n                        latitude: parseFloat(latitude) || undefined\r\n                    }]\r\n                }\r\n            }, {\r\n                onSuccess: () => {\r\n                    closeModal();\r\n                }\r\n            })\r\n        } else {\r\n            addRequest({\r\n                url: URLS.organizations,\r\n                attributes: {\r\n                    ...rest,\r\n                    display: get(orgData, 'names[0].value'),\r\n                    locations: [{\r\n                        address: get(orgData, 'locations[0].address'),\r\n                        longitude: parseFloat(longitude) || undefined,\r\n                        latitude: parseFloat(latitude) || undefined\r\n                    }]\r\n                }\r\n            }, {\r\n                onSuccess: () => {\r\n                    closeModal();\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setRowId(null);\r\n        setOpen(false)\r\n        setOrgData({})\r\n        setSearchParams(``)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (get(data, 'data') && rowId) {\r\n            setOrgData(get(data, 'data'))\r\n        }\r\n    }, [data, rowId])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"grid grid-cols-12 items-center\">\r\n                <div className=\"col-span-6\">\r\n                    <Title>{t(\"Организации\")}</Title>\r\n                </div>\r\n                <div className=\"col-span-6 flex items-center justify-end\">\r\n                    <button\r\n                        onClick={() => setOpen(true)}\r\n                        className={'inline-flex py-2.5 pl-2.5 pr-5 rounded-lg bg-primary items-center text-white font-semibold text-center mr-4'}>\r\n                        <Plus className={'mr-1.5'}/>\r\n                        {t('Добавить организацию')}\r\n                    </button>\r\n                    <button\r\n                        className={'inline-flex items-center py-2.5 pl-2.5 pr-5 text-sm font-bold text-primary border border-primary rounded-lg'}>\r\n                        <img className={'mr-2.5'} src={downloadIcon} alt={'export'}/>\r\n                        {t(\"Export\")}\r\n                    </button>\r\n                </div>\r\n                <div className=\"col-span-4 mt-5\">\r\n                    <Search handleSearch={(val) => setFilter(prev => ({...prev, name: val}))}/>\r\n                </div>\r\n                <div className=\"col-span-8 mt-5 flex justify-end\">\r\n                    <div className=\"mr-6\"><SelectComponent\r\n                        isLoading={isLoadingRegions}\r\n                        value={get(filter, 'state_id')}\r\n                        setValue={(val) => setFilter(prev => ({...prev, state_id: val}))}\r\n                        label={t('Регион')} options={get(organizationRegions, 'data', []).map(_option => ({\r\n                        value: get(_option, 'id'),\r\n                        label: get(_option, 'display')\r\n                    }))}/></div>\r\n                    <div className=\"mr-6\">\r\n                        <SelectComponent\r\n                            setValue={(val) => setFilter(prev => ({...prev, city_id: val}))}\r\n                            value={get(filter, 'city_id')}\r\n                            options={get(districts, 'data', []).map(_option => ({\r\n                                value: get(_option, 'id'),\r\n                                label: get(_option, 'display')\r\n                            }))}\r\n                            label={t('Район')}/>\r\n                    </div>\r\n                    <InputMaskComponent mask={'999999999'} label={'ИНН'}/>\r\n                </div>\r\n                <div className=\"col-span-12 mt-6\">\r\n                    <GridView\r\n                        getRowId={setRowId}\r\n                        onRowClick={({id}) => navigate(`/hrm/organization/${id}`)}\r\n                        params={{\r\n                            name: get(filter, 'name'),\r\n                            state_id: get(filter, 'state_id.value'),\r\n                            city_id: get(filter, 'city_id.value')\r\n                        }}\r\n                        hasActionColumn\r\n                        listKey={KEYS.organizations} url={URLS.organizations}\r\n                        columns={columns}/>\r\n                </div>\r\n            </div>\r\n            <Modal open={open} onClose={closeModal} classNames={'!w-[1080px] !pb-0'}\r\n                   title={t('Добавление организации')}>\r\n                {(isLoadingPost) && <ContentLoader/>}\r\n                <Tabs isLabelDisabled>\r\n                    <Tab tab={'info'} label={t('Информация')}>\r\n                        <Form defaultValues={{...orgData}} classNames={'grid grid-cols-12 gap-x-6'}\r\n                              formRequest={(data) => onSubmit(data, 'name')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClose={closeModal} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n                            <Field type={'input-mask'}\r\n                                   params={{required: true, pattern: {value: /^[0-9]{9}$/, message: 'Invalid value'}}}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'tin'}\r\n                                   defaultValue={get(orgData, 'tin')}\r\n                                   property={{\r\n                                       placeholder: t('Введите ИНН организации'),\r\n                                       mask: '999999999',\r\n                                       maskChar: '_'\r\n                                   }}\r\n                                   label={<div className={'flex'}><span>{t('ИНН организации')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Field type={'async-select'} isDisabledSearch url={URLS.organizationsListForSelect}\r\n                                   keyId={KEYS.organizationsListForSelect}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'parent'}\r\n                                   defaultValue={get(orgData, 'parent')}\r\n                                   label={t('Родительская организация')}\r\n                            />\r\n                            <Field type={'select'} isLoading={isLoadingTypeLevelList}\r\n                                   defaultValue={get(orgData, 'level')}\r\n                                   classNames={'col-span-6'} name={'level'}\r\n                                   label={<div className={'flex'}><span>{t('Уровень оказания услуг')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>} params={{required: true}}\r\n                                   options={get(organizationTypeLevelList, 'data', [])}/>\r\n                            <Field type={'select'} isLoading={isLoadingTypeMedicalList}\r\n                                   defaultValue={get(orgData, 'medical_type')}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'medical_type'}\r\n                                   label={<div className={'flex'}><span>{t('Тип организации')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                   params={{required: true}}\r\n                                   options={get(organizationTypeMedicalList, 'data', [])}/>\r\n                            <Field type={'select'} isLoading={isLoadingLegalFormList}\r\n                                   defaultValue={get(orgData, 'legal_form')}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'legal_form'}\r\n                                   label={t('Организационно-правовая форма')}\r\n                                   options={get(organizationLegalFormList, 'data', [])}/>\r\n                            <Field type={'select'} isLoading={isLoadingTypeServiceList}\r\n                                   defaultValue={get(orgData, 'service_types')}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'service_types'}\r\n                                   label={t('Виды оказания услуг')}\r\n                                   isMulti\r\n                                   options={get(organizationTypeServiceList, 'data', [])}/>\r\n                            <Field type={'async-select'} defaultValue={get(orgData, 'affiliation')}\r\n                                   classNames={'col-span-6'}\r\n                                   keyId={KEYS.organizationManagementForm}\r\n                                   url={URLS.organizationManagementForm}\r\n                                   name={'affiliation'}\r\n                                   label={t('Орган государственного управления')}\r\n                            />\r\n\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'name'} label={t('Наименование')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'address')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=info`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n                            <Names data={orgData}/>\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'address'} label={t('Адрес')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'region')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=name`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n                            <Locations data={orgData} />\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'region'} label={t('Регион обслуживания')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'contact')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=address`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n\r\n                            <Field type={'select'} defaultValue={get(orgData, 'service_area[0].state')}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'service_area[0].state'}\r\n                                   label={<div className={'flex'}><span>{t('Регион')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                   params={{required: true}}\r\n                                   options={get(organizationRegions, 'data', [])}/>\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'contact'} label={t('Контакты')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'photo')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=region`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n\r\n                            <Contacts data={orgData}/>\r\n\r\n                            <h3 className={'mb-6 col-span-12 font-semibold'}>Географические координаты</h3>\r\n                            <Field type={'input'} params={{\r\n                                pattern: {\r\n                                    value: /^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$/,\r\n                                    message: 'Invalid format'\r\n                                }\r\n                            }} defaultValue={get(orgData, 'latitude', null)}\r\n                                   classNames={'col-span-4'}\r\n                                   name={`latitude`}\r\n                                   placeholder={t('Широта')}\r\n                                   label={t('Широта')}\r\n                            />\r\n                            <Field type={'input'} params={{\r\n                                pattern: {\r\n                                    value: /^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$/,\r\n                                    message: 'Invalid format'\r\n                                }\r\n                            }} defaultValue={get(orgData, 'longitude', null)}\r\n                                   classNames={'col-span-4'}\r\n                                   name={`longitude`}\r\n                                   placeholder={t('Долгота')}\r\n                                   label={t('Долгота')}\r\n                            />\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'photo'} label={t('Изображение')}>\r\n                        <Dropzone/>\r\n                        <div className={'col-span-12 '}>\r\n                            <div className=\"flex justify-end\">\r\n                                <button onClick={() => setSearchParams(`tab=contact`)} type={'button'}\r\n                                        className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                    {t('Назад')}\r\n                                </button>\r\n                                <button onClick={add} type={'submit'}\r\n                                        className={'py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                    {t('Сохранить')}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </Modal>\r\n\r\n            <Modal open={!isNil(rowId)} onClose={closeModal} classNames={'!w-[1080px] !pb-0'}\r\n                   title={t('Обновить организацию')}>\r\n                {(isLoadingPut) && <ContentLoader/>}\r\n                {(isLoadingOne) && <div className={'py-10'}><ContentLoader/></div>}\r\n                {!isEmpty(orgData) && <Tabs isLabelDisabled>\r\n                    <Tab tab={'info'} label={t('Информация')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'name')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClose={closeModal} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n                            <Field type={'input-mask'}\r\n                                   params={{required: true, pattern: {value: /^[0-9]{9}$/, message: 'Invalid value'}}}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'tin'}\r\n                                   defaultValue={get(orgData, 'tin')}\r\n                                   property={{\r\n                                       placeholder: t('Введите ИНН организации'),\r\n                                       mask: '999999999',\r\n                                       maskChar: '_'\r\n                                   }}\r\n                                   label={<div className={'flex'}><span>{t('ИНН организации')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Field type={'async-select'} isDisabledSearch url={URLS.organizationsListForSelect}\r\n                                   keyId={KEYS.organizationsListForSelect}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'parent'}\r\n                                   defaultValue={get(orgData, 'parent')}\r\n                                   label={t('Родительская организация')}\r\n                            />\r\n                            <Field type={'select'} isLoading={isLoadingTypeLevelList}\r\n                                   defaultValue={get(orgData, 'level')}\r\n                                   classNames={'col-span-6'} name={'level'}\r\n                                   label={<div className={'flex'}><span>{t('Уровень оказания услуг')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>} params={{required: true}}\r\n                                   options={get(organizationTypeLevelList, 'data', [])}/>\r\n                            <Field type={'select'} isLoading={isLoadingTypeMedicalList}\r\n                                   defaultValue={get(orgData, 'medical_type')}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'medical_type'}\r\n                                   label={<div className={'flex'}><span>{t('Тип организации')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                   params={{required: true}}\r\n                                   options={get(organizationTypeMedicalList, 'data', [])}/>\r\n                            <Field type={'select'} isLoading={isLoadingLegalFormList}\r\n                                   defaultValue={get(orgData, 'legal_form')}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'legal_form'}\r\n                                   label={t('Организационно-правовая форма')}\r\n                                   options={get(organizationLegalFormList, 'data', [])}/>\r\n                            <Field type={'select'} isLoading={isLoadingTypeServiceList}\r\n                                   defaultValue={get(orgData, 'service_types')}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'service_types'}\r\n                                   label={t('Виды оказания услуг')}\r\n                                   isMulti\r\n                                   options={get(organizationTypeServiceList, 'data', [])}/>\r\n                            <Field type={'async-select'} defaultValue={get(orgData, 'affiliation')}\r\n                                   classNames={'col-span-6'}\r\n                                   keyId={KEYS.organizationManagementForm}\r\n                                   url={URLS.organizationManagementForm}\r\n                                   name={'affiliation'}\r\n                                   label={t('Орган государственного управления')}\r\n                            />\r\n\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'name'} label={t('Наименование')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'address')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=info`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n\r\n                            <Names data={orgData}/>\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'address'} label={t('Адрес')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'region')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=name`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n                            <Locations data={orgData} />\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'region'} label={t('Регион обслуживания')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'contact')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=address`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n\r\n                            <Field type={'select'} defaultValue={get(orgData, 'service_area[0].state')}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'service_area[0].state'}\r\n                                   label={<div className={'flex'}><span>{t('Регион')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                   params={{required: true}}\r\n                                   options={get(organizationRegions, 'data', [])}/>\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'contact'} label={t('Контакты')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'photo')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=region`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n\r\n                            <h3 className={'mb-6 col-span-12 font-semibold'}>Географические координаты</h3>\r\n                            <Field type={'input'} params={{\r\n                                pattern: {\r\n                                    value: /^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$/,\r\n                                    message: 'Invalid format'\r\n                                }\r\n                            }} defaultValue={get(orgData, 'latitude', null)}\r\n                                   classNames={'col-span-4'}\r\n                                   name={`latitude`}\r\n                                   placeholder={t('Широта')}\r\n                                   label={t('Широта')}\r\n                            />\r\n                            <Field type={'input'} params={{\r\n                                pattern: {\r\n                                    value: /^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$/,\r\n                                    message: 'Invalid format'\r\n                                }\r\n                            }} defaultValue={get(orgData, 'longitude', null)}\r\n                                   classNames={'col-span-4'}\r\n                                   name={`longitude`}\r\n                                   placeholder={t('Долгота')}\r\n                                   label={t('Долгота')}\r\n                            />\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'photo'} label={t('Изображение')}>\r\n                        <Dropzone/>\r\n                        <div className={'col-span-12 '}>\r\n                            <div className=\"flex justify-end\">\r\n                                <button onClick={() => setSearchParams(`tab=contact`)} type={'button'}\r\n                                        className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                    {t('Назад')}\r\n                                </button>\r\n                                <button onClick={add} type={'submit'}\r\n                                        className={'py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                    {t('Сохранить')}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>}\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrganizationsContainer;","import React from 'react';\r\nimport OrganizationsContainer from \"../containers/OrganizationsContainer\";\r\n\r\nconst OrganizationsPage = () => {\r\n    return (\r\n        <>\r\n            <OrganizationsContainer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrganizationsPage;"],"names":["DropdownIndicator","props","components","_jsx","_objectSpread","children","src","arrowIcon","alt","customStyles","sm","arguments","length","undefined","control","base","state","error","background","borderColor","borderRadius","outline","color","display","overflow","padding","width","height","fontSize","fontWeight","indicatorSeparator","_ref","_ref$name","name","_ref$value","value","_ref$sm","_ref$label","label","_ref$options","options","_ref$setValue","setValue","_ref$isClearable","isClearable","_ref$isLoading","isLoading","_jsxs","className","clsx","htmlFor","RSelect","clearIndicator","styles","id","onChange","placeholder","PER_PAGES","range","dayjs","add","format","map","year","REPORT_TYPE_STATUS","success","failed","pending","t","useTranslation","_ref$url","url","_ref$viewUrl","viewUrl","_ref$listKey","listKey","_ref$params","params","_ref$filters","filters","_ref$columns","columns","_ref$onRowClick","onRowClick","_ref$doubleRow","doubleRow","_ref$modalClassNames","modalClassNames","_ref$hasActionColumn","hasActionColumn","_ref$ModalBody","ModalBody","_ref$openCreateModal","openCreateModal","_ref$setOpenCreateMod","setOpenCreateModal","_ref$dataKey","dataKey","_ref$rowKey","rowKey","_ref$deleteModalTitle","deleteModalTitle","_ref$deleteModalText","deleteModalText","_ref$getRowId","getRowId","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","rowId","setRowId","_useState5","_useState6","pageSize","setPageSize","_useGetAllQuery","useGetAllQuery","key","per_page","get","data","isError","console","log","_useGetOneQuery","useGetOneQuery","enabled","_useGetOneQuery$data","defaultValues","isLoadingOne","_usePostQuery","usePostQuery","listKeyId","createRequest","mutate","isLoadingPost","_usePutQuery","usePutQuery","updateRequest","isLoadingPut","_useDeleteQuery","useDeleteQuery","deleteRequest","deleteLoading","onSubmit","_ref2","attrs","setError","reset","concat","attributes","omit","onSuccess","onError","forEach","field","type","message","head","OverlayLoader","th","tr","index","_Fragment","onClick","j","row","Edit2","size","e","stopPropagation","Trash2","Swal","position","icon","title","text","showConfirmButton","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","colSpan","Nodata","Select","ReactPaginate","forcePage","onPageChange","_ref3","selected","pageCount","ceil","nextLabel","nextImg","previousLabel","prevImg","Modal","onClose","classNames","open","ContentLoader","_extends","Object","assign","target","i","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Search","forwardRef","ref","_ref$color","_ref$size","rest","React","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","propTypes","PropTypes","displayName","_ref$handleSearch","handleSearch","_useForm","useForm","register","handleSubmit","_ref2$search","search","_ref$mask","handleValue","mask","_ref$maskChar","maskChar","_ref$placeholder","InputMask","_ref$status","status","_useSearchParams","useSearchParams","_useSearchParams2","setSearchParams","setOpen","orgData","setOrgData","_useState7","state_id","city_id","_useState8","filter","setFilter","KEYS","organizationTypeLevel","URLS","limit","isNil","organizationTypeLevelList","isLoadingTypeLevelList","_useGetAllQuery2","organizationTypeMedical","organizationTypeMedicalList","isLoadingTypeMedicalList","_useGetAllQuery3","organizationLegalForm","organizationLegalFormList","isLoadingLegalFormList","_useGetAllQuery4","organizationTypeService","organizationTypeServiceList","isLoadingTypeServiceList","_useGetAllQuery5","organizationTerritory","level","organizationRegions","isLoadingRegions","districts","parent_id","organizations","addRequest","render","Badge","tab","prev","longitude","latitude","management_form","_excluded","locations","address","parseFloat","closeModal","useEffect","Title","Plus","downloadIcon","val","SelectComponent","_option","InputMaskComponent","GridView","Tabs","isLabelDisabled","Tab","Form","formRequest","footer","Field","required","pattern","defaultValue","property","orgIcon","isDisabledSearch","organizationsListForSelect","keyId","isMulti","organizationManagementForm","Names","Locations","Contacts","Dropzone","isEmpty","OrganizationsContainer"],"sourceRoot":""}