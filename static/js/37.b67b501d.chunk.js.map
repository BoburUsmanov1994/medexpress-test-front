{"version":3,"file":"static/js/37.b67b501d.chunk.js","mappings":"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","sources":["components/input-mask/index.jsx","modules/hrm/containers/OrganizationsContainer.jsx","modules/hrm/pages/OrganizationsPage.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport clsx from \"clsx\";\r\nimport InputMask from \"react-input-mask\";\r\nconst InputMaskComponent = ({\r\n                    label = '',\r\n                    handleValue = () => {\r\n                    },\r\n                   mask='',\r\n                   maskChar='-',\r\n                   placeholder=''\r\n                }) => {\r\n    const [value,setValue] = useState('')\r\n\r\n    return (\r\n        <div className={clsx('flex items-center')}>\r\n            {label && <label className={clsx('mr-2 text-secondary-300 font-bold flex items-center')}\r\n                             htmlFor={label}>{label}</label>}\r\n            <InputMask\r\n                className={clsx('py-2.5 px-4 w-36 rounded-lg outline-none')}\r\n                placeholder={placeholder}\r\n                mask={mask}\r\n                maskChar={maskChar}\r\n                // value={value}\r\n                // onChange={setValue}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputMaskComponent;","import React, {useEffect, useState} from 'react';\r\nimport Title from \"../../../components/title\";\r\nimport GridView from \"../../../containers/grid-view\";\r\nimport {KEYS} from \"../../../constants/keys\";\r\nimport {URLS} from \"../../../constants/urls\";\r\nimport {get, isObject, range, isNil, isEmpty, forEach, keys} from \"lodash\"\r\nimport downloadIcon from \"../../../assets/icons/download.svg\"\r\nimport {useNavigate, useSearchParams} from 'react-router-dom'\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Modal from \"../../../components/modal\";\r\nimport {Tab, Tabs} from \"../../../components/tab\";\r\nimport Form from \"../../../containers/form\";\r\nimport orgIcon from \"../../../assets/icons/org.svg\"\r\nimport {Minus, Plus} from \"react-feather\";\r\nimport {useGetAllQuery, useGetOneQuery, usePostQuery, usePutQuery} from \"../../../hooks/api\";\r\nimport Search from \"../../../components/search\"\r\nimport SelectComponent from \"../../../components/select\";\r\nimport InputMaskComponent from \"../../../components/input-mask\";\r\nimport {ContentLoader} from \"../../../components/loader\";\r\nimport Field from \"../../../containers/form/field\";\r\nimport Dropzone from \"../../../containers/form/components/Dropzone\";\r\nimport Badge from \"../../../components/badge\"\r\nimport Names from \"../../../components/names\"\r\nimport Contacts from \"../../../components/contacts\";\r\nimport Locations from \"../../../components/locations\";\r\n\r\n\r\nconst OrganizationsContainer = () => {\r\n    const navigate = useNavigate();\r\n    const [_, setSearchParams] = useSearchParams();\r\n    const [rowId, setRowId] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    let [orgData, setOrgData] = useState({});\r\n    const [filter, setFilter] = useState({name: '', state_id: null, city_id: null})\r\n    const {t} = useTranslation();\r\n\r\n    const {data: organizationTypeLevelList, isLoading: isLoadingTypeLevelList} = useGetAllQuery({\r\n        key: KEYS.organizationTypeLevel,\r\n        url: URLS.organizationTypeLevel,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: !!(open || !isNil(rowId))\r\n    })\r\n\r\n    const {data: organizationTypeMedicalList, isLoading: isLoadingTypeMedicalList} = useGetAllQuery({\r\n        key: KEYS.organizationTypeMedical,\r\n        url: URLS.organizationTypeMedical,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: !!(open || !isNil(rowId))\r\n    })\r\n\r\n    const {data: organizationLegalFormList, isLoading: isLoadingLegalFormList} = useGetAllQuery({\r\n        key: KEYS.organizationLegalForm,\r\n        url: URLS.organizationLegalForm,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: !!(open || !isNil(rowId))\r\n    })\r\n\r\n    const {data: organizationTypeServiceList, isLoading: isLoadingTypeServiceList} = useGetAllQuery({\r\n        key: KEYS.organizationTypeService,\r\n        url: URLS.organizationTypeService,\r\n        params: {\r\n            params: {\r\n                limit: 100\r\n            }\r\n        },\r\n        enabled: !!(open || !isNil(rowId))\r\n    })\r\n\r\n\r\n\r\n    const {data: organizationRegions, isLoading: isLoadingRegions} = useGetAllQuery({\r\n        key: KEYS.organizationTerritory,\r\n        url: URLS.organizationTerritory,\r\n        params: {\r\n            params: {\r\n                limit: 100,\r\n                level: 1\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n    const {data: districts} = useGetAllQuery({\r\n        key: [KEYS.organizationTerritory, get(filter, 'state_id.value')],\r\n        url: URLS.organizationTerritory,\r\n        params: {\r\n            params: {\r\n                limit: 100,\r\n                level: 2,\r\n                parent_id: get(filter, 'state_id.value')\r\n            },\r\n        },\r\n        enabled: !!(get(filter, 'state_id.value'))\r\n    })\r\n\r\n\r\n    const {data, isLoading: isLoadingOne} = useGetOneQuery({\r\n        key: [KEYS.organizations, rowId],\r\n        id: rowId,\r\n        url: URLS.organizations,\r\n        enabled: !!(rowId)\r\n    })\r\n\r\n    const {\r\n        mutate: addRequest, isLoading: isLoadingPost\r\n    } = usePostQuery({listKeyId: KEYS.organizations})\r\n    const {\r\n        mutate: updateRequest, isLoading: isLoadingPut\r\n    } = usePutQuery({listKeyId: KEYS.organizations})\r\n\r\n    const columns = [\r\n        {\r\n            title: t('НАИМЕНОВАНИЕ'),\r\n            key: 'display',\r\n        },\r\n        {\r\n            title: t('РОДИТЕЛЬСКАЯ ОРГАНИЗАЦИЯ'),\r\n            key: 'parent.display',\r\n        },\r\n        {\r\n            title: t('ТИП ОРГАНИЗАЦИИ'),\r\n            key: 'medical_type.display',\r\n        },\r\n        {\r\n            title: t('УРОВЕНЬ'),\r\n            key: 'level.display',\r\n        },\r\n        {\r\n            title: t('СТАТУС'),\r\n            key: 'active',\r\n            render: ({value}) => <Badge\r\n                status={value ? 'success' : 'error'}>{value ? t('Активный') : t('Неактивный')}</Badge>\r\n        }\r\n    ]\r\n\r\n    const onSubmit = ({data}, tab) => {\r\n        forEach(keys(data),(_key)=>{\r\n            if(data[_key] === null){\r\n                delete data[_key];\r\n            }\r\n        })\r\n        setOrgData(prev => ({...prev, ...data}))\r\n        setSearchParams(`tab=${tab}`)\r\n    }\r\n\r\n    const add = () => {\r\n        const {longitude, latitude, management_form, ...rest} = orgData;\r\n        if (rowId) {\r\n            updateRequest({\r\n                url: `${URLS.organizations}/${rowId}`,\r\n                attributes: {\r\n                    ...rest,\r\n                    display: get(orgData, 'names[0].value'),\r\n                    locations: [{\r\n                        address: get(orgData, 'locations[0].address'),\r\n                        longitude: parseFloat(longitude) || undefined,\r\n                        latitude: parseFloat(latitude) || undefined\r\n                    }]\r\n                }\r\n            }, {\r\n                onSuccess: () => {\r\n                    closeModal();\r\n                }\r\n            })\r\n        } else {\r\n            addRequest({\r\n                url: URLS.organizations,\r\n                attributes: {\r\n                    ...rest,\r\n                    display: get(orgData, 'names[0].value'),\r\n                    locations: [{\r\n                        address: get(orgData, 'locations[0].address'),\r\n                        longitude: parseFloat(longitude) || undefined,\r\n                        latitude: parseFloat(latitude) || undefined\r\n                    }]\r\n                }\r\n            }, {\r\n                onSuccess: () => {\r\n                    closeModal();\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setRowId(null);\r\n        setOpen(false)\r\n        setOrgData({})\r\n        setSearchParams(``)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (get(data, 'data') && rowId) {\r\n            setOrgData(get(data, 'data'))\r\n        }\r\n    }, [data, rowId])\r\n\r\n    console.log('orgData',orgData)\r\n    return (\r\n        <div>\r\n            <div className=\"grid grid-cols-12 items-center\">\r\n                <div className=\"col-span-6\">\r\n                    <Title>{t(\"Организации\")}</Title>\r\n                </div>\r\n                <div className=\"col-span-6 flex items-center justify-end\">\r\n                    <button\r\n                        onClick={() => setOpen(true)}\r\n                        className={'inline-flex py-2.5 pl-2.5 pr-5 rounded-lg bg-primary items-center text-white font-semibold text-center mr-4'}>\r\n                        <Plus className={'mr-1.5'}/>\r\n                        {t('Добавить организацию')}\r\n                    </button>\r\n                    <button\r\n                        className={'inline-flex items-center py-2.5 pl-2.5 pr-5 text-sm font-bold text-primary border border-primary rounded-lg'}>\r\n                        <img className={'mr-2.5'} src={downloadIcon} alt={'export'}/>\r\n                        {t(\"Export\")}\r\n                    </button>\r\n                </div>\r\n                <div className=\"col-span-4 mt-5\">\r\n                    <Search handleSearch={(val) => setFilter(prev => ({...prev, name: val}))}/>\r\n                </div>\r\n                <div className=\"col-span-8 mt-5 flex justify-end\">\r\n                    <div className=\"mr-6\"><SelectComponent\r\n                        isLoading={isLoadingRegions}\r\n                        value={get(filter, 'state_id')}\r\n                        setValue={(val) => setFilter(prev => ({...prev, state_id: val}))}\r\n                        label={t('Регион')} options={get(organizationRegions, 'data', []).map(_option => ({\r\n                        value: get(_option, 'id'),\r\n                        label: get(_option, 'display')\r\n                    }))}/></div>\r\n                    <div className=\"mr-6\">\r\n                        <SelectComponent\r\n                            setValue={(val) => setFilter(prev => ({...prev, city_id: val}))}\r\n                            value={get(filter, 'city_id')}\r\n                            options={get(districts, 'data', []).map(_option => ({\r\n                                value: get(_option, 'id'),\r\n                                label: get(_option, 'display')\r\n                            }))}\r\n                            label={t('Район')}/>\r\n                    </div>\r\n                    <InputMaskComponent mask={'999999999'} label={'ИНН'}/>\r\n                </div>\r\n                <div className=\"col-span-12 mt-6\">\r\n                    <GridView\r\n                        getRowId={setRowId}\r\n                        onRowClick={({id}) => navigate(`/hrm/organization/${id}`)}\r\n                        params={{\r\n                            name: get(filter, 'name'),\r\n                            state_id: get(filter, 'state_id.value'),\r\n                            city_id: get(filter, 'city_id.value')\r\n                        }}\r\n                        hasActionColumn\r\n                        listKey={KEYS.organizations} url={URLS.organizations}\r\n                        columns={columns}/>\r\n                </div>\r\n            </div>\r\n            <Modal open={open} onClose={closeModal} classNames={'!w-[1080px] !pb-0'}\r\n                   title={t('Добавление организации')}>\r\n                {(isLoadingPost) && <ContentLoader/>}\r\n                <Tabs isLabelDisabled>\r\n                    <Tab tab={'info'} label={t('Информация')}>\r\n                        <Form defaultValues={{...orgData}} classNames={'grid grid-cols-12 gap-x-6'}\r\n                              formRequest={(data) => onSubmit(data, 'name')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClose={closeModal} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n                            <Field type={'input-mask'}\r\n                                   params={{required: true, pattern: {value: /^[0-9]{9}$/, message: 'Invalid value'}}}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'tin'}\r\n                                   defaultValue={get(orgData, 'tin')}\r\n                                   property={{\r\n                                       placeholder: t('Введите ИНН организации'),\r\n                                       mask: '999999999',\r\n                                       maskChar: '_'\r\n                                   }}\r\n                                   label={<div className={'flex'}><span>{t('ИНН организации')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Field type={'async-select'} isDisabledSearch url={URLS.organizationsListForSelect}\r\n                                   keyId={KEYS.organizationsListForSelect}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'parent'}\r\n                                   defaultValue={get(orgData, 'parent')}\r\n                                   label={t('Родительская организация')}\r\n                            />\r\n                            <Field type={'select'} isLoading={isLoadingTypeLevelList}\r\n                                   defaultValue={get(orgData, 'level')}\r\n                                   classNames={'col-span-6'} name={'level'}\r\n                                   label={<div className={'flex'}><span>{t('Уровень оказания услуг')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>} params={{required: true}}\r\n                                   options={get(organizationTypeLevelList, 'data', [])}/>\r\n                            <Field type={'select'} isLoading={isLoadingTypeMedicalList}\r\n                                   defaultValue={get(orgData, 'medical_type')}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'medical_type'}\r\n                                   label={<div className={'flex'}><span>{t('Тип организации')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                   params={{required: true}}\r\n                                   options={get(organizationTypeMedicalList, 'data', [])}/>\r\n                            <Field type={'select'} isLoading={isLoadingLegalFormList}\r\n                                   defaultValue={get(orgData, 'legal_form')}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'legal_form'}\r\n                                   label={t('Организационно-правовая форма')}\r\n                                   options={get(organizationLegalFormList, 'data', [])}/>\r\n                            <Field type={'select'} isLoading={isLoadingTypeServiceList}\r\n                                   defaultValue={get(orgData, 'service_types')}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'service_types'}\r\n                                   label={t('Виды оказания услуг')}\r\n                                   isMulti\r\n                                   options={get(organizationTypeServiceList, 'data', [])}/>\r\n                            <Field type={'async-select'} defaultValue={get(orgData, 'affiliation')}\r\n                                   classNames={'col-span-6'}\r\n                                   keyId={KEYS.organizationManagementForm}\r\n                                   url={URLS.organizationManagementForm}\r\n                                   name={'affiliation'}\r\n                                   label={t('Орган государственного управления')}\r\n                            />\r\n\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'name'} label={t('Наименование')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'address')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=info`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n                            <Names data={orgData}/>\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'address'} label={t('Адрес')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'region')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=name`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n                            <Locations data={orgData} />\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'region'} label={t('Регион обслуживания')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'contact')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=address`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n\r\n                            <Field type={'select'} defaultValue={get(orgData, 'service_areas[0].state')}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'service_areas[0].state'}\r\n                                   label={<div className={'flex'}><span>{t('Регион')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                   params={{required: true}}\r\n                                   options={get(organizationRegions, 'data', [])}/>\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'contact'} label={t('Контакты')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'photo')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=region`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n\r\n                            <Contacts data={orgData}/>\r\n\r\n                            <h3 className={'mb-6 col-span-12 font-semibold'}>Географические координаты</h3>\r\n                            <Field type={'input'} params={{\r\n                                pattern: {\r\n                                    value: /^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$/,\r\n                                    message: 'Invalid format'\r\n                                }\r\n                            }} defaultValue={get(orgData, 'latitude', null)}\r\n                                   classNames={'col-span-4'}\r\n                                   name={`latitude`}\r\n                                   placeholder={t('Широта')}\r\n                                   label={t('Широта')}\r\n                            />\r\n                            <Field type={'input'} params={{\r\n                                pattern: {\r\n                                    value: /^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$/,\r\n                                    message: 'Invalid format'\r\n                                }\r\n                            }} defaultValue={get(orgData, 'longitude', null)}\r\n                                   classNames={'col-span-4'}\r\n                                   name={`longitude`}\r\n                                   placeholder={t('Долгота')}\r\n                                   label={t('Долгота')}\r\n                            />\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'photo'} label={t('Изображение')}>\r\n                        <Dropzone/>\r\n                        <div className={'col-span-12 '}>\r\n                            <div className=\"flex justify-end\">\r\n                                <button onClick={() => setSearchParams(`tab=contact`)} type={'button'}\r\n                                        className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                    {t('Назад')}\r\n                                </button>\r\n                                <button onClick={add} type={'submit'}\r\n                                        className={'py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                    {t('Сохранить')}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </Modal>\r\n\r\n            <Modal open={!isNil(rowId)} onClose={closeModal} classNames={'!w-[1080px] !pb-0'}\r\n                   title={t('Обновить организацию')}>\r\n                {(isLoadingPut) && <ContentLoader/>}\r\n                {(isLoadingOne) && <div className={'py-10'}><ContentLoader/></div>}\r\n                {!isEmpty(orgData) && <Tabs isLabelDisabled>\r\n                    <Tab tab={'info'} label={t('Информация')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'name')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClose={closeModal} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n                            <Field type={'input-mask'}\r\n                                   params={{required: true, pattern: {value: /^[0-9]{9}$/, message: 'Invalid value'}}}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'tin'}\r\n                                   defaultValue={get(orgData, 'tin')}\r\n                                   property={{\r\n                                       placeholder: t('Введите ИНН организации'),\r\n                                       mask: '999999999',\r\n                                       maskChar: '_'\r\n                                   }}\r\n                                   label={<div className={'flex'}><span>{t('ИНН организации')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                            />\r\n                            <Field type={'async-select'} isDisabledSearch url={URLS.organizationsListForSelect}\r\n                                   keyId={KEYS.organizationsListForSelect}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'parent'}\r\n                                   defaultValue={get(orgData, 'parent',undefined)}\r\n                                   label={t('Родительская организация')}\r\n                            />\r\n                            <Field type={'select'} isLoading={isLoadingTypeLevelList}\r\n                                   defaultValue={get(orgData, 'level',undefined)}\r\n                                   classNames={'col-span-6'} name={'level'}\r\n                                   label={<div className={'flex'}><span>{t('Уровень оказания услуг')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>} params={{required: true}}\r\n                                   options={get(organizationTypeLevelList, 'data', [])}/>\r\n                            <Field type={'select'} isLoading={isLoadingTypeMedicalList}\r\n                                   defaultValue={get(orgData, 'medical_type',undefined)}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'medical_type'}\r\n                                   label={<div className={'flex'}><span>{t('Тип организации')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                   params={{required: true}}\r\n                                   options={get(organizationTypeMedicalList, 'data', [])}/>\r\n                            <Field type={'select'} isLoading={isLoadingLegalFormList}\r\n                                   defaultValue={get(orgData, 'legal_form',undefined)}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'legal_form'}\r\n                                   label={t('Организационно-правовая форма')}\r\n                                   options={get(organizationLegalFormList, 'data', [])}/>\r\n                            <Field type={'select'} isLoading={isLoadingTypeServiceList}\r\n                                   defaultValue={get(orgData, 'service_types',undefined)}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'service_types'}\r\n                                   label={t('Виды оказания услуг')}\r\n                                   isMulti\r\n                                   options={get(organizationTypeServiceList, 'data', [])}/>\r\n                            <Field type={'async-select'} defaultValue={get(orgData, 'affiliation',undefined)}\r\n                                   classNames={'col-span-6'}\r\n                                   keyId={KEYS.organizationManagementForm}\r\n                                   url={URLS.organizationManagementForm}\r\n                                   name={'affiliation'}\r\n                                   label={t('Орган государственного управления')}\r\n                            />\r\n\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'name'} label={t('Наименование')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'address')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=info`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n\r\n                            <Names data={orgData}/>\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'address'} label={t('Адрес')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'region')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=name`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n                            <Locations data={orgData} />\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'region'} label={t('Регион обслуживания')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'contact')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=address`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n\r\n                            <Field type={'select'} defaultValue={get(orgData, 'service_areas[0].state')}\r\n                                   classNames={'col-span-6'}\r\n                                   name={'service_areas[0].state'}\r\n                                   label={<div className={'flex'}><span>{t('Регион')}</span><img\r\n                                       className={'ml-1'} src={orgIcon} alt=\"org\"/></div>}\r\n                                   params={{required: true}}\r\n                                   options={get(organizationRegions, 'data', [])}/>\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'contact'} label={t('Контакты')}>\r\n                        <Form classNames={'grid grid-cols-12 gap-x-6'} formRequest={(data) => onSubmit(data, 'photo')}\r\n                              footer={<div className={'col-span-12 '}>\r\n                                  <div className=\"flex justify-end\">\r\n                                      <button onClick={() => setSearchParams(`tab=region`)} type={'button'}\r\n                                              className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                          {t('Назад')}\r\n                                      </button>\r\n                                      <button type={'submit'}\r\n                                              className={' py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                          {t('Следующий шаг')}\r\n                                      </button>\r\n                                  </div>\r\n                              </div>}>\r\n                            <Contacts data={orgData} />\r\n\r\n                            <h3 className={'mb-6 col-span-12 font-semibold'}>Географические координаты</h3>\r\n                            <Field type={'input'} params={{\r\n                                pattern: {\r\n                                    value: /^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$/,\r\n                                    message: 'Invalid format'\r\n                                }\r\n                            }} defaultValue={get(orgData, 'latitude', null)}\r\n                                   classNames={'col-span-4'}\r\n                                   name={`latitude`}\r\n                                   placeholder={t('Широта')}\r\n                                   label={t('Широта')}\r\n                            />\r\n                            <Field type={'input'} params={{\r\n                                pattern: {\r\n                                    value: /^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$/,\r\n                                    message: 'Invalid format'\r\n                                }\r\n                            }} defaultValue={get(orgData, 'longitude', null)}\r\n                                   classNames={'col-span-4'}\r\n                                   name={`longitude`}\r\n                                   placeholder={t('Долгота')}\r\n                                   label={t('Долгота')}\r\n                            />\r\n\r\n                        </Form>\r\n                    </Tab>\r\n                    <Tab tab={'photo'} label={t('Изображение')}>\r\n                        <Dropzone/>\r\n                        <div className={'col-span-12 '}>\r\n                            <div className=\"flex justify-end\">\r\n                                <button onClick={() => setSearchParams(`tab=contact`)} type={'button'}\r\n                                        className={'text-[#7A7A7A] border-2 border-[#7A7A7A] py-3 px-6 rounded-lg mr-4 inline-block   font-bold text-center  mt-6'}>\r\n                                    {t('Назад')}\r\n                                </button>\r\n                                <button onClick={add} type={'submit'}\r\n                                        className={'py-3 px-6 rounded-lg bg-primary inline-block  text-white font-bold text-center  mt-6'}>\r\n                                    {t('Сохранить')}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>}\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrganizationsContainer;","import React from 'react';\r\nimport OrganizationsContainer from \"../containers/OrganizationsContainer\";\r\n\r\nconst OrganizationsPage = () => {\r\n    return (\r\n        <>\r\n            <OrganizationsContainer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrganizationsPage;"],"names":["_ref","_ref$label","label","_ref$mask","handleValue","mask","_ref$maskChar","maskChar","_ref$placeholder","placeholder","_useState","useState","_useState2","_slicedToArray","_jsxs","className","clsx","children","_jsx","htmlFor","InputMask","navigate","useNavigate","_useSearchParams","useSearchParams","_useSearchParams2","setSearchParams","rowId","setRowId","_useState3","_useState4","open","setOpen","_useState5","_useState6","orgData","setOrgData","_useState7","name","state_id","city_id","_useState8","filter","setFilter","t","useTranslation","_useGetAllQuery","useGetAllQuery","key","KEYS","organizationTypeLevel","url","URLS","params","limit","enabled","isNil","organizationTypeLevelList","data","isLoadingTypeLevelList","isLoading","_useGetAllQuery2","organizationTypeMedical","organizationTypeMedicalList","isLoadingTypeMedicalList","_useGetAllQuery3","organizationLegalForm","organizationLegalFormList","isLoadingLegalFormList","_useGetAllQuery4","organizationTypeService","organizationTypeServiceList","isLoadingTypeServiceList","_useGetAllQuery5","organizationTerritory","level","organizationRegions","isLoadingRegions","districts","get","parent_id","_useGetOneQuery","useGetOneQuery","organizations","id","isLoadingOne","_usePostQuery","usePostQuery","listKeyId","addRequest","mutate","isLoadingPost","_usePutQuery","usePutQuery","updateRequest","isLoadingPut","columns","title","render","value","Badge","status","onSubmit","_ref2","tab","forEach","keys","_key","prev","_objectSpread","concat","add","longitude","latitude","rest","management_form","_objectWithoutProperties","_excluded","attributes","display","locations","address","parseFloat","undefined","onSuccess","closeModal","useEffect","console","log","Title","onClick","Plus","src","downloadIcon","alt","Search","handleSearch","val","SelectComponent","setValue","options","map","_option","InputMaskComponent","GridView","getRowId","onRowClick","_ref3","hasActionColumn","listKey","Modal","onClose","classNames","ContentLoader","Tabs","isLabelDisabled","Tab","Form","defaultValues","formRequest","footer","type","Field","required","pattern","message","defaultValue","property","orgIcon","isDisabledSearch","organizationsListForSelect","keyId","isMulti","organizationManagementForm","Names","Locations","Contacts","Dropzone","isEmpty","_Fragment","OrganizationsContainer"],"sourceRoot":""}